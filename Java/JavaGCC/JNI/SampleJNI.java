// Java 20
// OpenJDK 20
// % export PATH="/Users/rajaniapple/Downloads/Software/OpenJDK/JDK20.0.2/jdk-20.0.2.jdk/Contents/Home/bin/":$PATH
// % java --version
// jni.h location
// % export JAVA_HOME="/Users/rajaniapple/Downloads/Software/OpenJDK/JDK20.0.2/jdk-20.0.2.jdk/Contents/Home/"
// % echo $JAVA_HOME


// javac -h . SampleJNI.java
/* DO NOT EDIT THIS FILE - it is machine generated */
/* //
#include <jni.h>
*/ //
/* Header for class SampleJNI */
/* //
#ifndef _Included_SampleJNI
#define _Included_SampleJNI
#ifdef __cplusplus
extern "C" {
#endif
*/ //
/*
 * Class:     SampleJNI
 * Method:    hola
 * Signature: ()V
 */ /* //
JNIEXPORT void JNICALL Java_SampleJNI_hola
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
*/ //


/*
// SampleJNI.c
#include <jni.h>	// JNI header provided by JDK
#include <stdio.h>	// C Standard IO Header
#include "SampleJNI.h"	// Generated header

// Implementation of the native method hola()
JNIEXPORT void JNICALL Java_SampleJNI_hola(JNIEnv *env, jobject thisObj) {
    printf("C code!\n");
    return;
}
*/
// Compile and link
// gcc -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/darwin" -dynamiclib -o libSample.dylib SampleJNI.c
// Or
// Compile 
// gcc -c -fPIC -I${JAVA_HOME}/include -I${JAVA_HOME}/include/darwin SampleJNI.c -o SampleJNI.o
// Link
// gcc -dynamiclib -o libSample.dylib SampleJNI.o -lc

// java -Djava.library.path=. SampleJNI


/*
// SampleJNI.cpp
#include <jni.h>	// JNI header provided by JDK
#include <iostream>    	// C++ standard IO header
#include "SampleJNI.h" 	// Generated header
using namespace std;

// Implementation of the native method hola()
JNIEXPORT void JNICALL Java_SampleJNI_hola(JNIEnv *env, jobject thisObj) {
    cout << "C++ code!" << endl;
    return;
}
*/
// rm -rf libSample.dylib
// g++ -fPIC -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/darwin" -dynamiclib -o libSample.dylib SampleJNI.cpp

// java -Djava.library.path=. SampleJNI


// SampleJNI.java
public class SampleJNI {
    static {
        System.loadLibrary("Sample"); // Load native library // At runtime // This library contains a native method called hola()
    }

    // Declare an instance native method hola() which receives no parameter and returns void
    private native void hola();

    // Call the method method hola()
    public static void main(String[] args) {
        new SampleJNI().hola();  // Create an instance and invoke the native method
    }
}
