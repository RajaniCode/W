###########################################################################################################################

Amazon Elastic Kubernetes Service (Amazon EKS) # Terraform

###########################################################################################################################
===========================================================================================================================

# Cleanup # $HOME

===========================================================================================================================

% ls ~/.terraform.d
% rm -rf ~/.terraform.d


% ls ~/.kube
% rm -rf ~/.kube


% ls ~/.aws
% rm -rf ~/.aws

===========================================================================================================================

# Version

===========================================================================================================================

% terraform version


% aws --version


% eksctl version


[
% aws-iam-authenticator version
]


% kubectl version

===========================================================================================================================
***************************************************************************************************************************

# Prerequisites

# Terraform Community Edition

# Terraform v1.3+ installed locally.

# an AWS account

# the AWS CLI v2.7.0/v1.24.0 or newer, installed and configured

# AWS IAM Authenticator

# kubectl v1.24.0 or newer

***************************************************************************************************************************

# Set up and initialize the Terraform workspace

# In the terminal, clone the example repository.

# This example repository contains configuration to provision a VPC, security groups, and an EKS cluster.

# The configuration defines a new VPC in which to provision the cluster, and uses the public EKS module to create the required resources, including Auto Scaling Groups, security groups, and IAM Roles and Policies.

***************************************************************************************************************************

% cd ~/Desktop/Working/Technology/Kubernetes/Proof-of-Concept/AWS/Terraform

% git clone https://github.com/hashicorp/learn-terraform-provision-eks-cluster

# Change into the repository directory
% cd learn-terraform-provision-eks-cluster

% tree
[
.
├── LICENSE
├── README.md
├── main.tf
├── outputs.tf
├── terraform.tf
└── variables.tf

1 directory, 6 files
]

***************************************************************************************************************************

# Open the main.tf file to review the module configuration.

# The eks_managed_node_groups parameter configures the cluster with three nodes across two node groups.

***************************************************************************************************************************

% cat main.tf 
[
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

provider "aws" {
  region = var.region
}

# Filter out local zones, which are not currently supported 
# with managed node groups
data "aws_availability_zones" "available" {
  filter {
    name   = "opt-in-status"
    values = ["opt-in-not-required"]
  }
}

locals {
  cluster_name = "education-eks-${random_string.suffix.result}"
}

resource "random_string" "suffix" {
  length  = 8
  special = false
}

module "vpc" {
  source  = "terraform-aws-modules/vpc/aws"
  version = "5.0.0"

  name = "education-vpc"

  cidr = "10.0.0.0/16"
  azs  = slice(data.aws_availability_zones.available.names, 0, 3)

  private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  public_subnets  = ["10.0.4.0/24", "10.0.5.0/24", "10.0.6.0/24"]

  enable_nat_gateway   = true
  single_nat_gateway   = true
  enable_dns_hostnames = true

  public_subnet_tags = {
    "kubernetes.io/cluster/${local.cluster_name}" = "shared"
    "kubernetes.io/role/elb"                      = 1
  }

  private_subnet_tags = {
    "kubernetes.io/cluster/${local.cluster_name}" = "shared"
    "kubernetes.io/role/internal-elb"             = 1
  }
}

module "eks" {
  source  = "terraform-aws-modules/eks/aws"
  version = "19.15.3"

  cluster_name    = local.cluster_name
  cluster_version = "1.27"

  vpc_id                         = module.vpc.vpc_id
  subnet_ids                     = module.vpc.private_subnets
  cluster_endpoint_public_access = true

  eks_managed_node_group_defaults = {
    ami_type = "AL2_x86_64"

  }

  eks_managed_node_groups = {
    one = {
      name = "node-group-1"

      instance_types = ["t3.small"]

      min_size     = 1
      max_size     = 3
      desired_size = 2
    }

    two = {
      name = "node-group-2"

      instance_types = ["t3.small"]

      min_size     = 1
      max_size     = 2
      desired_size = 1
    }
  }
}


# https://aws.amazon.com/blogs/containers/amazon-ebs-csi-driver-is-now-generally-available-in-amazon-eks-add-ons/ 
data "aws_iam_policy" "ebs_csi_policy" {
  arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
}

module "irsa-ebs-csi" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-assumable-role-with-oidc"
  version = "4.7.0"

  create_role                   = true
  role_name                     = "AmazonEKSTFEBSCSIRole-${module.eks.cluster_name}"
  provider_url                  = module.eks.oidc_provider
  role_policy_arns              = [data.aws_iam_policy.ebs_csi_policy.arn]
  oidc_fully_qualified_subjects = ["system:serviceaccount:kube-system:ebs-csi-controller-sa"]
}

resource "aws_eks_addon" "ebs-csi" {
  cluster_name             = module.eks.cluster_name
  addon_name               = "aws-ebs-csi-driver"
  addon_version            = "v1.20.0-eksbuild.1"
  service_account_role_arn = module.irsa-ebs-csi.iam_role_arn
  tags = {
    "eks_addon" = "ebs-csi"
    "terraform" = "true"
  }
}
]

***************************************************************************************************************************

# Initialize configuration

***************************************************************************************************************************

# Open the terraform.tf file and comment out the cloud block that configures the Terraform Cloud integration.

# terraform.tf
[
terraform {
  /*
  cloud {
    workspaces {
      name = "learn-terraform-eks"
    }
  }
  */

  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.7.0"
    }
  }
  required_version = ">= 1.3"
  ##...
]

% nano terraform.tf

% cat terraform.tf

***************************************************************************************************************************

# Initialize the configuration

***************************************************************************************************************************

% terraform init
[
Initializing the backend...
Initializing modules...
Downloading registry.terraform.io/terraform-aws-modules/eks/aws 19.15.3 for eks...
- eks in .terraform/modules/eks
- eks.eks_managed_node_group in .terraform/modules/eks/modules/eks-managed-node-group
- eks.eks_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
- eks.fargate_profile in .terraform/modules/eks/modules/fargate-profile
Downloading registry.terraform.io/terraform-aws-modules/kms/aws 1.1.0 for eks.kms...
- eks.kms in .terraform/modules/eks.kms
- eks.self_managed_node_group in .terraform/modules/eks/modules/self-managed-node-group
- eks.self_managed_node_group.user_data in .terraform/modules/eks/modules/_user_data
Downloading registry.terraform.io/terraform-aws-modules/iam/aws 4.7.0 for irsa-ebs-csi...
- irsa-ebs-csi in .terraform/modules/irsa-ebs-csi/modules/iam-assumable-role-with-oidc
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.0.0 for vpc...
- vpc in .terraform/modules/vpc

Initializing provider plugins...
- Reusing previous version of hashicorp/cloudinit from the dependency lock file
- Reusing previous version of hashicorp/aws from the dependency lock file
- Reusing previous version of hashicorp/random from the dependency lock file
- Reusing previous version of hashicorp/kubernetes from the dependency lock file
- Reusing previous version of hashicorp/time from the dependency lock file
- Reusing previous version of hashicorp/tls from the dependency lock file
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)
- Installing hashicorp/kubernetes v2.21.1...
- Installed hashicorp/kubernetes v2.21.1 (signed by HashiCorp)
- Installing hashicorp/time v0.9.1...
- Installed hashicorp/time v0.9.1 (signed by HashiCorp)
- Installing hashicorp/tls v4.0.4...
- Installed hashicorp/tls v4.0.4 (signed by HashiCorp)
- Installing hashicorp/cloudinit v2.3.2...
- Installed hashicorp/cloudinit v2.3.2 (signed by HashiCorp)
- Installing hashicorp/aws v5.7.0...
- Installed hashicorp/aws v5.7.0 (signed by HashiCorp)

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
]

***************************************************************************************************************************

# Provision the EKS cluster

# Run terraform apply to create the cluster and other necessary resources.

# Confirm the operation with a yes.

# This process can take up to 10 minutes.

# Upon completion, Terraform will print the configuration's outputs.

***************************************************************************************************************************

% terraform apply
[
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform planned the following actions, but then encountered a problem:

  # random_string.suffix will be created
  + resource "random_string" "suffix" {
      + id          = (known after apply)
      + length      = 8
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = true
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + region = "us-east-2"
╷
│ Error: configuring Terraform AWS Provider: no valid credential sources for Terraform AWS Provider found.
│ 
│ Please see https://registry.terraform.io/providers/hashicorp/aws
│ for more information about providing credentials.
│ 
│ AWS Error: failed to refresh cached credentials, no EC2 IMDS role found, operation error ec2imds: GetMetadata, request canceled, context deadline exceeded
│ 
│ 
│   with provider["registry.terraform.io/hashicorp/aws"],
│   on main.tf line 4, in provider "aws":
│    4: provider "aws" {
│ 
╵
]

***************************************************************************************************************************
###########################################################################################################################

# AWS IAM

###########################################################################################################################

https://aws.amazon.com

Sign in to the Console

Sign in using root user email

Root user
Account owner that performs tasks requiring unrestricted access.

Root user email address

Next

Root user sign in

Password

Sign in

[
# N. California # us-west-1 #

# Oregon # us-west-2 #
]

# Ohio # us-east-2 #

***************************************************************************************************************************

## IAM ## Manage access to AWS resources ##

https://console.aws.amazon.com/iam/

Search for IAM in the AWS Console and click on IAM in the Services

# Global #

***************************************************************************************************************************

Dashboard

Access management > 
Users

Create user

User name
#**********#
terraform-aws-eks-iam-user
#**********#

[
Provide user access to the AWS Management Console - optional

I want to create an IAM user

Custom password
#**********#
AWS!@#$%67890iam
#**********#

Users must create a new password at next sign-in - Recommended
]

Next

Set permissions

Attach policies directly
Attach a managed policy directly to a user. As a best practice, we recommend attaching policies to a group instead. Then, add the user to the appropriate group.

Permissions policies

#**********#
AdministratorAccess
AmazonEC2FullAccess
AmazonEKSClusterPolicy
AmazonEKSWorkerNodePolicy
AWSCloudFormationFullAccess
AmazonVPCFullAccess
IAMFullAccess
AmazonElasticContainerRegistryPublicFullAccess
[
AmazonEC2ContainerRegistryFullAccess
]
#**********#

Next

Review and create
Review your choices. After you create the user, you can view and download the autogenerated password, if enabled.

User details
[
User name
#**********#
terraform-aws-eks-iam-user
#**********#

Console password type
Custom password

Require password reset
Yes
]

Permissions summary
[
#**********#
Name 						Type				Used as
AdministratorAccess				AWS managed - job function	Permissions policy
AmazonEC2FullAccess				AWS managed			Permissions policy
AmazonEKSClusterPolicy				AWS managed			Permissions policy
AmazonEKSWorkerNodePolicy			AWS managed			Permissions policy
AmazonElasticContainerRegistryPublicFullAccess	AWS managed			Permissions policy
AmazonVPCFullAccess				AWS managed			Permissions policy
AWSCloudFormationFullAccess			AWS managed			Permissions policy
IAMFullAccess					AWS managed			Permissions policy
IAMUserChangePassword				AWS managed			Permissions policy
#**********#
]

NB: # IAMUserChangePassword # Default # Users must create a new password at next sign-in - Recommended

Tags - optional

Create user

"User created successfully"
"You can view and download the user’s password and email instructions for signing in to the AWS Management Console."

Retrieve password
You can view and download the user's password below or email users instructions for signing in to the AWS Management Console. This is the only time you can view and download this password.

Console sign-in details

Console sign-in URL
#**********#
https://<Account ID>.signin.aws.amazon.com/console
#**********#

User name
#**********#
terraform-aws-eks-iam-user
#**********#

Console password
#**********#
AWS!@#$%67890iam
#**********#

#**********#
Download terraform-aws-eks-iam-user_credentials.csv file
#**********#

View user

***************************************************************************************************************************

IAM > Users >

#**********#
terraform-aws-eks-iam-user
#**********#

Summary
[
ARN
#**********#
arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user
#**********#

Console access
Enabled without MFA

Access key 1
Create access key

Created
#**********#
November 30, 2023, 21:57 (UTC+05:30)
#**********#

Last console sign-in
Never
]
Create access key

Access key best practices & alternatives
Avoid using long-term credentials like access keys to improve your security. Consider the following use cases and alternatives.

Use case
Command Line Interface (CLI)
You plan to use this access key to enable the AWS CLI to access your AWS account.

Alternatives recommended
Use AWS CloudShell, a browser-based CLI, to run commands.
Use the AWS CLI V2 and enable authentication through a user in IAM Identity Center.

Confirmation
I understand the above recommendation and want to proceed to create an access key.

Next

Set description tag - optional

Create access key

"Access key created"
"This is the only time that the secret access key can be viewed or downloaded. You cannot recover it later. However, you can create a new access key any time."

Retrieve access keys
Access key
If you lose or forget your secret access key, you cannot retrieve it. Instead, create a new access key and make the old key inactive.

Access key
#**********#
AKIAWECQW54QXXHCAVUZ
#**********#

Secret access key
#**********#
HdYi60qDpYmmzmZk6NgaVxYRobfoiOMxfm8esWzw
#**********#

Access key best practices
Never store your access key in plain text, in a code repository, or in code.
Disable or delete access key when no longer needed.
Enable least-privilege permissions.
Rotate access keys regularly.

#**********#
Download terraform-aws-eks-iam-user_accessKeys.csv file
#**********#

Done

***************************************************************************************************************************

IAM > Users >

#**********#
terraform-aws-eks-iam-user
#**********#

Summary
[
ARN
#**********#
arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user
#**********#

Console access
Enabled without MFA

Access key 1
#**********#
AKIAWECQW54QXXHCAVUZ - Active
#**********#
Never used. Created today.

Created
#**********#
November 30, 2023, 21:57 (UTC+05:30)
#**********#

Last console sign-in
Never

Access key 2
Create access key
]

Permissions
[
Permissions policies (9)
]

Groups
[
User groups membership (0)
]

Tags
[
Tags (0)
]

Security credentials
[
Console sign-in
Console sign-in link
#**********#
https://<Account ID>.signin.aws.amazon.com/console
#**********#

Console password
Updated 6 minutes ago (2023-11-30 21:57 GMT+5:30)

Last console sign-in
Never
]

Access Advisor
Access Advisor shows the services that this user can access and when those services were last accessed. Review this data to remove unused permissions.
[
Allowed services (1)
]

Permissions boundary (not set)
Set a permissions boundary to control the maximum permissions for this user. Use this advanced feature used to delegate permission management to others. 

***************************************************************************************************************************

Sign out

***************************************************************************************************************************

#**********#
https://<Account ID>.signin.aws.amazon.com/console
#**********#

Sign in as IAM user

Account ID (12 digits) or account alias
#**********#
<Account ID>
#**********#

IAM user name
#**********#
terraform-aws-eks-iam-user
#**********#

Password
#**********#
AWS!@#$%67890iam
#**********#
AWS12345^&*()iam
#**********#

***************************************************************************************************************************

# AWS CLI V2

***************************************************************************************************************************

#**********#
% aws configure
AWS Access Key ID [None]: AKIAWECQW54QXXHCAVUZ
AWS Secret Access Key [None]: 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
Default region name [None]: us-east-2
Default output format [None]: yaml
#**********#

% ls ~/.aws/credentials
% cat ~/.aws/credentials

% ls ~/.aws/config
% cat ~/.aws/config

% aws iam list-users
[
Users:
- Arn: arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user
  CreateDate: '2023-11-30T16:27:11+00:00'
  PasswordLastUsed: '2023-11-30T16:39:17+00:00'
  Path: /
  UserId: AIDAWECQW54QZXG4YMWD6
  UserName: terraform-aws-eks-iam-user
]

***************************************************************************************************************************

# Terraform

***************************************************************************************************************************

% terraform apply
[
module.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Reading...
module.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Reading...
module.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Reading...
module.eks.data.aws_partition.current: Reading...
module.irsa-ebs-csi.data.aws_caller_identity.current: Reading...
data.aws_availability_zones.available: Reading...
module.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Reading...
module.eks.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.data.aws_caller_identity.current: Reading...
module.eks.module.kms.data.aws_partition.current: Reading...
data.aws_iam_policy.ebs_csi_policy: Reading...
module.eks.module.kms.data.aws_caller_identity.current: Reading...
module.eks.module.kms.data.aws_partition.current: Read complete after 0s [id=aws]
module.irsa-ebs-csi.data.aws_partition.current: Reading...
module.irsa-ebs-csi.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067]
module.eks.module.kms.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.data.aws_iam_session_context.current: Reading...
module.eks.data.aws_iam_session_context.current: Read complete after 0s [id=arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user]
module.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
data.aws_availability_zones.available: Read complete after 1s [id=us-east-2]
module.irsa-ebs-csi.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
data.aws_iam_policy.ebs_csi_policy: Read complete after 2s [id=arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # aws_eks_addon.ebs-csi will be created
  + resource "aws_eks_addon" "ebs-csi" {
      + addon_name               = "aws-ebs-csi-driver"
      + addon_version            = "v1.20.0-eksbuild.1"
      + arn                      = (known after apply)
      + cluster_name             = (known after apply)
      + configuration_values     = (known after apply)
      + created_at               = (known after apply)
      + id                       = (known after apply)
      + modified_at              = (known after apply)
      + service_account_role_arn = (known after apply)
      + tags                     = {
          + "eks_addon" = "ebs-csi"
          + "terraform" = "true"
        }
      + tags_all                 = {
          + "eks_addon" = "ebs-csi"
          + "terraform" = "true"
        }
    }

  # random_string.suffix will be created
  + resource "random_string" "suffix" {
      + id          = (known after apply)
      + length      = 8
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = true
    }

  # module.eks.data.tls_certificate.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "tls_certificate" "this" {
      + certificates = (known after apply)
      + id           = (known after apply)
      + url          = (known after apply)
    }

  # module.eks.aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = (known after apply)
      + name_prefix       = (known after apply)
      + retention_in_days = 90
      + skip_destroy      = false
      + tags              = (known after apply)
      + tags_all          = (known after apply)
    }

  # module.eks.aws_eks_cluster.this[0] will be created
  + resource "aws_eks_cluster" "this" {
      + arn                       = (known after apply)
      + certificate_authority     = (known after apply)
      + cluster_id                = (known after apply)
      + created_at                = (known after apply)
      + enabled_cluster_log_types = [
          + "api",
          + "audit",
          + "authenticator",
        ]
      + endpoint                  = (known after apply)
      + id                        = (known after apply)
      + identity                  = (known after apply)
      + name                      = (known after apply)
      + platform_version          = (known after apply)
      + role_arn                  = (known after apply)
      + status                    = (known after apply)
      + tags_all                  = (known after apply)
      + version                   = "1.27"

      + encryption_config {
          + resources = [
              + "secrets",
            ]

          + provider {
              + key_arn = (known after apply)
            }
        }

      + kubernetes_network_config {
          + ip_family         = (known after apply)
          + service_ipv4_cidr = (known after apply)
          + service_ipv6_cidr = (known after apply)
        }

      + timeouts {}

      + vpc_config {
          + cluster_security_group_id = (known after apply)
          + endpoint_private_access   = true
          + endpoint_public_access    = true
          + public_access_cidrs       = [
              + "0.0.0.0/0",
            ]
          + security_group_ids        = (known after apply)
          + subnet_ids                = (known after apply)
          + vpc_id                    = (known after apply)
        }
    }

  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0] will be created
  + resource "aws_iam_openid_connect_provider" "oidc_provider" {
      + arn             = (known after apply)
      + client_id_list  = [
          + "sts.amazonaws.com",
        ]
      + id              = (known after apply)
      + tags            = (known after apply)
      + tags_all        = (known after apply)
      + thumbprint_list = (known after apply)
      + url             = (known after apply)
    }

  # module.eks.aws_iam_policy.cluster_encryption[0] will be created
  + resource "aws_iam_policy" "cluster_encryption" {
      + arn         = (known after apply)
      + description = "Cluster encryption policy to allow cluster role to utilize CMK provided"
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = (known after apply)
      + path        = "/"
      + policy      = (known after apply)
      + policy_id   = (known after apply)
      + tags_all    = (known after apply)
    }

  # module.eks.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "eks.amazonaws.com"
                        }
                      + Sid       = "EKSClusterAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = jsonencode(
                {
                  + Statement = [
                      + {
                          + Action   = [
                              + "logs:CreateLogGroup",
                            ]
                          + Effect   = "Deny"
                          + Resource = "*"
                        },
                    ]
                  + Version   = "2012-10-17"
                }
            )
        }
    }

  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0] will be created
  + resource "aws_iam_role_policy_attachment" "cluster_encryption" {
      + id         = (known after apply)
      + policy_arn = (known after apply)
      + role       = (known after apply)
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      + role       = (known after apply)
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      + role       = (known after apply)
    }

  # module.eks.aws_security_group.cluster[0] will be created
  + resource "aws_security_group" "cluster" {
      + arn                    = (known after apply)
      + description            = "EKS cluster security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = (known after apply)
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # module.eks.aws_security_group.node[0] will be created
  + resource "aws_security_group" "node" {
      + arn                    = (known after apply)
      + description            = "EKS node shared security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = (known after apply)
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"] will be created
  + resource "aws_security_group_rule" "cluster" {
      + description              = "Node groups to cluster API"
      + from_port                = 443
      + id                       = (known after apply)
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["egress_all"] will be created
  + resource "aws_security_group_rule" "node" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + description              = "Allow all egress"
      + from_port                = 0
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "egress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_443"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node groups"
      + from_port                = 443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 4443/tcp webhook"
      + from_port                = 4443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 4443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 6443/tcp webhook"
      + from_port                = 6443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 6443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 8443/tcp webhook"
      + from_port                = 8443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 8443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node 9443/tcp webhook"
      + from_port                = 9443
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 9443
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Cluster API to node kubelets"
      + from_port                = 10250
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 10250
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node ingress on ephemeral ports"
      + from_port                = 1025
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 65535
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node CoreDNS"
      + from_port                = 53
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 53
      + type                     = "ingress"
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"] will be created
  + resource "aws_security_group_rule" "node" {
      + description              = "Node to node CoreDNS UDP"
      + from_port                = 53
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "udp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = true
      + source_security_group_id = (known after apply)
      + to_port                  = 53
      + type                     = "ingress"
    }

  # module.eks.time_sleep.this[0] will be created
  + resource "time_sleep" "this" {
      + create_duration = "30s"
      + id              = (known after apply)
      + triggers        = {
          + "cluster_certificate_authority_data" = (known after apply)
          + "cluster_endpoint"                   = (known after apply)
          + "cluster_name"                       = (known after apply)
          + "cluster_version"                    = "1.27"
        }
    }

  # module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "assume_role_with_oidc" {
      + id   = (known after apply)
      + json = (known after apply)
    }

  # module.irsa-ebs-csi.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = (known after apply)
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0] will be created
  + resource "aws_iam_role_policy_attachment" "custom" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
      + role       = (known after apply)
    }

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Name" = "education-vpc-default"
        }
      + tags_all               = {
          + "Name" = "education-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + egress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
        }
      + ingress {
          + action     = "allow"
          + cidr_block = "0.0.0.0/0"
          + from_port  = 0
          + protocol   = "-1"
          + rule_no    = 100
          + to_port    = 0
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Name" = "education-vpc-default"
        }
      + tags_all               = {
          + "Name" = "education-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "education-vpc-default"
        }
      + tags_all               = {
          + "Name" = "education-vpc-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Name" = "education-vpc-us-east-2a"
        }
      + tags_all             = {
          + "Name" = "education-vpc-us-east-2a"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "education-vpc"
        }
      + tags_all = {
          + "Name" = "education-vpc"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "education-vpc-us-east-2a"
        }
      + tags_all             = {
          + "Name" = "education-vpc-us-east-2a"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "education-vpc-private"
        }
      + tags_all         = {
          + "Name" = "education-vpc-private"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Name" = "education-vpc-public"
        }
      + tags_all         = {
          + "Name" = "education-vpc-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.5.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.6.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "education-vpc"
        }
      + tags_all                             = {
          + "Name" = "education-vpc"
        }
    }

  # module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0] will be created
  + resource "aws_eks_node_group" "this" {
      + ami_type               = "AL2_x86_64"
      + arn                    = (known after apply)
      + capacity_type          = (known after apply)
      + cluster_name           = (known after apply)
      + disk_size              = (known after apply)
      + id                     = (known after apply)
      + instance_types         = [
          + "t3.small",
        ]
      + node_group_name        = (known after apply)
      + node_group_name_prefix = "node-group-1-"
      + node_role_arn          = (known after apply)
      + release_version        = (known after apply)
      + resources              = (known after apply)
      + status                 = (known after apply)
      + subnet_ids             = (known after apply)
      + tags                   = {
          + "Name" = "node-group-1"
        }
      + tags_all               = {
          + "Name" = "node-group-1"
        }
      + version                = "1.27"

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + scaling_config {
          + desired_size = 2
          + max_size     = 3
          + min_size     = 1
        }

      + timeouts {}

      + update_config {
          + max_unavailable_percentage = 33
        }
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EKSNodeAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "EKS managed node group IAM role"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "node-group-1-eks-node-group-"
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + description            = "Custom launch template for node-group-1 EKS managed node group"
      + id                     = (known after apply)
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "one-"
      + tags_all               = (known after apply)
      + update_default_version = true
      + vpc_security_group_ids = (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = 2
          + http_tokens                 = "required"
          + instance_metadata_tags      = (known after apply)
        }

      + monitoring {
          + enabled = true
        }

      + tag_specifications {
          + resource_type = "instance"
          + tags          = {
              + "Name" = "node-group-1"
            }
        }
      + tag_specifications {
          + resource_type = "network-interface"
          + tags          = {
              + "Name" = "node-group-1"
            }
        }
      + tag_specifications {
          + resource_type = "volume"
          + tags          = {
              + "Name" = "node-group-1"
            }
        }
    }

  # module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0] will be created
  + resource "aws_eks_node_group" "this" {
      + ami_type               = "AL2_x86_64"
      + arn                    = (known after apply)
      + capacity_type          = (known after apply)
      + cluster_name           = (known after apply)
      + disk_size              = (known after apply)
      + id                     = (known after apply)
      + instance_types         = [
          + "t3.small",
        ]
      + node_group_name        = (known after apply)
      + node_group_name_prefix = "node-group-2-"
      + node_role_arn          = (known after apply)
      + release_version        = (known after apply)
      + resources              = (known after apply)
      + status                 = (known after apply)
      + subnet_ids             = (known after apply)
      + tags                   = {
          + "Name" = "node-group-2"
        }
      + tags_all               = {
          + "Name" = "node-group-2"
        }
      + version                = "1.27"

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + scaling_config {
          + desired_size = 1
          + max_size     = 2
          + min_size     = 1
        }

      + timeouts {}

      + update_config {
          + max_unavailable_percentage = 33
        }
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EKSNodeAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "EKS managed node group IAM role"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "node-group-2-eks-node-group-"
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      + role       = (known after apply)
    }

  # module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + description            = "Custom launch template for node-group-2 EKS managed node group"
      + id                     = (known after apply)
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "two-"
      + tags_all               = (known after apply)
      + update_default_version = true
      + vpc_security_group_ids = (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = 2
          + http_tokens                 = "required"
          + instance_metadata_tags      = (known after apply)
        }

      + monitoring {
          + enabled = true
        }

      + tag_specifications {
          + resource_type = "instance"
          + tags          = {
              + "Name" = "node-group-2"
            }
        }
      + tag_specifications {
          + resource_type = "network-interface"
          + tags          = {
              + "Name" = "node-group-2"
            }
        }
      + tag_specifications {
          + resource_type = "volume"
          + tags          = {
              + "Name" = "node-group-2"
            }
        }
    }

  # module.eks.module.kms.data.aws_iam_policy_document.this[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "this" {
      + id                        = (known after apply)
      + json                      = (known after apply)
      + override_policy_documents = []
      + source_policy_documents   = []

      + statement {
          + actions   = [
              + "kms:CancelKeyDeletion",
              + "kms:Create*",
              + "kms:Delete*",
              + "kms:Describe*",
              + "kms:Disable*",
              + "kms:Enable*",
              + "kms:Get*",
              + "kms:List*",
              + "kms:Put*",
              + "kms:Revoke*",
              + "kms:ScheduleKeyDeletion",
              + "kms:TagResource",
              + "kms:UntagResource",
              + "kms:Update*",
            ]
          + resources = [
              + "*",
            ]
          + sid       = "KeyAdministration"

          + principals {
              + identifiers = [
                  + "arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user",
                ]
              + type        = "AWS"
            }
        }
      + statement {
          + actions   = [
              + "kms:Decrypt",
              + "kms:DescribeKey",
              + "kms:Encrypt",
              + "kms:GenerateDataKey*",
              + "kms:ReEncrypt*",
            ]
          + resources = [
              + "*",
            ]
          + sid       = "KeyUsage"

          + principals {
              + identifiers = [
                  + (known after apply),
                ]
              + type        = "AWS"
            }
        }
    }

  # module.eks.module.kms.aws_kms_alias.this["cluster"] will be created
  + resource "aws_kms_alias" "this" {
      + arn            = (known after apply)
      + id             = (known after apply)
      + name           = (known after apply)
      + name_prefix    = (known after apply)
      + target_key_arn = (known after apply)
      + target_key_id  = (known after apply)
    }

  # module.eks.module.kms.aws_kms_key.this[0] will be created
  + resource "aws_kms_key" "this" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + description                        = (known after apply)
      + enable_key_rotation                = true
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = false
      + policy                             = (known after apply)
      + tags_all                           = (known after apply)
    }

Plan: 63 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_endpoint          = (known after apply)
  + cluster_name              = (known after apply)
  + cluster_security_group_id = (known after apply)
  + region                    = "us-east-2"

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_string.suffix: Creating...
random_string.suffix: Creation complete after 0s [id=vOUQg0d3]
module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0]: Creating...
module.eks.aws_cloudwatch_log_group.this[0]: Creating...
module.vpc.aws_vpc.this[0]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0]: Creating...
module.eks.aws_iam_role.this[0]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0]: Creation complete after 2s [id=node-group-1-eks-node-group-20231130165438756700000002]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creating...
module.eks.aws_cloudwatch_log_group.this[0]: Creation complete after 2s [id=/aws/eks/education-eks-vOUQg0d3/cluster]
module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0]: Creation complete after 2s [id=node-group-2-eks-node-group-20231130165438756000000001]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creating...
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creating...
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creation complete after 1s [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441101000000004]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creation complete after 1s [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441282600000005]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creation complete after 1s [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441284900000006]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Creation complete after 1s [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441440600000007]
module.eks.aws_iam_role.this[0]: Creation complete after 3s [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Creating...
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creating...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Reading...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=2351407999]
module.eks.module.kms.aws_kms_key.this[0]: Creating...
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Creation complete after 1s [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441643400000008]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Creation complete after 1s [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441652000000009]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Creation complete after 1s [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544238080000000a]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Creation complete after 1s [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544240380000000b]
module.vpc.aws_vpc.this[0]: Still creating... [10s elapsed]
module.eks.module.kms.aws_kms_key.this[0]: Still creating... [10s elapsed]
module.vpc.aws_vpc.this[0]: Creation complete after 14s [id=vpc-0e081eeaaf3ae57dc]
module.vpc.aws_route_table.public[0]: Creating...
module.vpc.aws_internet_gateway.this[0]: Creating...
module.vpc.aws_route_table.private[0]: Creating...
module.vpc.aws_default_security_group.this[0]: Creating...
module.vpc.aws_subnet.private[1]: Creating...
module.vpc.aws_subnet.private[0]: Creating...
module.vpc.aws_subnet.private[2]: Creating...
module.vpc.aws_default_route_table.default[0]: Creating...
module.vpc.aws_default_network_acl.this[0]: Creating...
module.vpc.aws_default_route_table.default[0]: Creation complete after 2s [id=rtb-0f7e442a816d7d567]
module.vpc.aws_subnet.public[0]: Creating...
module.vpc.aws_route_table.public[0]: Creation complete after 2s [id=rtb-0e876af0d60a6c0ee]
module.vpc.aws_subnet.public[1]: Creating...
module.vpc.aws_subnet.private[2]: Creation complete after 2s [id=subnet-00a67b7cb5448e9dd]
module.vpc.aws_subnet.private[1]: Creation complete after 2s [id=subnet-0c8ca28af86a12a6a]
module.vpc.aws_subnet.private[0]: Creation complete after 3s [id=subnet-041ce879edf62a575]
module.vpc.aws_subnet.public[2]: Creating...
module.eks.aws_security_group.node[0]: Creating...
module.eks.aws_security_group.cluster[0]: Creating...
module.vpc.aws_route_table.private[0]: Creation complete after 3s [id=rtb-0a8c8e9ca2eb8aca9]
module.vpc.aws_route_table_association.private[0]: Creating...
module.vpc.aws_internet_gateway.this[0]: Creation complete after 3s [id=igw-0f620616f8f44a3f7]
module.vpc.aws_route_table_association.private[1]: Creating...
module.vpc.aws_subnet.public[0]: Creation complete after 2s [id=subnet-0500646d0d0be020e]
module.vpc.aws_route_table_association.private[2]: Creating...
module.vpc.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-034a8afe41b3ad23f]
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_subnet.public[1]: Creation complete after 2s [id=subnet-0261e4261cd118efa]
module.vpc.aws_subnet.public[2]: Creation complete after 1s [id=subnet-078ba8caa49d21285]
module.vpc.aws_route_table_association.public[1]: Creating...
module.vpc.aws_route.public_internet_gateway[0]: Creating...
module.vpc.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-042ca20817ea4bb9f]
module.vpc.aws_route_table_association.public[2]: Creating...
module.vpc.aws_default_security_group.this[0]: Creation complete after 4s [id=sg-0e553a4c916701952]
module.vpc.aws_route_table_association.public[0]: Creating...
module.vpc.aws_default_network_acl.this[0]: Creation complete after 4s [id=acl-03d971568d75cef31]
module.vpc.aws_route_table_association.private[2]: Creation complete after 1s [id=rtbassoc-03570b266bc35955f]
module.vpc.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-0662e7314af390e90]
module.vpc.aws_nat_gateway.this[0]: Creating...
module.vpc.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-00b371b97e5b8d8fc]
module.vpc.aws_route_table_association.public[2]: Creation complete after 1s [id=rtbassoc-0c191b166aff05fd9]
module.vpc.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-076e5f68a269c1d1e]
module.vpc.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0e876af0d60a6c0ee1080289494]
module.eks.aws_security_group.cluster[0]: Creation complete after 3s [id=sg-03fc1f50409acf377]
module.eks.aws_security_group.node[0]: Creation complete after 3s [id=sg-002b4d5ce0511dac6]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["egress_all"]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Creation complete after 1s [id=sgrule-3369464149]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Creation complete after 2s [id=sgrule-2442938734]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creating...
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Creation complete after 1s [id=sgrule-2022173418]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creating...
module.eks.aws_security_group_rule.node["egress_all"]: Creation complete after 3s [id=sgrule-2857643913]
module.eks.module.kms.aws_kms_key.this[0]: Still creating... [20s elapsed]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Creation complete after 4s [id=sgrule-2893333150]
module.eks.module.kms.aws_kms_key.this[0]: Creation complete after 22s [id=1dd5669c-7d5b-44a5-a547-85d6782b36db]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Creating...
module.eks.aws_iam_policy.cluster_encryption[0]: Creating...
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Creation complete after 5s [id=sgrule-902032001]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Creation complete after 0s [id=alias/eks/education-eks-vOUQg0d3]
module.eks.aws_iam_policy.cluster_encryption[0]: Creation complete after 1s [id=arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creating...
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Creation complete after 6s [id=sgrule-153776101]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Creation complete after 0s [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-20231130165505077600000010]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Creation complete after 7s [id=sgrule-232965749]
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Creation complete after 8s [id=sgrule-315337442]
module.vpc.aws_nat_gateway.this[0]: Still creating... [10s elapsed]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Creation complete after 7s [id=sgrule-710200228]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Creation complete after 8s [id=sgrule-3683241332]
module.eks.aws_eks_cluster.this[0]: Creating...
module.vpc.aws_nat_gateway.this[0]: Still creating... [20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m0s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [1m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Creation complete after 1m48s [id=nat-048bf54baf6022702]
module.vpc.aws_route.private_nat_gateway[0]: Creating...
module.vpc.aws_route.private_nat_gateway[0]: Creation complete after 2s [id=r-rtb-0a8c8e9ca2eb8aca91080289494]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [1m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [2m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [3m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [4m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [5m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [6m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still creating... [7m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Creation complete after 7m44s [id=education-eks-vOUQg0d3]
module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0]: Reading...
module.eks.data.tls_certificate.this[0]: Reading...
module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0]: Read complete after 0s [id=1889806982]
module.eks.time_sleep.this[0]: Creating...
module.irsa-ebs-csi.aws_iam_role.this[0]: Creating...
module.eks.data.tls_certificate.this[0]: Read complete after 1s [id=7c72bb110518075cbb071e57d125fc3aa17238d9]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creating...
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Creation complete after 1s [id=arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A]
module.irsa-ebs-csi.aws_iam_role.this[0]: Creation complete after 3s [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3]
aws_eks_addon.ebs-csi: Creating...
module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]: Creating...
module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]: Creation complete after 0s [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3-20231130170256076800000012]
module.eks.time_sleep.this[0]: Still creating... [10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10s elapsed]
module.eks.time_sleep.this[0]: Still creating... [20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [20s elapsed]
module.eks.time_sleep.this[0]: Still creating... [30s elapsed]
module.eks.time_sleep.this[0]: Creation complete after 30s [id=2023-11-30T17:03:23Z]
module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0]: Creating...
module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0]: Creation complete after 2s [id=lt-029d67d08b3fc0343]
module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0]: Creation complete after 2s [id=lt-081b2816ca90d55af]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Creating...
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Creating...
aws_eks_addon.ebs-csi: Still creating... [30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [50s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [1m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [1m10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [1m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m0s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [1m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [1m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [1m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [1m40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still creating... [1m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Creation complete after 1m20s [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019]
aws_eks_addon.ebs-csi: Still creating... [1m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [1m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [2m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [2m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [3m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [3m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [4m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [4m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [5m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [5m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [6m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [6m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [7m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [7m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [8m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [9m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [9m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still creating... [8m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [9m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Creation complete after 8m59s [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017]
aws_eks_addon.ebs-csi: Still creating... [9m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [9m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [9m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [10m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [11m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [12m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [13m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m10s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m20s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m30s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m40s elapsed]
aws_eks_addon.ebs-csi: Still creating... [14m50s elapsed]
aws_eks_addon.ebs-csi: Still creating... [15m0s elapsed]
aws_eks_addon.ebs-csi: Still creating... [15m10s elapsed]
aws_eks_addon.ebs-csi: Creation complete after 15m10s [id=education-eks-vOUQg0d3:aws-ebs-csi-driver]

Apply complete! Resources: 63 added, 0 changed, 0 destroyed.

Outputs:

cluster_endpoint = "https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com"
cluster_name = "education-eks-vOUQg0d3"
cluster_security_group_id = "sg-03fc1f50409acf377"
region = "us-east-2"
]

***************************************************************************************************************************

# Elastic Kubernetes Service

***************************************************************************************************************************

% aws eks list-clusters --region=us-east-2
[
clusters:
- education-eks-vOUQg0d3
]

% aws eks describe-cluster --name=education-eks-vOUQg0d3 --region=us-east-2 --query=cluster.status
[
"ACTIVE"
]

% aws eks describe-cluster --name=education-eks-vOUQg0d3 --region=us-east-2 --query=cluster.endpoint
[
"https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com"
]

% aws eks describe-cluster --name=education-eks-vOUQg0d3 --region=us-east-2
[
cluster:
  arn: arn:aws:eks:us-east-2:<Account ID>:cluster/education-eks-vOUQg0d3
  certificateAuthority:
    data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCRENDQWV5Z0F3SUJBZ0lIYWorampRZXp0REFOQmdrcWhraUc5dzBCQVFzRkFEQVZNUk13RVFZRFZRUUQKRXdwcmRXSmxjbTVsZEdWek1CNFhEVEl6TVRFek1ERTJOVFF3TUZvWERUTXpNVEV5TnpFMk5Ua3dNRm93RlRFVApNQkVHQTFVRUF4TUthM1ZpWlhKdVpYUmxjekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DCmdnRUJBTzBUTy9jSVE5Z080M29WRWpSaUh1bG4yTXJqSW9ScGFZdW1TWDlPTTc5L082anZWQmN2Rjk0M1RVU2gKSndDU0NUTWVudGYyZ2ZFSDI0UzcwTU1VdDcrQis1eTE1am5TZ0lTdjFRUW01S3VOT2FjN2tRV0dpTTVmMVV4NApPbGpzVklGVmYzWnM1OW0yektJTDEwWjBMVE0vOWo0bXNHbWRDU1J5SGJ5NFBaczJKQUU1NDZIZlhBZ2Z0S3h5ClVMNTkweUs1VnpJVDRSK2tteGVHSkk1enpsemlHTldUZFl1V0dQdDRpZU5xdU5SUVgvU2Rnc3BXLzBNeEFtN0QKL3hiRzM0L3gyL2JCN2t4UTlXZFBna0ovK2VYQVJWNGFJamV6QnoraGxxZThqZHBjTTQ0WHpEVmE2bXJuREJUTAp6amUwTFJ0Q295dXNkQXdiSlFyWGVHS2hMY2NDQXdFQUFhTlpNRmN3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHCkExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPcW9jazlIa0JJUExORTVWNlNuK0RsdkJOOE1CVUcKQTFVZEVRUU9NQXlDQ210MVltVnlibVYwWlhNd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMcWVCYnoxV2xWawpHcTR4WjFyTFNTWkttWDVEOHhmSTljQkQxbVpWcXRDL2hPVEt0YnB2RkhYU0FpNkthREVBeFpIRS81UUx6MHFLCit5anpWdGNGSEt4K2wwQ2hFa25PSWhMWkVmSjJNaWtvdGhIN0c1Y3FuRmxCelUrbFJEb2MzZTBiekVMMHJVSVUKMjZ3QWJTNnd4a3lsRlV6WjZseHNCUndzSG8xNWZLUnQybXp5VWUySkRERUpXODhWZ3pNWll6djNKZDUwNFJoMApzSnFPWmhQcS8zVWo0eVBIb1d0N0pmc3FkT3FHRmszN2R6dVF3ZTBia0J4UmRJcHhZUWNqWGRMOHg1bURCQjNmCjRtOW1tQnlUS3RzQlc0WUU5bEVKNVFpUU5RQWx1azRCRmVZTjlNV3Nsc3VtdzNPaXA0NHRJME1OUjduMk9XVFoKb0Vrc1VmZ3lXdU09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  createdAt: '2023-11-30T22:25:11.997000+05:30'
  encryptionConfig:
  - provider:
      keyArn: arn:aws:kms:us-east-2:<Account ID>:key/1dd5669c-7d5b-44a5-a547-85d6782b36db
    resources:
    - secrets
  endpoint: https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com
  identity:
    oidc:
      issuer: https://oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A
  kubernetesNetworkConfig:
    ipFamily: ipv4
    serviceIpv4Cidr: 172.20.0.0/16
  logging:
    clusterLogging:
    - enabled: true
      types:
      - api
      - audit
      - authenticator
    - enabled: false
      types:
      - controllerManager
      - scheduler
  name: education-eks-vOUQg0d3
  platformVersion: eks.8
  resourcesVpcConfig:
    clusterSecurityGroupId: sg-0619b722592d543d6
    endpointPrivateAccess: true
    endpointPublicAccess: true
    publicAccessCidrs:
    - 0.0.0.0/0
    securityGroupIds:
    - sg-03fc1f50409acf377
    subnetIds:
    - subnet-041ce879edf62a575
    - subnet-00a67b7cb5448e9dd
    - subnet-0c8ca28af86a12a6a
    vpcId: vpc-0e081eeaaf3ae57dc
  roleArn: arn:aws:iam::<Account ID>:role/education-eks-vOUQg0d3-cluster-20231130165438758400000003
  status: ACTIVE
  tags: {}
  version: '1.27'
]

===========================================================================================================================

# eksctl

===========================================================================================================================

% eksctl get cluster
[
NAME			REGION		EKSCTL CREATED
education-eks-vOUQg0d3	us-east-2	False
]

% eksctl get iamidentitymapping --cluster education-eks-vOUQg0d3 --region=us-east-2
[
ARN											USERNAME				GROUPS				ACCOUNT
arn:aws:iam::<Account ID>:role/node-group-1-eks-node-group-20231130165438756700000002	system:node:{{EC2PrivateDNSName}}	system:bootstrappers,system:nodes	
arn:aws:iam::<Account ID>:role/node-group-2-eks-node-group-20231130165438756000000001	system:node:{{EC2PrivateDNSName}}	system:bootstrappers,system:nodes	
]

===========================================================================================================================
***************************************************************************************************************************

# CloudFormation

***************************************************************************************************************************

% aws cloudformation list-stacks --region=us-east-2
[
StackSummaries: []
]

% aws cloudformation list-stacks --region=us-east-2 --stack-status-filter CREATE_COMPLETE
[
StackSummaries: []
]

***************************************************************************************************************************

# VPC

***************************************************************************************************************************
===========================================================================================================================

# VPCs

===========================================================================================================================

% aws ec2 describe-vpcs --region=us-east-2
[
Vpcs:
- CidrBlock: 10.0.0.0/16
  CidrBlockAssociationSet:
  - AssociationId: vpc-cidr-assoc-088c10a5ee2974368
    CidrBlock: 10.0.0.0/16
    CidrBlockState:
      State: associated
  DhcpOptionsId: dopt-02d1a15986e5ddfc7
  InstanceTenancy: default
  IsDefault: false
  OwnerId: '<Account ID>'
  State: available
  Tags:
  - Key: Name
    Value: education-vpc
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# NAT Gateways

===========================================================================================================================

% aws ec2 describe-nat-gateways --region=us-east-2
[
NatGateways:
- ConnectivityType: public
  CreateTime: '2023-11-30T16:54:58+00:00'
  NatGatewayAddresses:
  - AllocationId: eipalloc-0662e7314af390e90
    AssociationId: eipassoc-0a35031539a56374f
    IsPrimary: true
    NetworkInterfaceId: eni-0fbb6ac73e1c04702
    PrivateIp: 10.0.4.205
    PublicIp: 3.22.33.13
    Status: succeeded
  NatGatewayId: nat-048bf54baf6022702
  State: available
  SubnetId: subnet-0500646d0d0be020e
  Tags:
  - Key: Name
    Value: education-vpc-us-east-2a
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# Subnets

===========================================================================================================================

% aws ec2 describe-subnets --region=us-east-2
[
Subnets:
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2a
  AvailabilityZoneId: use2-az1
  AvailableIpAddressCount: 230
  CidrBlock: 10.0.1.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-041ce879edf62a575
  SubnetId: subnet-041ce879edf62a575
  Tags:
  - Key: Name
    Value: education-vpc-private-us-east-2a
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  - Key: kubernetes.io/role/internal-elb
    Value: '1'
  VpcId: vpc-0e081eeaaf3ae57dc
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2a
  AvailabilityZoneId: use2-az1
  AvailableIpAddressCount: 250
  CidrBlock: 10.0.4.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0500646d0d0be020e
  SubnetId: subnet-0500646d0d0be020e
  Tags:
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  - Key: kubernetes.io/role/elb
    Value: '1'
  - Key: Name
    Value: education-vpc-public-us-east-2a
  VpcId: vpc-0e081eeaaf3ae57dc
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2b
  AvailabilityZoneId: use2-az2
  AvailableIpAddressCount: 250
  CidrBlock: 10.0.2.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0c8ca28af86a12a6a
  SubnetId: subnet-0c8ca28af86a12a6a
  Tags:
  - Key: kubernetes.io/role/internal-elb
    Value: '1'
  - Key: Name
    Value: education-vpc-private-us-east-2b
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  VpcId: vpc-0e081eeaaf3ae57dc
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2b
  AvailabilityZoneId: use2-az2
  AvailableIpAddressCount: 251
  CidrBlock: 10.0.5.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0261e4261cd118efa
  SubnetId: subnet-0261e4261cd118efa
  Tags:
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  - Key: Name
    Value: education-vpc-public-us-east-2b
  - Key: kubernetes.io/role/elb
    Value: '1'
  VpcId: vpc-0e081eeaaf3ae57dc
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2c
  AvailabilityZoneId: use2-az3
  AvailableIpAddressCount: 243
  CidrBlock: 10.0.3.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-00a67b7cb5448e9dd
  SubnetId: subnet-00a67b7cb5448e9dd
  Tags:
  - Key: Name
    Value: education-vpc-private-us-east-2c
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  - Key: kubernetes.io/role/internal-elb
    Value: '1'
  VpcId: vpc-0e081eeaaf3ae57dc
- AssignIpv6AddressOnCreation: false
  AvailabilityZone: us-east-2c
  AvailabilityZoneId: use2-az3
  AvailableIpAddressCount: 251
  CidrBlock: 10.0.6.0/24
  DefaultForAz: false
  EnableDns64: false
  Ipv6CidrBlockAssociationSet: []
  Ipv6Native: false
  MapCustomerOwnedIpOnLaunch: false
  MapPublicIpOnLaunch: false
  OwnerId: '<Account ID>'
  PrivateDnsNameOptionsOnLaunch:
    EnableResourceNameDnsAAAARecord: false
    EnableResourceNameDnsARecord: false
    HostnameType: ip-name
  State: available
  SubnetArn: arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-078ba8caa49d21285
  SubnetId: subnet-078ba8caa49d21285
  Tags:
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: shared
  - Key: Name
    Value: education-vpc-public-us-east-2c
  - Key: kubernetes.io/role/elb
    Value: '1'
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# VPC Peering Connections

===========================================================================================================================

% aws ec2 describe-vpc-peering-connections --region=us-east-2
[
VpcPeeringConnections: []
]

===========================================================================================================================

# Route tables

===========================================================================================================================

% aws ec2 describe-route-tables --region=us-east-2
[
RouteTables:
- Associations:
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-034a8afe41b3ad23f
    RouteTableId: rtb-0a8c8e9ca2eb8aca9
    SubnetId: subnet-041ce879edf62a575
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-042ca20817ea4bb9f
    RouteTableId: rtb-0a8c8e9ca2eb8aca9
    SubnetId: subnet-0c8ca28af86a12a6a
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-03570b266bc35955f
    RouteTableId: rtb-0a8c8e9ca2eb8aca9
    SubnetId: subnet-00a67b7cb5448e9dd
  OwnerId: '<Account ID>'
  PropagatingVgws: []
  RouteTableId: rtb-0a8c8e9ca2eb8aca9
  Routes:
  - DestinationCidrBlock: 10.0.0.0/16
    GatewayId: local
    Origin: CreateRouteTable
    State: active
  - DestinationCidrBlock: 0.0.0.0/0
    NatGatewayId: nat-048bf54baf6022702
    Origin: CreateRoute
    State: active
  Tags:
  - Key: Name
    Value: education-vpc-private
  VpcId: vpc-0e081eeaaf3ae57dc
- Associations:
  - AssociationState:
      State: associated
    Main: true
    RouteTableAssociationId: rtbassoc-022a35ee40788d76d
    RouteTableId: rtb-0f7e442a816d7d567
  OwnerId: '<Account ID>'
  PropagatingVgws: []
  RouteTableId: rtb-0f7e442a816d7d567
  Routes:
  - DestinationCidrBlock: 10.0.0.0/16
    GatewayId: local
    Origin: CreateRouteTable
    State: active
  Tags:
  - Key: Name
    Value: education-vpc-default
  VpcId: vpc-0e081eeaaf3ae57dc
- Associations:
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-0c191b166aff05fd9
    RouteTableId: rtb-0e876af0d60a6c0ee
    SubnetId: subnet-078ba8caa49d21285
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-076e5f68a269c1d1e
    RouteTableId: rtb-0e876af0d60a6c0ee
    SubnetId: subnet-0500646d0d0be020e
  - AssociationState:
      State: associated
    Main: false
    RouteTableAssociationId: rtbassoc-00b371b97e5b8d8fc
    RouteTableId: rtb-0e876af0d60a6c0ee
    SubnetId: subnet-0261e4261cd118efa
  OwnerId: '<Account ID>'
  PropagatingVgws: []
  RouteTableId: rtb-0e876af0d60a6c0ee
  Routes:
  - DestinationCidrBlock: 10.0.0.0/16
    GatewayId: local
    Origin: CreateRouteTable
    State: active
  - DestinationCidrBlock: 0.0.0.0/0
    GatewayId: igw-0f620616f8f44a3f7
    Origin: CreateRoute
    State: active
  Tags:
  - Key: Name
    Value: education-vpc-public
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# Network ACLs

===========================================================================================================================

% aws ec2  describe-network-acls --region=us-east-2
[
NetworkAcls:
- Associations:
  - NetworkAclAssociationId: aclassoc-05649bc507195834a
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-0261e4261cd118efa
  - NetworkAclAssociationId: aclassoc-0e93bba7c3f45f458
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-0500646d0d0be020e
  - NetworkAclAssociationId: aclassoc-03180443dbb836ee6
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-00a67b7cb5448e9dd
  - NetworkAclAssociationId: aclassoc-05e8c99cdc223d40f
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-0c8ca28af86a12a6a
  - NetworkAclAssociationId: aclassoc-059ef65d78cae8531
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-041ce879edf62a575
  - NetworkAclAssociationId: aclassoc-00465c0a5c124ad88
    NetworkAclId: acl-03d971568d75cef31
    SubnetId: subnet-078ba8caa49d21285
  Entries:
  - CidrBlock: 0.0.0.0/0
    Egress: true
    Protocol: '-1'
    RuleAction: allow
    RuleNumber: 100
  - Egress: true
    Ipv6CidrBlock: ::/0
    Protocol: '-1'
    RuleAction: allow
    RuleNumber: 101
  - CidrBlock: 0.0.0.0/0
    Egress: true
    Protocol: '-1'
    RuleAction: deny
    RuleNumber: 32767
  - CidrBlock: 0.0.0.0/0
    Egress: false
    Protocol: '-1'
    RuleAction: allow
    RuleNumber: 100
  - Egress: false
    Ipv6CidrBlock: ::/0
    Protocol: '-1'
    RuleAction: allow
    RuleNumber: 101
  - CidrBlock: 0.0.0.0/0
    Egress: false
    Protocol: '-1'
    RuleAction: deny
    RuleNumber: 32767
  IsDefault: true
  NetworkAclId: acl-03d971568d75cef31
  OwnerId: '<Account ID>'
  Tags:
  - Key: Name
    Value: education-vpc-default
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# Internet gateways

===========================================================================================================================

% aws ec2 describe-internet-gateways --region=us-east-2
[
InternetGateways:
- Attachments:
  - State: available
    VpcId: vpc-0e081eeaaf3ae57dc
  InternetGatewayId: igw-0f620616f8f44a3f7
  OwnerId: '<Account ID>'
  Tags:
  - Key: Name
    Value: education-vpc
]

===========================================================================================================================

# Security Groups

===========================================================================================================================

% aws ec2 describe-security-groups --region=us-east-2
[
SecurityGroups:
- Description: default VPC security group
  GroupId: sg-0e553a4c916701952
  GroupName: default
  IpPermissions: []
  IpPermissionsEgress: []
  OwnerId: '<Account ID>'
  Tags:
  - Key: Name
    Value: education-vpc-default
  VpcId: vpc-0e081eeaaf3ae57dc
- Description: EKS created security group applied to ENI that is attached to EKS Control
    Plane master nodes, as well as any managed workloads.
  GroupId: sg-0619b722592d543d6
  GroupName: eks-cluster-sg-education-eks-vOUQg0d3-1105027470
  IpPermissions:
  - IpProtocol: '-1'
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    UserIdGroupPairs:
    - GroupId: sg-0619b722592d543d6
      UserId: '<Account ID>'
  IpPermissionsEgress:
  - IpProtocol: '-1'
    IpRanges:
    - CidrIp: 0.0.0.0/0
    Ipv6Ranges: []
    PrefixListIds: []
    UserIdGroupPairs: []
  OwnerId: '<Account ID>'
  Tags:
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: owned
  - Key: aws:eks:cluster-name
    Value: education-eks-vOUQg0d3
  - Key: Name
    Value: eks-cluster-sg-education-eks-vOUQg0d3-1105027470
  VpcId: vpc-0e081eeaaf3ae57dc
- Description: EKS node shared security group
  GroupId: sg-002b4d5ce0511dac6
  GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
  IpPermissions:
  - FromPort: 6443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 6443
    UserIdGroupPairs:
    - Description: Cluster API to node 6443/tcp webhook
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  - FromPort: 9443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 9443
    UserIdGroupPairs:
    - Description: Cluster API to node 9443/tcp webhook
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  - FromPort: 1025
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 65535
    UserIdGroupPairs:
    - Description: Node to node ingress on ephemeral ports
      GroupId: sg-002b4d5ce0511dac6
      UserId: '<Account ID>'
  - FromPort: 8443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 8443
    UserIdGroupPairs:
    - Description: Cluster API to node 8443/tcp webhook
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  - FromPort: 10250
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 10250
    UserIdGroupPairs:
    - Description: Cluster API to node kubelets
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  - FromPort: 53
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 53
    UserIdGroupPairs:
    - Description: Node to node CoreDNS
      GroupId: sg-002b4d5ce0511dac6
      UserId: '<Account ID>'
  - FromPort: 53
    IpProtocol: udp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 53
    UserIdGroupPairs:
    - Description: Node to node CoreDNS UDP
      GroupId: sg-002b4d5ce0511dac6
      UserId: '<Account ID>'
  - FromPort: 4443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 4443
    UserIdGroupPairs:
    - Description: Cluster API to node 4443/tcp webhook
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  - FromPort: 443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 443
    UserIdGroupPairs:
    - Description: Cluster API to node groups
      GroupId: sg-03fc1f50409acf377
      UserId: '<Account ID>'
  IpPermissionsEgress:
  - IpProtocol: '-1'
    IpRanges:
    - CidrIp: 0.0.0.0/0
      Description: Allow all egress
    Ipv6Ranges: []
    PrefixListIds: []
    UserIdGroupPairs: []
  OwnerId: '<Account ID>'
  Tags:
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: owned
  - Key: Name
    Value: education-eks-vOUQg0d3-node
  VpcId: vpc-0e081eeaaf3ae57dc
- Description: EKS cluster security group
  GroupId: sg-03fc1f50409acf377
  GroupName: education-eks-vOUQg0d3-cluster-2023113016545552740000000d
  IpPermissions:
  - FromPort: 443
    IpProtocol: tcp
    IpRanges: []
    Ipv6Ranges: []
    PrefixListIds: []
    ToPort: 443
    UserIdGroupPairs:
    - Description: Node groups to cluster API
      GroupId: sg-002b4d5ce0511dac6
      UserId: '<Account ID>'
  IpPermissionsEgress: []
  OwnerId: '<Account ID>'
  Tags:
  - Key: Name
    Value: education-eks-vOUQg0d3-cluster
  VpcId: vpc-0e081eeaaf3ae57dc
]

===========================================================================================================================

# Egress only internet gateways

===========================================================================================================================

% aws ec2 describe-egress-only-internet-gateways --region=us-east-2
[
EgressOnlyInternetGateways: []
]

===========================================================================================================================

# Customer Gateways

===========================================================================================================================

% aws ec2 describe-customer-gateways --region=us-east-2
[
CustomerGateways: []
]

===========================================================================================================================

# DHCP option sets

===========================================================================================================================

% aws ec2 describe-dhcp-options --region=us-east-2
[
DhcpOptions:
- DhcpConfigurations:
  - Key: domain-name
    Values:
    - Value: us-east-2.compute.internal
  - Key: domain-name-servers
    Values:
    - Value: AmazonProvidedDNS
  DhcpOptionsId: dopt-02d1a15986e5ddfc7
  OwnerId: '<Account ID>'
  Tags: []
]

===========================================================================================================================

# Virtual Private Gateways

===========================================================================================================================

% aws ec2 describe-vpn-gateways --region=us-east-2
[
VpnGateways: []
]

===========================================================================================================================

# Endpoints

===========================================================================================================================

% aws ec2 describe-vpc-endpoints --region=us-east-2
[
VpcEndpoints: []
]

===========================================================================================================================

# Site-to-Site VPN Connections

===========================================================================================================================

% aws ec2 describe-vpn-connections --region=us-east-2
[
VpnConnections: []
]

===========================================================================================================================

# Instance Connect Endpoints

===========================================================================================================================

% aws ec2 describe-instance-connect-endpoints --region=us-east-2
[
InstanceConnectEndpoints: []
]

===========================================================================================================================

# Running Instances

===========================================================================================================================

% aws ec2 describe-instances --region=us-east-2
[
Reservations:
- Groups: []
  Instances:
  - AmiLaunchIndex: 0
    Architecture: x86_64
    BlockDeviceMappings:
    - DeviceName: /dev/xvda
      Ebs:
        AttachTime: '2023-11-30T17:03:45+00:00'
        DeleteOnTermination: true
        Status: attached
        VolumeId: vol-0a9931523a6030653
    CapacityReservationSpecification:
      CapacityReservationPreference: open
    ClientToken: fleet-373f4b8c-f124-4c9e-ae9a-258a765263ee-0
    CpuOptions:
      CoreCount: 1
      ThreadsPerCore: 2
    CurrentInstanceBootMode: legacy-bios
    EbsOptimized: false
    EnaSupport: true
    EnclaveOptions:
      Enabled: false
    HibernationOptions:
      Configured: false
    Hypervisor: xen
    IamInstanceProfile:
      Arn: arn:aws:iam::<Account ID>:instance-profile/eks-98c61097-b66b-4081-e61e-4d7ed690cc37
      Id: AIPAWECQW54QQRXJFJRWG
    ImageId: ami-01b27980d69f7f2aa
    InstanceId: i-0d99186f2be39de71
    InstanceType: t3.small
    LaunchTime: '2023-11-30T17:03:44+00:00'
    MaintenanceOptions:
      AutoRecovery: default
    MetadataOptions:
      HttpEndpoint: enabled
      HttpProtocolIpv6: disabled
      HttpPutResponseHopLimit: 2
      HttpTokens: required
      InstanceMetadataTags: disabled
      State: applied
    Monitoring:
      State: enabled
    NetworkInterfaces:
    - Attachment:
        AttachTime: '2023-11-30T17:04:28+00:00'
        AttachmentId: eni-attach-0a3d5d9aefadcd8e5
        DeleteOnTermination: true
        DeviceIndex: 1
        NetworkCardIndex: 0
        Status: attached
      Description: aws-K8S-i-0d99186f2be39de71
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 02:b8:d7:32:04:f9
      NetworkInterfaceId: eni-09af9c310b4919b41
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-1-75.us-east-2.compute.internal
      PrivateIpAddress: 10.0.1.75
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-1-75.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.75
      - Primary: false
        PrivateDnsName: ip-10-0-1-161.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.161
      - Primary: false
        PrivateDnsName: ip-10-0-1-131.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.131
      - Primary: false
        PrivateDnsName: ip-10-0-1-116.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.116
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-041ce879edf62a575
      VpcId: vpc-0e081eeaaf3ae57dc
    - Attachment:
        AttachTime: '2023-11-30T17:04:42+00:00'
        AttachmentId: eni-attach-0cf20491e3b9d3319
        DeleteOnTermination: true
        DeviceIndex: 2
        NetworkCardIndex: 0
        Status: attached
      Description: aws-K8S-i-0d99186f2be39de71
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 02:4f:ca:d1:3d:8f
      NetworkInterfaceId: eni-0f79a5a0f87655136
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-1-85.us-east-2.compute.internal
      PrivateIpAddress: 10.0.1.85
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-1-85.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.85
      - Primary: false
        PrivateDnsName: ip-10-0-1-133.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.133
      - Primary: false
        PrivateDnsName: ip-10-0-1-39.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.39
      - Primary: false
        PrivateDnsName: ip-10-0-1-40.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.40
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-041ce879edf62a575
      VpcId: vpc-0e081eeaaf3ae57dc
    - Attachment:
        AttachTime: '2023-11-30T17:03:44+00:00'
        AttachmentId: eni-attach-033af559084924190
        DeleteOnTermination: true
        DeviceIndex: 0
        NetworkCardIndex: 0
        Status: attached
      Description: ''
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 02:91:6f:87:ea:13
      NetworkInterfaceId: eni-00098d56ede0eb1ec
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-1-148.us-east-2.compute.internal
      PrivateIpAddress: 10.0.1.148
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-1-148.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.148
      - Primary: false
        PrivateDnsName: ip-10-0-1-81.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.81
      - Primary: false
        PrivateDnsName: ip-10-0-1-146.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.146
      - Primary: false
        PrivateDnsName: ip-10-0-1-197.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.197
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-041ce879edf62a575
      VpcId: vpc-0e081eeaaf3ae57dc
    Placement:
      AvailabilityZone: us-east-2a
      GroupName: ''
      Tenancy: default
    PlatformDetails: Linux/UNIX
    PrivateDnsName: ip-10-0-1-148.us-east-2.compute.internal
    PrivateDnsNameOptions:
      EnableResourceNameDnsAAAARecord: false
      EnableResourceNameDnsARecord: false
      HostnameType: ip-name
    PrivateIpAddress: 10.0.1.148
    ProductCodes: []
    PublicDnsName: ''
    RootDeviceName: /dev/xvda
    RootDeviceType: ebs
    SecurityGroups:
    - GroupId: sg-002b4d5ce0511dac6
      GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
    SourceDestCheck: true
    State:
      Code: 16
      Name: running
    StateTransitionReason: ''
    SubnetId: subnet-041ce879edf62a575
    Tags:
    - Key: Name
      Value: node-group-2
    - Key: aws:ec2:fleet-id
      Value: fleet-373f4b8c-f124-4c9e-ae9a-258a765263ee
    - Key: aws:ec2launchtemplate:version
      Value: '1'
    - Key: aws:eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: k8s.io/cluster-autoscaler/enabled
      Value: 'true'
    - Key: aws:ec2launchtemplate:id
      Value: lt-08fa21a2ca35cbd47
    - Key: aws:autoscaling:groupName
      Value: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
      Value: owned
    - Key: eks:nodegroup-name
      Value: node-group-2-20231130170325157300000019
    - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
      Value: owned
    - Key: eks:cluster-name
      Value: education-eks-vOUQg0d3
    UsageOperation: RunInstances
    UsageOperationUpdateTime: '2023-11-30T17:03:44+00:00'
    VirtualizationType: hvm
    VpcId: vpc-0e081eeaaf3ae57dc
  OwnerId: '<Account ID>'
  RequesterId: '932383652115'
  ReservationId: r-07871f44dd3716c89
- Groups: []
  Instances:
  - AmiLaunchIndex: 0
    Architecture: x86_64
    BlockDeviceMappings:
    - DeviceName: /dev/xvda
      Ebs:
        AttachTime: '2023-11-30T17:11:39+00:00'
        DeleteOnTermination: true
        Status: attached
        VolumeId: vol-0610235cc09681c01
    CapacityReservationSpecification:
      CapacityReservationPreference: open
    ClientToken: fleet-81b77d15-ce2c-c407-a418-ab22cd1aaad1-0
    CpuOptions:
      CoreCount: 1
      ThreadsPerCore: 2
    CurrentInstanceBootMode: legacy-bios
    EbsOptimized: false
    EnaSupport: true
    EnclaveOptions:
      Enabled: false
    HibernationOptions:
      Configured: false
    Hypervisor: xen
    IamInstanceProfile:
      Arn: arn:aws:iam::<Account ID>:instance-profile/eks-f2c61097-b667-9365-41b5-a0ac4978fbc0
      Id: AIPAWECQW54QZKU4GD2U5
    ImageId: ami-01b27980d69f7f2aa
    InstanceId: i-06c28881fa36b6488
    InstanceType: t3.small
    LaunchTime: '2023-11-30T17:11:38+00:00'
    MaintenanceOptions:
      AutoRecovery: default
    MetadataOptions:
      HttpEndpoint: enabled
      HttpProtocolIpv6: disabled
      HttpPutResponseHopLimit: 2
      HttpTokens: required
      InstanceMetadataTags: disabled
      State: applied
    Monitoring:
      State: enabled
    NetworkInterfaces:
    - Attachment:
        AttachTime: '2023-11-30T17:11:38+00:00'
        AttachmentId: eni-attach-0c42ce6569a8af597
        DeleteOnTermination: true
        DeviceIndex: 0
        NetworkCardIndex: 0
        Status: attached
      Description: ''
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 02:52:e8:8b:a8:53
      NetworkInterfaceId: eni-02841e0ece1858449
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-1-19.us-east-2.compute.internal
      PrivateIpAddress: 10.0.1.19
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-1-19.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.19
      - Primary: false
        PrivateDnsName: ip-10-0-1-178.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.178
      - Primary: false
        PrivateDnsName: ip-10-0-1-183.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.183
      - Primary: false
        PrivateDnsName: ip-10-0-1-205.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.205
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-041ce879edf62a575
      VpcId: vpc-0e081eeaaf3ae57dc
    - Attachment:
        AttachTime: '2023-11-30T17:12:17+00:00'
        AttachmentId: eni-attach-0b5ceec612cadd99e
        DeleteOnTermination: true
        DeviceIndex: 1
        NetworkCardIndex: 0
        Status: attached
      Description: aws-K8S-i-06c28881fa36b6488
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 02:f1:e7:5a:a4:69
      NetworkInterfaceId: eni-08ffb31c08f2c4176
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-1-220.us-east-2.compute.internal
      PrivateIpAddress: 10.0.1.220
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-1-220.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.220
      - Primary: false
        PrivateDnsName: ip-10-0-1-211.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.211
      - Primary: false
        PrivateDnsName: ip-10-0-1-102.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.102
      - Primary: false
        PrivateDnsName: ip-10-0-1-9.us-east-2.compute.internal
        PrivateIpAddress: 10.0.1.9
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-041ce879edf62a575
      VpcId: vpc-0e081eeaaf3ae57dc
    Placement:
      AvailabilityZone: us-east-2a
      GroupName: ''
      Tenancy: default
    PlatformDetails: Linux/UNIX
    PrivateDnsName: ip-10-0-1-19.us-east-2.compute.internal
    PrivateDnsNameOptions:
      EnableResourceNameDnsAAAARecord: false
      EnableResourceNameDnsARecord: false
      HostnameType: ip-name
    PrivateIpAddress: 10.0.1.19
    ProductCodes: []
    PublicDnsName: ''
    RootDeviceName: /dev/xvda
    RootDeviceType: ebs
    SecurityGroups:
    - GroupId: sg-002b4d5ce0511dac6
      GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
    SourceDestCheck: true
    State:
      Code: 16
      Name: running
    StateTransitionReason: ''
    SubnetId: subnet-041ce879edf62a575
    Tags:
    - Key: aws:ec2:fleet-id
      Value: fleet-81b77d15-ce2c-c407-a418-ab22cd1aaad1
    - Key: eks:nodegroup-name
      Value: node-group-1-20231130170325157300000017
    - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
      Value: owned
    - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
      Value: owned
    - Key: Name
      Value: node-group-1
    - Key: eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: aws:ec2launchtemplate:id
      Value: lt-0da601a222e741548
    - Key: aws:autoscaling:groupName
      Value: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    - Key: aws:ec2launchtemplate:version
      Value: '1'
    - Key: aws:eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: k8s.io/cluster-autoscaler/enabled
      Value: 'true'
    UsageOperation: RunInstances
    UsageOperationUpdateTime: '2023-11-30T17:11:38+00:00'
    VirtualizationType: hvm
    VpcId: vpc-0e081eeaaf3ae57dc
  OwnerId: '<Account ID>'
  RequesterId: '932383652115'
  ReservationId: r-0d6b4d117961c29f5
- Groups: []
  Instances:
  - AmiLaunchIndex: 0
    Architecture: x86_64
    BlockDeviceMappings:
    - DeviceName: /dev/xvda
      Ebs:
        AttachTime: '2023-11-30T17:11:28+00:00'
        DeleteOnTermination: true
        Status: attached
        VolumeId: vol-0d8c191a660d878f5
    CapacityReservationSpecification:
      CapacityReservationPreference: open
    ClientToken: fleet-151f63a4-7906-4c1c-2c92-0d8001418077-0
    CpuOptions:
      CoreCount: 1
      ThreadsPerCore: 2
    CurrentInstanceBootMode: legacy-bios
    EbsOptimized: false
    EnaSupport: true
    EnclaveOptions:
      Enabled: false
    HibernationOptions:
      Configured: false
    Hypervisor: xen
    IamInstanceProfile:
      Arn: arn:aws:iam::<Account ID>:instance-profile/eks-f2c61097-b667-9365-41b5-a0ac4978fbc0
      Id: AIPAWECQW54QZKU4GD2U5
    ImageId: ami-01b27980d69f7f2aa
    InstanceId: i-00337e2066f905208
    InstanceType: t3.small
    LaunchTime: '2023-11-30T17:11:27+00:00'
    MaintenanceOptions:
      AutoRecovery: default
    MetadataOptions:
      HttpEndpoint: enabled
      HttpProtocolIpv6: disabled
      HttpPutResponseHopLimit: 2
      HttpTokens: required
      InstanceMetadataTags: disabled
      State: applied
    Monitoring:
      State: enabled
    NetworkInterfaces:
    - Attachment:
        AttachTime: '2023-11-30T17:11:27+00:00'
        AttachmentId: eni-attach-0700e801e0303657b
        DeleteOnTermination: true
        DeviceIndex: 0
        NetworkCardIndex: 0
        Status: attached
      Description: ''
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 0a:a2:bf:12:07:5b
      NetworkInterfaceId: eni-0db6975e72bbea7a0
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-3-188.us-east-2.compute.internal
      PrivateIpAddress: 10.0.3.188
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-3-188.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.188
      - Primary: false
        PrivateDnsName: ip-10-0-3-17.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.17
      - Primary: false
        PrivateDnsName: ip-10-0-3-180.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.180
      - Primary: false
        PrivateDnsName: ip-10-0-3-21.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.21
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-00a67b7cb5448e9dd
      VpcId: vpc-0e081eeaaf3ae57dc
    - Attachment:
        AttachTime: '2023-11-30T17:12:01+00:00'
        AttachmentId: eni-attach-056052f2294f6b41f
        DeleteOnTermination: true
        DeviceIndex: 1
        NetworkCardIndex: 0
        Status: attached
      Description: aws-K8S-i-00337e2066f905208
      Groups:
      - GroupId: sg-002b4d5ce0511dac6
        GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
      InterfaceType: interface
      Ipv6Addresses: []
      MacAddress: 0a:65:f7:ef:c1:8d
      NetworkInterfaceId: eni-0ef0cb878a56cd5c5
      OwnerId: '<Account ID>'
      PrivateDnsName: ip-10-0-3-49.us-east-2.compute.internal
      PrivateIpAddress: 10.0.3.49
      PrivateIpAddresses:
      - Primary: true
        PrivateDnsName: ip-10-0-3-49.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.49
      - Primary: false
        PrivateDnsName: ip-10-0-3-212.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.212
      - Primary: false
        PrivateDnsName: ip-10-0-3-169.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.169
      - Primary: false
        PrivateDnsName: ip-10-0-3-185.us-east-2.compute.internal
        PrivateIpAddress: 10.0.3.185
      SourceDestCheck: true
      Status: in-use
      SubnetId: subnet-00a67b7cb5448e9dd
      VpcId: vpc-0e081eeaaf3ae57dc
    Placement:
      AvailabilityZone: us-east-2c
      GroupName: ''
      Tenancy: default
    PlatformDetails: Linux/UNIX
    PrivateDnsName: ip-10-0-3-188.us-east-2.compute.internal
    PrivateDnsNameOptions:
      EnableResourceNameDnsAAAARecord: false
      EnableResourceNameDnsARecord: false
      HostnameType: ip-name
    PrivateIpAddress: 10.0.3.188
    ProductCodes: []
    PublicDnsName: ''
    RootDeviceName: /dev/xvda
    RootDeviceType: ebs
    SecurityGroups:
    - GroupId: sg-002b4d5ce0511dac6
      GroupName: education-eks-vOUQg0d3-node-2023113016545551940000000c
    SourceDestCheck: true
    State:
      Code: 16
      Name: running
    StateTransitionReason: ''
    SubnetId: subnet-00a67b7cb5448e9dd
    Tags:
    - Key: aws:ec2launchtemplate:id
      Value: lt-0da601a222e741548
    - Key: aws:autoscaling:groupName
      Value: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
      Value: owned
    - Key: Name
      Value: node-group-1
    - Key: k8s.io/cluster-autoscaler/enabled
      Value: 'true'
    - Key: aws:ec2:fleet-id
      Value: fleet-151f63a4-7906-4c1c-2c92-0d8001418077
    - Key: aws:eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: aws:ec2launchtemplate:version
      Value: '1'
    - Key: eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: eks:nodegroup-name
      Value: node-group-1-20231130170325157300000017
    - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
      Value: owned
    UsageOperation: RunInstances
    UsageOperationUpdateTime: '2023-11-30T17:11:27+00:00'
    VirtualizationType: hvm
    VpcId: vpc-0e081eeaaf3ae57dc
  OwnerId: '<Account ID>'
  RequesterId: '932383652115'
  ReservationId: r-013d1f8675688fc36
- Groups: []
  Instances:
  - AmiLaunchIndex: 0
    Architecture: x86_64
    BlockDeviceMappings: []
    CapacityReservationSpecification:
      CapacityReservationPreference: open
    ClientToken: fleet-8b17dfbd-ce04-e425-a63a-2382eb08411c-0
    CpuOptions:
      CoreCount: 1
      ThreadsPerCore: 2
    CurrentInstanceBootMode: legacy-bios
    EbsOptimized: false
    EnaSupport: true
    EnclaveOptions:
      Enabled: false
    HibernationOptions:
      Configured: false
    Hypervisor: xen
    ImageId: ami-01b27980d69f7f2aa
    InstanceId: i-0cc3a990599182be3
    InstanceType: t3.small
    LaunchTime: '2023-11-30T17:04:12+00:00'
    MaintenanceOptions:
      AutoRecovery: default
    MetadataOptions:
      HttpEndpoint: enabled
      HttpProtocolIpv6: disabled
      HttpPutResponseHopLimit: 2
      HttpTokens: required
      InstanceMetadataTags: disabled
      State: pending
    Monitoring:
      State: enabled
    NetworkInterfaces: []
    Placement:
      AvailabilityZone: us-east-2c
      GroupName: ''
      Tenancy: default
    PlatformDetails: Linux/UNIX
    PrivateDnsName: ''
    ProductCodes: []
    PublicDnsName: ''
    RootDeviceName: /dev/xvda
    RootDeviceType: ebs
    SecurityGroups: []
    State:
      Code: 48
      Name: terminated
    StateReason:
      Code: Client.UserInitiatedShutdown
      Message: 'Client.UserInitiatedShutdown: User initiated shutdown'
    StateTransitionReason: User initiated (2023-11-30 17:11:52 GMT)
    Tags:
    - Key: Name
      Value: node-group-1
    - Key: aws:ec2launchtemplate:id
      Value: lt-0da601a222e741548
    - Key: eks:nodegroup-name
      Value: node-group-1-20231130170325157300000017
    - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
      Value: owned
    - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
      Value: owned
    - Key: eks:cluster-name
      Value: education-eks-vOUQg0d3
    - Key: aws:ec2:fleet-id
      Value: fleet-8b17dfbd-ce04-e425-a63a-2382eb08411c
    - Key: aws:autoscaling:groupName
      Value: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    - Key: aws:ec2launchtemplate:version
      Value: '1'
    - Key: k8s.io/cluster-autoscaler/enabled
      Value: 'true'
    UsageOperation: RunInstances
    UsageOperationUpdateTime: '2023-11-30T17:04:12+00:00'
    VirtualizationType: hvm
  OwnerId: '<Account ID>'
  RequesterId: '932383652115'
  ReservationId: r-00f4141ffb417fc98
]

===========================================================================================================================

% aws ec2 describe-instances --query 'Reservations[*].Instances[*].[InstanceId]' --filters Name=instance-state-name,Values=running --output text
[
i-0d99186f2be39de71
i-06c28881fa36b6488
i-00337e2066f905208
]

===========================================================================================================================

% aws ec2 describe-instances --filter "Name=tag-key,Values=Name" "Name=tag-value,Values=*$name_tag*" "Name=instance-state-name,Values=running" --query "Reservations[*].Instances[*][Tags[?Key=='Name'].Value[],NetworkInterfaces[0].PrivateIpAddresses[0].PrivateIpAddress]" --output text
[
10.0.1.75
node-group-2
10.0.1.19
node-group-1
10.0.3.188
node-group-1
]

===========================================================================================================================

# Endpoint Services

===========================================================================================================================

% aws ec2 describe-vpc-endpoint-services --region=us-east-2
[
ServiceDetails:
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - kendra-ranking.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: kendra-ranking.us-east-2.api.aws
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: kendra-ranking.us-east-2.api.aws
  ServiceId: vpce-svc-01911169310e99f50
  ServiceName: aws.api.us-east-2.kendra-ranking
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - vpce-svc-0f06a44b36daa31c0.us-east-2.vpce.amazonaws.com
  - notebook.us-east-2.vpce.sagemaker.aws
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.notebook.us-east-2.sagemaker.aws'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.notebook.us-east-2.sagemaker.aws'
  ServiceId: vpce-svc-0f06a44b36daa31c0
  ServiceName: aws.sagemaker.us-east-2.notebook
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - vpce-svc-0216bb630ccf09d47.us-east-2.vpce.amazonaws.com
  - studio.us-east-2.vpce.sagemaker.aws
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.studio.us-east-2.sagemaker.aws'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.studio.us-east-2.sagemaker.aws'
  ServiceId: vpce-svc-0216bb630ccf09d47
  ServiceName: aws.sagemaker.us-east-2.studio
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - accesspoint.s3-global.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.accesspoint.s3-global.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.accesspoint.s3-global.amazonaws.com'
  ServiceId: vpce-svc-0bc243bef037f62a8
  ServiceName: com.amazonaws.s3-global.accesspoint
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - access-analyzer.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: access-analyzer.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: access-analyzer.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08037e9718f2bdaa5
  ServiceName: com.amazonaws.us-east-2.access-analyzer
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - acm-pca.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: acm-pca.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: acm-pca.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a3f2a5854880f582
  ServiceName: com.amazonaws.us-east-2.acm-pca
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.airflow.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: api.airflow.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: api.airflow.us-east-2.amazonaws.com
  ServiceId: vpce-svc-001ed2f83f8090af4
  ServiceName: com.amazonaws.us-east-2.airflow.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - env.airflow.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: env.airflow.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: env.airflow.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0729ccb6921128a78
  ServiceName: com.amazonaws.us-east-2.airflow.env
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ops.airflow.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ops.airflow.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ops.airflow.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05dee5cd8d2027626
  ServiceName: com.amazonaws.us-east-2.airflow.ops
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - application-autoscaling.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: application-autoscaling.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: application-autoscaling.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ec772c127d0d20c2
  ServiceName: com.amazonaws.us-east-2.application-autoscaling
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - appmesh.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: appmesh.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: appmesh.us-east-2.amazonaws.com
  - PrivateDnsName: appmesh.us-east-2.api.aws
  ServiceId: vpce-svc-0fb053e1fb341789d
  ServiceName: com.amazonaws.us-east-2.appmesh
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - appmesh-envoy-management.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: appmesh-envoy-management.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: appmesh-envoy-management.us-east-2.amazonaws.com
  - PrivateDnsName: appmesh-envoy-management.us-east-2.api.aws
  ServiceId: vpce-svc-0f86b2f8549ba3813
  ServiceName: com.amazonaws.us-east-2.appmesh-envoy-management
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - apprunner.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: apprunner.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: apprunner.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c8f63a61022f60ba
  ServiceName: com.amazonaws.us-east-2.apprunner
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - requests.apprunner.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  ServiceId: vpce-svc-06b26159f75b1ce88
  ServiceName: com.amazonaws.us-east-2.apprunner.requests
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.appstream.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: appstream2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: appstream2.us-east-2.amazonaws.com
  ServiceId: vpce-svc-014badd2793d22dc0
  ServiceName: com.amazonaws.us-east-2.appstream.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - streaming.appstream.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: streaming.appstream.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: streaming.appstream.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fd1fd23e1f62d6f4
  ServiceName: com.amazonaws.us-east-2.appstream.streaming
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - appsync-api.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.appsync-api.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.appsync-api.us-east-2.amazonaws.com'
  - PrivateDnsName: '*.appsync-realtime-api.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0e5735ba12cce42a2
  ServiceName: com.amazonaws.us-east-2.appsync-api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - aps.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: aps.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: aps.us-east-2.amazonaws.com
  ServiceId: vpce-svc-07d9e2858754c1017
  ServiceName: com.amazonaws.us-east-2.aps
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - vpce-svc-05598b993b5f62643.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: aps-workspaces.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: aps-workspaces.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05598b993b5f62643
  ServiceName: com.amazonaws.us-east-2.aps-workspaces
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - athena.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: athena.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: athena.us-east-2.amazonaws.com
  - PrivateDnsName: athena.us-east-2.api.aws
  ServiceId: vpce-svc-08f7c96b096d96b49
  ServiceName: com.amazonaws.us-east-2.athena
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv6
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - auditmanager.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: auditmanager.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: auditmanager.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0bbf4f8bd671cf318
  ServiceName: com.amazonaws.us-east-2.auditmanager
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - autoscaling.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: autoscaling.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: autoscaling.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02cac97ee1f2c5f22
  ServiceName: com.amazonaws.us-east-2.autoscaling
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - autoscaling-plans.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: autoscaling-plans.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: autoscaling-plans.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06d82c3ca19e9e94f
  ServiceName: com.amazonaws.us-east-2.autoscaling-plans
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - awsconnector.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: awsconnector.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: awsconnector.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0dbb46a0159b484e5
  ServiceName: com.amazonaws.us-east-2.awsconnector
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - b2bi.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: b2bi.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: b2bi.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02b1f3454db59bd30
  ServiceName: com.amazonaws.us-east-2.b2bi
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - backup.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: backup.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: backup.us-east-2.amazonaws.com
  ServiceId: vpce-svc-060bce8d3eefcb69b
  ServiceName: com.amazonaws.us-east-2.backup
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - backup-gateway.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: backup-gateway.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: backup-gateway.us-east-2.amazonaws.com
  ServiceId: vpce-svc-028295a60c070fa1a
  ServiceName: com.amazonaws.us-east-2.backup-gateway
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - batch.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: batch.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: batch.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c327769248fbad93
  ServiceName: com.amazonaws.us-east-2.batch
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - bedrock.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: bedrock.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: bedrock.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0583ff802a962cb63
  ServiceName: com.amazonaws.us-east-2.bedrock
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - bedrock-runtime.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: bedrock-runtime.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: bedrock-runtime.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0047a76e1a29bbdff
  ServiceName: com.amazonaws.us-east-2.bedrock-runtime
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cassandra.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cassandra.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cassandra.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00746e63e109d3236
  ServiceName: com.amazonaws.us-east-2.cassandra
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cleanrooms.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cleanrooms.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cleanrooms.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0eaeb86285e647d11
  ServiceName: com.amazonaws.us-east-2.cleanrooms
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cloudcontrolapi.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cloudcontrolapi.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cloudcontrolapi.us-east-2.amazonaws.com
  ServiceId: vpce-svc-01e33557bfd350c8d
  ServiceName: com.amazonaws.us-east-2.cloudcontrolapi
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cloudcontrolapi-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cloudcontrolapi-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cloudcontrolapi-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d1fc03a393693989
  ServiceName: com.amazonaws.us-east-2.cloudcontrolapi-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - clouddirectory.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: clouddirectory.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: clouddirectory.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0cafdf978830159a7
  ServiceName: com.amazonaws.us-east-2.clouddirectory
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cloudformation.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cloudformation.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cloudformation.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a80d881e8b1dc3f0
  ServiceName: com.amazonaws.us-east-2.cloudformation
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cloudhsmv2.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cloudhsmv2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cloudhsmv2.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e6f639be423c2cc7
  ServiceName: com.amazonaws.us-east-2.cloudhsmv2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - cloudtrail.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: cloudtrail.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: cloudtrail.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0acaa4292acd58b5a
  ServiceName: com.amazonaws.us-east-2.cloudtrail
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.codeartifact.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codeartifact.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codeartifact.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e78ad78e79294eb2
  ServiceName: com.amazonaws.us-east-2.codeartifact.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - d.codeartifact.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.d.codeartifact.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.d.codeartifact.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0282c881d80cc73ab
  ServiceName: com.amazonaws.us-east-2.codeartifact.repositories
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codebuild.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codebuild.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codebuild.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06d2c3f8e36c90eba
  ServiceName: com.amazonaws.us-east-2.codebuild
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codebuild-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codebuild-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codebuild-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08f6f11980b5e9962
  ServiceName: com.amazonaws.us-east-2.codebuild-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codecommit.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codecommit.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codecommit.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d67e1f2ee57f15a1
  ServiceName: com.amazonaws.us-east-2.codecommit
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codecommit-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codecommit-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codecommit-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0b49335880dfec77e
  ServiceName: com.amazonaws.us-east-2.codecommit-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codedeploy.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codedeploy.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codedeploy.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0666e9857647e6808
  ServiceName: com.amazonaws.us-east-2.codedeploy
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codedeploy-commands-secure.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codedeploy-commands-secure.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codedeploy-commands-secure.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a80988628e6d45c5
  ServiceName: com.amazonaws.us-east-2.codedeploy-commands-secure
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codeguru-profiler.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codeguru-profiler.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codeguru-profiler.us-east-2.amazonaws.com
  ServiceId: vpce-svc-009149db0d8d5853e
  ServiceName: com.amazonaws.us-east-2.codeguru-profiler
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codeguru-reviewer.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codeguru-reviewer.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codeguru-reviewer.us-east-2.amazonaws.com
  ServiceId: vpce-svc-045c8d7dc1efb0544
  ServiceName: com.amazonaws.us-east-2.codeguru-reviewer
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - codepipeline.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codepipeline.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codepipeline.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05617d17a55b19e4b
  ServiceName: com.amazonaws.us-east-2.codepipeline
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.codestar-connections.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: codestar-connections.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: codestar-connections.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e855b65f71827d4f
  ServiceName: com.amazonaws.us-east-2.codestar-connections.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - comprehend.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: comprehend.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: comprehend.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08d56ef810a9ba107
  ServiceName: com.amazonaws.us-east-2.comprehend
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - prod.comprehendmedical.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: comprehendmedical.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: comprehendmedical.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0198fba787f3aa9fd
  ServiceName: com.amazonaws.us-east-2.comprehendmedical
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - config.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: config.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: config.us-east-2.amazonaws.com
  ServiceId: vpce-svc-064fd3bd868e98a3f
  ServiceName: com.amazonaws.us-east-2.config
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - console.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: console.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: console.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e4f325035b51e72c
  ServiceName: com.amazonaws.us-east-2.console
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - data-servicediscovery.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: data-servicediscovery.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: data-servicediscovery.us-east-2.amazonaws.com
  - PrivateDnsName: data-servicediscovery.us-east-2.api.aws
  ServiceId: vpce-svc-0194d4baeb38a44fc
  ServiceName: com.amazonaws.us-east-2.data-servicediscovery
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - data-servicediscovery-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: data-servicediscovery-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: data-servicediscovery-fips.us-east-2.amazonaws.com
  - PrivateDnsName: data-servicediscovery-fips.us-east-2.api.aws
  ServiceId: vpce-svc-061d37801308cb21d
  ServiceName: com.amazonaws.us-east-2.data-servicediscovery-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv6
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - databrew.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: databrew.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: databrew.us-east-2.amazonaws.com
  ServiceId: vpce-svc-073b5c7e0cc9c6aa2
  ServiceName: com.amazonaws.us-east-2.databrew
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - dataexchange.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: dataexchange.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: dataexchange.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02ec865c09ef74936
  ServiceName: com.amazonaws.us-east-2.dataexchange
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - datasync.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: datasync.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: datasync.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a5ea236de36359ae
  ServiceName: com.amazonaws.us-east-2.datasync
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - datazone.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: datazone.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: datazone.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00f0d406d7453c8a6
  ServiceName: com.amazonaws.us-east-2.datazone
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - devops-guru.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: devops-guru.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: devops-guru.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a684c495135cfe8d
  ServiceName: com.amazonaws.us-east-2.devops-guru
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - dms.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: dms.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: dms.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0211393ccbe8654f7
  ServiceName: com.amazonaws.us-east-2.dms
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - dms-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: dms-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: dms-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d0d5d5b9f4c33bc7
  ServiceName: com.amazonaws.us-east-2.dms-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - drs.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: drs.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: drs.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ce6c8590d8c1db8f
  ServiceName: com.amazonaws.us-east-2.drs
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - dynamodb.us-east-2.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  ServiceId: vpce-svc-0e0098d38c8623924
  ServiceName: com.amazonaws.us-east-2.dynamodb
  ServiceType:
  - ServiceType: Gateway
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ebs.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ebs.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ebs.us-east-2.amazonaws.com
  - PrivateDnsName: ebs.us-east-2.api.aws
  ServiceId: vpce-svc-05c71461779093735
  ServiceName: com.amazonaws.us-east-2.ebs
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ec2.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ec2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ec2.us-east-2.amazonaws.com
  - PrivateDnsName: ec2.us-east-2.api.aws
  ServiceId: vpce-svc-0e2eb2a2a072ad8d3
  ServiceName: com.amazonaws.us-east-2.ec2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ec2messages.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ec2messages.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ec2messages.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d87cdd26536290b4
  ServiceName: com.amazonaws.us-east-2.ec2messages
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.ecr.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: api.ecr.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: api.ecr.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e16a4fd8e1cee6c7
  ServiceName: com.amazonaws.us-east-2.ecr.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - dkr.ecr.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.dkr.ecr.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.dkr.ecr.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0a87fedbdca070b27
  ServiceName: com.amazonaws.us-east-2.ecr.dkr
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ecs.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ecs.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ecs.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0bb1f044c2218c6b4
  ServiceName: com.amazonaws.us-east-2.ecs
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ecs-a.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ecs-a.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ecs-a.us-east-2.amazonaws.com
  ServiceId: vpce-svc-01d432f310978ea9b
  ServiceName: com.amazonaws.us-east-2.ecs-agent
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ecs-t.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ecs-t.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ecs-t.us-east-2.amazonaws.com
  ServiceId: vpce-svc-03ae3bad78a8c2d2c
  ServiceName: com.amazonaws.us-east-2.ecs-telemetry
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - eks.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: eks.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: eks.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e140c9268ef8ba28
  ServiceName: com.amazonaws.us-east-2.eks
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - eks-auth.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: eks-auth.us-east-2.api.aws
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: eks-auth.us-east-2.api.aws
  ServiceId: vpce-svc-07e6170da7cb173f0
  ServiceName: com.amazonaws.us-east-2.eks-auth
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  BaseEndpointDnsNames:
  - runtime.elastic-inference.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PayerResponsibility: ServiceOwner
  PrivateDnsName: runtime.elastic-inference.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: runtime.elastic-inference.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e45466182cf114ac
  ServiceName: com.amazonaws.us-east-2.elastic-inference.runtime
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticache.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticache.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticache.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c0ff66dacb6940ae
  ServiceName: com.amazonaws.us-east-2.elasticache
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticache-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticache-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticache-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0f5c5b20287a10462
  ServiceName: com.amazonaws.us-east-2.elasticache-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticbeanstalk.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticbeanstalk.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticbeanstalk.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c108ff49cff34e54
  ServiceName: com.amazonaws.us-east-2.elasticbeanstalk
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticbeanstalk-health.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticbeanstalk-health.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticbeanstalk-health.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05992227a689206a3
  ServiceName: com.amazonaws.us-east-2.elasticbeanstalk-health
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticfilesystem.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticfilesystem.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticfilesystem.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04569b0d640e0758b
  ServiceName: com.amazonaws.us-east-2.elasticfilesystem
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticfilesystem-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticfilesystem-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticfilesystem-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fb63b9ba34c3d93b
  ServiceName: com.amazonaws.us-east-2.elasticfilesystem-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticloadbalancing.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticloadbalancing.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticloadbalancing.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0df465c530e0a3e73
  ServiceName: com.amazonaws.us-east-2.elasticloadbalancing
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - elasticmapreduce.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: elasticmapreduce.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: elasticmapreduce.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0445ebc482315b32f
  ServiceName: com.amazonaws.us-east-2.elasticmapreduce
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - email-smtp.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: email-smtp.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: email-smtp.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ebf14e88d7f93436
  ServiceName: com.amazonaws.us-east-2.email-smtp
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - emr-containers.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: emr-containers.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: emr-containers.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08c76d87f09a4853d
  ServiceName: com.amazonaws.us-east-2.emr-containers
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - emr-serverless.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: emr-serverless.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: emr-serverless.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06d21536b6ba114bd
  ServiceName: com.amazonaws.us-east-2.emr-serverless
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - entityresolution.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: entityresolution.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: entityresolution.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06119013d26c1756d
  ServiceName: com.amazonaws.us-east-2.entityresolution
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - events.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: events.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: events.us-east-2.amazonaws.com
  ServiceId: vpce-svc-051e189375acc9004
  ServiceName: com.amazonaws.us-east-2.events
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - evidently.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: evidently.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: evidently.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ac0bc8d9c8f05280
  ServiceName: com.amazonaws.us-east-2.evidently
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - evidently-dataplane.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: dataplane.evidently.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: dataplane.evidently.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0311e615ebc6e75c2
  ServiceName: com.amazonaws.us-east-2.evidently-dataplane
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - execute-api.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.execute-api.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.execute-api.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0f99bf1dc87d0b812
  ServiceName: com.amazonaws.us-east-2.execute-api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - finspace.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: finspace.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: finspace.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04a84e059276432a6
  ServiceName: com.amazonaws.us-east-2.finspace
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - finspace-api.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: finspace-api.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: finspace-api.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06af6bfdcda5391b8
  ServiceName: com.amazonaws.us-east-2.finspace-api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - fis.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: fis.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: fis.us-east-2.amazonaws.com
  ServiceId: vpce-svc-086d0b3bb7ba68109
  ServiceName: com.amazonaws.us-east-2.fis
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - forecast.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: forecast.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: forecast.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08c062e0b9ede2880
  ServiceName: com.amazonaws.us-east-2.forecast
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - forecast-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: forecast-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: forecast-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0f0ec55f057cb02a0
  ServiceName: com.amazonaws.us-east-2.forecast-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - forecastquery.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: forecastquery.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: forecastquery.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a1660b32b35731d6
  ServiceName: com.amazonaws.us-east-2.forecastquery
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - forecastquery-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: forecastquery-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: forecastquery-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0023134824181e60e
  ServiceName: com.amazonaws.us-east-2.forecastquery-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - frauddetector.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: frauddetector.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: frauddetector.us-east-2.amazonaws.com
  ServiceId: vpce-svc-091d87a2ffb5f0a62
  ServiceName: com.amazonaws.us-east-2.frauddetector
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - fsx.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: fsx.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: fsx.us-east-2.amazonaws.com
  ServiceId: vpce-svc-012e6dcea7d83b8e8
  ServiceName: com.amazonaws.us-east-2.fsx
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - fsx-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: fsx-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: fsx-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-034bb3821c7e3656b
  ServiceName: com.amazonaws.us-east-2.fsx-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - git-codecommit.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: git-codecommit.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: git-codecommit.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0efd93e059ed9fe57
  ServiceName: com.amazonaws.us-east-2.git-codecommit
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - git-codecommit-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: git-codecommit-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: git-codecommit-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-060ffe89b8f8e508e
  ServiceName: com.amazonaws.us-east-2.git-codecommit-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - glue.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: glue.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: glue.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04592707e81aca2a3
  ServiceName: com.amazonaws.us-east-2.glue
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - grafana.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: grafana.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: grafana.us-east-2.amazonaws.com
  ServiceId: vpce-svc-069b8c325e10bd8ed
  ServiceName: com.amazonaws.us-east-2.grafana
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - grafana-workspace.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.grafana-workspace.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.grafana-workspace.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-012e3e6aecf8a8c47
  ServiceName: com.amazonaws.us-east-2.grafana-workspace
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - greengrass.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: greengrass.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: greengrass.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05ed857db3cea36b3
  ServiceName: com.amazonaws.us-east-2.greengrass
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - groundstation.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: groundstation.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: groundstation.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06a7290e9417765d9
  ServiceName: com.amazonaws.us-east-2.groundstation
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - guardduty-data.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PayerResponsibility: ServiceOwner
  PrivateDnsName: guardduty-data.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: guardduty-data.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04bb9534565038458
  ServiceName: com.amazonaws.us-east-2.guardduty-data
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - guardduty-data-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PayerResponsibility: ServiceOwner
  PrivateDnsName: guardduty-data-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: guardduty-data-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06e0f023334815087
  ServiceName: com.amazonaws.us-east-2.guardduty-data-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - healthlake.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: healthlake.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: healthlake.us-east-2.amazonaws.com
  ServiceId: vpce-svc-028030c143619407d
  ServiceName: com.amazonaws.us-east-2.healthlake
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - identitystore.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: identitystore.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: identitystore.us-east-2.amazonaws.com
  ServiceId: vpce-svc-030c40b3579e07aff
  ServiceName: com.amazonaws.us-east-2.identitystore
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - imagebuilder.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: imagebuilder.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: imagebuilder.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05f8fc76299a38362
  ServiceName: com.amazonaws.us-east-2.imagebuilder
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - inspector2.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: inspector2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: inspector2.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fae81380f5c7c5bf
  ServiceName: com.amazonaws.us-east-2.inspector2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - credentials.iot.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  ServiceId: vpce-svc-0fac76afb37d9e6bb
  ServiceName: com.amazonaws.us-east-2.iot.credentials
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - data.iot.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  ServiceId: vpce-svc-0dad4c36b981b729b
  ServiceName: com.amazonaws.us-east-2.iot.data
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.fleethub.iot.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: api.fleethub.iot.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: api.fleethub.iot.us-east-2.amazonaws.com
  ServiceId: vpce-svc-045739704fae2869c
  ServiceName: com.amazonaws.us-east-2.iot.fleethub.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.iotsitewise.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: api.iotsitewise.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: api.iotsitewise.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04ca3da0c7584425a
  ServiceName: com.amazonaws.us-east-2.iotsitewise.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - data.iotsitewise.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: data.iotsitewise.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: data.iotsitewise.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0208355e26a1a5e6e
  ServiceName: com.amazonaws.us-east-2.iotsitewise.data
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - kendra.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: kendra.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: kendra.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02da463c612a2b51b
  ServiceName: com.amazonaws.us-east-2.kendra
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - firehose.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: firehose.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: firehose.us-east-2.amazonaws.com
  ServiceId: vpce-svc-04d10bab62a6d4054
  ServiceName: com.amazonaws.us-east-2.kinesis-firehose
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - kinesis.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: kinesis.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: kinesis.us-east-2.amazonaws.com
  - PrivateDnsName: '*.data-kinesis.us-east-2.amazonaws.com'
  - PrivateDnsName: '*.control-kinesis.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0025db43a885966c8
  ServiceName: com.amazonaws.us-east-2.kinesis-streams
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - kms.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: kms.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: kms.us-east-2.amazonaws.com
  ServiceId: vpce-svc-018363ddbf8dc4d00
  ServiceName: com.amazonaws.us-east-2.kms
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - kms-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: kms-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: kms-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-03dc8224657220d72
  ServiceName: com.amazonaws.us-east-2.kms-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - lakeformation.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: lakeformation.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: lakeformation.us-east-2.amazonaws.com
  ServiceId: vpce-svc-048e229728f2f8bbc
  ServiceName: com.amazonaws.us-east-2.lakeformation
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - lambda.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: lambda.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: lambda.us-east-2.amazonaws.com
  - PrivateDnsName: lambda.us-east-2.api.aws
  ServiceId: vpce-svc-08b4a61cc5635d0ee
  ServiceName: com.amazonaws.us-east-2.lambda
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - license-manager.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: license-manager.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: license-manager.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d261ffa3f6109f31
  ServiceName: com.amazonaws.us-east-2.license-manager
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - license-manager-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: license-manager-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: license-manager-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0b4720e4dcf597693
  ServiceName: com.amazonaws.us-east-2.license-manager-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - license-manager-user-subscriptions.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: license-manager-user-subscriptions.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: license-manager-user-subscriptions.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0bf05ef7d90665c34
  ServiceName: com.amazonaws.us-east-2.license-manager-user-subscriptions
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - logs.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: logs.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: logs.us-east-2.amazonaws.com
  ServiceId: vpce-svc-06a8fd5c6c1de920e
  ServiceName: com.amazonaws.us-east-2.logs
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - lookoutmetrics.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: lookoutmetrics.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: lookoutmetrics.us-east-2.amazonaws.com
  ServiceId: vpce-svc-069261e052b4a287c
  ServiceName: com.amazonaws.us-east-2.lookoutmetrics
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - lookoutvision.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: lookoutvision.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: lookoutvision.us-east-2.amazonaws.com
  ServiceId: vpce-svc-068557c5701cfae02
  ServiceName: com.amazonaws.us-east-2.lookoutvision
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - m2.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: m2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: m2.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fa98265f89105078
  ServiceName: com.amazonaws.us-east-2.m2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - macie2.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: macie2.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: macie2.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0b45722a48f64e9bc
  ServiceName: com.amazonaws.us-east-2.macie2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - mainnet.bitcoin.managedblockchain.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: mainnet.bitcoin.managedblockchain.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: mainnet.bitcoin.managedblockchain.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0787c3646c0ef2543
  ServiceName: com.amazonaws.us-east-2.managedblockchain.bitcoin.mainnet
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - testnet.bitcoin.managedblockchain.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: testnet.bitcoin.managedblockchain.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: testnet.bitcoin.managedblockchain.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00285f81063025cc0
  ServiceName: com.amazonaws.us-east-2.managedblockchain.bitcoin.testnet
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - mediaconnect.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: mediaconnect.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: mediaconnect.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c4fb339cfbf3f80d
  ServiceName: com.amazonaws.us-east-2.mediaconnect
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - memory-db.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: memory-db.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: memory-db.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0048558bad6b67331
  ServiceName: com.amazonaws.us-east-2.memory-db
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - memorydb-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: memorydb-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: memorydb-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-07c6c797139d80a61
  ServiceName: com.amazonaws.us-east-2.memorydb-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - mgn.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: mgn.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: mgn.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fd0fc8b4330efe64
  ServiceName: com.amazonaws.us-east-2.mgn
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - monitoring.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: monitoring.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: monitoring.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e0bac9ef56ad4595
  ServiceName: com.amazonaws.us-east-2.monitoring
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - neptune-graph.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: neptune-graph.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: neptune-graph.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02ead2cf174b3f698
  ServiceName: com.amazonaws.us-east-2.neptune-graph
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - pca-connector-ad.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: pca-connector-ad.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: pca-connector-ad.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02b85fe3a749db434
  ServiceName: com.amazonaws.us-east-2.pca-connector-ad
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - personalize.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: personalize.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: personalize.us-east-2.amazonaws.com
  ServiceId: vpce-svc-063c10f08a666fdfa
  ServiceName: com.amazonaws.us-east-2.personalize
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - personalize-events.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: personalize-events.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: personalize-events.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08f4aa61c09e51b76
  ServiceName: com.amazonaws.us-east-2.personalize-events
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - personalize-runtime.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: personalize-runtime.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: personalize-runtime.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a8370355223e0c39
  ServiceName: com.amazonaws.us-east-2.personalize-runtime
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - pinpoint.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: pinpoint.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: pinpoint.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0265c6471e6d92102
  ServiceName: com.amazonaws.us-east-2.pinpoint
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - sms-voice.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: sms-voice.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: sms-voice.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08e3592b531b533fe
  ServiceName: com.amazonaws.us-east-2.pinpoint-sms-voice-v2
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - polly.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: polly.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: polly.us-east-2.amazonaws.com
  ServiceId: vpce-svc-08bb0858096ab02ed
  ServiceName: com.amazonaws.us-east-2.polly
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - private-networks.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: private-networks.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: private-networks.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0473a71072a3542dc
  ServiceName: com.amazonaws.us-east-2.private-networks
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - proton.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: proton.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: proton.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00260418ea691fb4a
  ServiceName: com.amazonaws.us-east-2.proton
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - session.qldb.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: session.qldb.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: session.qldb.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e6c3f1080a635b63
  ServiceName: com.amazonaws.us-east-2.qldb.session
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rds.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rds.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rds.us-east-2.amazonaws.com
  ServiceId: vpce-svc-05b97de73375f0863
  ServiceName: com.amazonaws.us-east-2.rds
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rds-data.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rds-data.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rds-data.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0dac2cafc0619ccfd
  ServiceName: com.amazonaws.us-east-2.rds-data
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - redshift.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: redshift.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: redshift.us-east-2.amazonaws.com
  ServiceId: vpce-svc-02dfa393a8b93e517
  ServiceName: com.amazonaws.us-east-2.redshift
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - redshift-data.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: redshift-data.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: redshift-data.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0b9e5dabbf663d947
  ServiceName: com.amazonaws.us-east-2.redshift-data
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - redshift-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: redshift-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: redshift-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a923d93da988f42a
  ServiceName: com.amazonaws.us-east-2.redshift-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - refactor-spaces.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: refactor-spaces.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: refactor-spaces.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e7f7df62d48b3048
  ServiceName: com.amazonaws.us-east-2.refactor-spaces
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rekognition.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rekognition.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rekognition.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0bdced438e0cd2ed7
  ServiceName: com.amazonaws.us-east-2.rekognition
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rekognition-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rekognition-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rekognition-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-03e1175083c03de65
  ServiceName: com.amazonaws.us-east-2.rekognition-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - robomaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: robomaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: robomaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0e5670eabf5a130ff
  ServiceName: com.amazonaws.us-east-2.robomaker
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rolesanywhere.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rolesanywhere.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rolesanywhere.us-east-2.amazonaws.com
  ServiceId: vpce-svc-080fa720c92a3de45
  ServiceName: com.amazonaws.us-east-2.rolesanywhere
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rum.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: rum.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: rum.us-east-2.amazonaws.com
  ServiceId: vpce-svc-07e871090c3b87ab5
  ServiceName: com.amazonaws.us-east-2.rum
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - rum-dataplane.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: dataplane.rum.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: dataplane.rum.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0991a75c307a512b3
  ServiceName: com.amazonaws.us-east-2.rum-dataplane
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - s3.us-east-2.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  ServiceId: vpce-svc-0a2c88e104dd8b17b
  ServiceName: com.amazonaws.us-east-2.s3
  ServiceType:
  - ServiceType: Gateway
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - s3.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.s3.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.s3.us-east-2.amazonaws.com'
  - PrivateDnsName: '*.s3-control.us-east-2.amazonaws.com'
  - PrivateDnsName: '*.s3-accesspoint.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-03128c4fe84cf29e1
  ServiceName: com.amazonaws.us-east-2.s3
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - s3-outposts.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: s3-outposts.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: s3-outposts.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0387709189cb4a9cb
  ServiceName: com.amazonaws.us-east-2.s3-outposts
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - api.sagemaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: api.sagemaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: api.sagemaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00ca3d1da0c1d10e8
  ServiceName: com.amazonaws.us-east-2.sagemaker.api
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - featurestore-runtime.sagemaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: featurestore-runtime.sagemaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: featurestore-runtime.sagemaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0035f598599c25216
  ServiceName: com.amazonaws.us-east-2.sagemaker.featurestore-runtime
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - metrics.sagemaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: metrics.sagemaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: metrics.sagemaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00116cb334e555b47
  ServiceName: com.amazonaws.us-east-2.sagemaker.metrics
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - runtime.sagemaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: runtime.sagemaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: runtime.sagemaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-081ec4024873932a9
  ServiceName: com.amazonaws.us-east-2.sagemaker.runtime
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - runtime-fips.sagemaker.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: runtime-fips.sagemaker.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: runtime-fips.sagemaker.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0f4c60a1ecb59c9b0
  ServiceName: com.amazonaws.us-east-2.sagemaker.runtime-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - secretsmanager.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: secretsmanager.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: secretsmanager.us-east-2.amazonaws.com
  ServiceId: vpce-svc-01c4484a3d9f6641b
  ServiceName: com.amazonaws.us-east-2.secretsmanager
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - securityhub.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: securityhub.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: securityhub.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0f93d66967d8677c4
  ServiceName: com.amazonaws.us-east-2.securityhub
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - servicecatalog.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: servicecatalog.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: servicecatalog.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00831ec59fd3d746c
  ServiceName: com.amazonaws.us-east-2.servicecatalog
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - servicecatalog-appregistry.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: servicecatalog-appregistry.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: servicecatalog-appregistry.us-east-2.amazonaws.com
  ServiceId: vpce-svc-01080703b0d5762d9
  ServiceName: com.amazonaws.us-east-2.servicecatalog-appregistry
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - servicediscovery.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: servicediscovery.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: servicediscovery.us-east-2.amazonaws.com
  - PrivateDnsName: servicediscovery.us-east-2.api.aws
  ServiceId: vpce-svc-0b7c1dc95ed3feeee
  ServiceName: com.amazonaws.us-east-2.servicediscovery
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - servicediscovery-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: servicediscovery-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: servicediscovery-fips.us-east-2.amazonaws.com
  - PrivateDnsName: servicediscovery-fips.us-east-2.api.aws
  ServiceId: vpce-svc-0b32efe95efe35483
  ServiceName: com.amazonaws.us-east-2.servicediscovery-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  - ipv6
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - signin.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: signin.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: signin.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ced3b7aa9ec96e85
  ServiceName: com.amazonaws.us-east-2.signin
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - simspaceweaver.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: simspaceweaver.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: simspaceweaver.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c8c21fce9f0d701a
  ServiceName: com.amazonaws.us-east-2.simspaceweaver
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - sns.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: sns.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: sns.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c6f5cc756e0a8e4c
  ServiceName: com.amazonaws.us-east-2.sns
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - sqs.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: sqs.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: sqs.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ae5c1762383436c9
  ServiceName: com.amazonaws.us-east-2.sqs
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ssm.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ssm.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ssm.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ee6723c76642b3d8
  ServiceName: com.amazonaws.us-east-2.ssm
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ssm-contacts.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ssm-contacts.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ssm-contacts.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c201b51403edd2f1
  ServiceName: com.amazonaws.us-east-2.ssm-contacts
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ssm-incidents.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ssm-incidents.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ssm-incidents.us-east-2.amazonaws.com
  ServiceId: vpce-svc-014ba9dc0bc5b329a
  ServiceName: com.amazonaws.us-east-2.ssm-incidents
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - ssmmessages.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: ssmmessages.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: ssmmessages.us-east-2.amazonaws.com
  ServiceId: vpce-svc-09d7ff13062c644d0
  ServiceName: com.amazonaws.us-east-2.ssmmessages
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - states.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: states.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: states.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0a49965c525bb9f1f
  ServiceName: com.amazonaws.us-east-2.states
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - storagegateway.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: storagegateway.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: storagegateway.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0790e0a438110e72f
  ServiceName: com.amazonaws.us-east-2.storagegateway
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - sts.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: sts.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: sts.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d2d49c1d3a5adb59
  ServiceName: com.amazonaws.us-east-2.sts
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - swf.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: swf.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: swf.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0b2df81122418a692
  ServiceName: com.amazonaws.us-east-2.swf
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - swf-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: swf-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: swf-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-03ddea8a26277330d
  ServiceName: com.amazonaws.us-east-2.swf-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - sync-states.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: sync-states.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: sync-states.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c4b49c941ed53b25
  ServiceName: com.amazonaws.us-east-2.sync-states
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - synthetics.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: synthetics.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: synthetics.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c2c73b784ea6b556
  ServiceName: com.amazonaws.us-east-2.synthetics
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - textract.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: textract.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: textract.us-east-2.amazonaws.com
  ServiceId: vpce-svc-035376b312cd7ab79
  ServiceName: com.amazonaws.us-east-2.textract
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - textract-fips.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: textract-fips.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: textract-fips.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0aa0e1fba9732b1ca
  ServiceName: com.amazonaws.us-east-2.textract-fips
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - transcribe.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: transcribe.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: transcribe.us-east-2.amazonaws.com
  ServiceId: vpce-svc-00de85fba6088291b
  ServiceName: com.amazonaws.us-east-2.transcribe
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - transcribestreaming.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: transcribestreaming.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: transcribestreaming.us-east-2.amazonaws.com
  ServiceId: vpce-svc-074082e29a960be92
  ServiceName: com.amazonaws.us-east-2.transcribestreaming
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - transfer.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: transfer.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: transfer.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0fd46e57770c88383
  ServiceName: com.amazonaws.us-east-2.transfer
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - server.transfer.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: '*.server.transfer.us-east-2.amazonaws.com'
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: '*.server.transfer.us-east-2.amazonaws.com'
  ServiceId: vpce-svc-0da403c097e49b8cb
  ServiceName: com.amazonaws.us-east-2.transfer.server
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - translate.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: translate.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: translate.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ce3c9789bc5303a1
  ServiceName: com.amazonaws.us-east-2.translate
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - trustedadvisor.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: trustedadvisor.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: trustedadvisor.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0cccd876b92246eb9
  ServiceName: com.amazonaws.us-east-2.trustedadvisor
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - verifiedpermissions.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: verifiedpermissions.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: verifiedpermissions.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0ab6280569120d3f4
  ServiceName: com.amazonaws.us-east-2.verifiedpermissions
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: false
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - vpc-lattice.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: vpc-lattice.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: vpc-lattice.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0c6cbdd889f48990f
  ServiceName: com.amazonaws.us-east-2.vpc-lattice
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
- AcceptanceRequired: false
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BaseEndpointDnsNames:
  - xray.us-east-2.vpce.amazonaws.com
  ManagesVpcEndpoints: false
  Owner: amazon
  PrivateDnsName: xray.us-east-2.amazonaws.com
  PrivateDnsNameVerificationState: verified
  PrivateDnsNames:
  - PrivateDnsName: xray.us-east-2.amazonaws.com
  ServiceId: vpce-svc-0d1ce9338231d003a
  ServiceName: com.amazonaws.us-east-2.xray
  ServiceType:
  - ServiceType: Interface
  SupportedIpAddressTypes:
  - ipv4
  Tags: []
  VpcEndpointPolicySupported: true
ServiceNames:
- aws.api.us-east-2.kendra-ranking
- aws.sagemaker.us-east-2.notebook
- aws.sagemaker.us-east-2.studio
- com.amazonaws.s3-global.accesspoint
- com.amazonaws.us-east-2.access-analyzer
- com.amazonaws.us-east-2.acm-pca
- com.amazonaws.us-east-2.airflow.api
- com.amazonaws.us-east-2.airflow.env
- com.amazonaws.us-east-2.airflow.ops
- com.amazonaws.us-east-2.application-autoscaling
- com.amazonaws.us-east-2.appmesh
- com.amazonaws.us-east-2.appmesh-envoy-management
- com.amazonaws.us-east-2.apprunner
- com.amazonaws.us-east-2.apprunner.requests
- com.amazonaws.us-east-2.appstream.api
- com.amazonaws.us-east-2.appstream.streaming
- com.amazonaws.us-east-2.appsync-api
- com.amazonaws.us-east-2.aps
- com.amazonaws.us-east-2.aps-workspaces
- com.amazonaws.us-east-2.athena
- com.amazonaws.us-east-2.auditmanager
- com.amazonaws.us-east-2.autoscaling
- com.amazonaws.us-east-2.autoscaling-plans
- com.amazonaws.us-east-2.awsconnector
- com.amazonaws.us-east-2.b2bi
- com.amazonaws.us-east-2.backup
- com.amazonaws.us-east-2.backup-gateway
- com.amazonaws.us-east-2.batch
- com.amazonaws.us-east-2.bedrock
- com.amazonaws.us-east-2.bedrock-runtime
- com.amazonaws.us-east-2.cassandra
- com.amazonaws.us-east-2.cleanrooms
- com.amazonaws.us-east-2.cloudcontrolapi
- com.amazonaws.us-east-2.cloudcontrolapi-fips
- com.amazonaws.us-east-2.clouddirectory
- com.amazonaws.us-east-2.cloudformation
- com.amazonaws.us-east-2.cloudhsmv2
- com.amazonaws.us-east-2.cloudtrail
- com.amazonaws.us-east-2.codeartifact.api
- com.amazonaws.us-east-2.codeartifact.repositories
- com.amazonaws.us-east-2.codebuild
- com.amazonaws.us-east-2.codebuild-fips
- com.amazonaws.us-east-2.codecommit
- com.amazonaws.us-east-2.codecommit-fips
- com.amazonaws.us-east-2.codedeploy
- com.amazonaws.us-east-2.codedeploy-commands-secure
- com.amazonaws.us-east-2.codeguru-profiler
- com.amazonaws.us-east-2.codeguru-reviewer
- com.amazonaws.us-east-2.codepipeline
- com.amazonaws.us-east-2.codestar-connections.api
- com.amazonaws.us-east-2.comprehend
- com.amazonaws.us-east-2.comprehendmedical
- com.amazonaws.us-east-2.config
- com.amazonaws.us-east-2.console
- com.amazonaws.us-east-2.data-servicediscovery
- com.amazonaws.us-east-2.data-servicediscovery-fips
- com.amazonaws.us-east-2.databrew
- com.amazonaws.us-east-2.dataexchange
- com.amazonaws.us-east-2.datasync
- com.amazonaws.us-east-2.datazone
- com.amazonaws.us-east-2.devops-guru
- com.amazonaws.us-east-2.dms
- com.amazonaws.us-east-2.dms-fips
- com.amazonaws.us-east-2.drs
- com.amazonaws.us-east-2.dynamodb
- com.amazonaws.us-east-2.ebs
- com.amazonaws.us-east-2.ec2
- com.amazonaws.us-east-2.ec2messages
- com.amazonaws.us-east-2.ecr.api
- com.amazonaws.us-east-2.ecr.dkr
- com.amazonaws.us-east-2.ecs
- com.amazonaws.us-east-2.ecs-agent
- com.amazonaws.us-east-2.ecs-telemetry
- com.amazonaws.us-east-2.eks
- com.amazonaws.us-east-2.eks-auth
- com.amazonaws.us-east-2.elastic-inference.runtime
- com.amazonaws.us-east-2.elasticache
- com.amazonaws.us-east-2.elasticache-fips
- com.amazonaws.us-east-2.elasticbeanstalk
- com.amazonaws.us-east-2.elasticbeanstalk-health
- com.amazonaws.us-east-2.elasticfilesystem
- com.amazonaws.us-east-2.elasticfilesystem-fips
- com.amazonaws.us-east-2.elasticloadbalancing
- com.amazonaws.us-east-2.elasticmapreduce
- com.amazonaws.us-east-2.email-smtp
- com.amazonaws.us-east-2.emr-containers
- com.amazonaws.us-east-2.emr-serverless
- com.amazonaws.us-east-2.entityresolution
- com.amazonaws.us-east-2.events
- com.amazonaws.us-east-2.evidently
- com.amazonaws.us-east-2.evidently-dataplane
- com.amazonaws.us-east-2.execute-api
- com.amazonaws.us-east-2.finspace
- com.amazonaws.us-east-2.finspace-api
- com.amazonaws.us-east-2.fis
- com.amazonaws.us-east-2.forecast
- com.amazonaws.us-east-2.forecast-fips
- com.amazonaws.us-east-2.forecastquery
- com.amazonaws.us-east-2.forecastquery-fips
- com.amazonaws.us-east-2.frauddetector
- com.amazonaws.us-east-2.fsx
- com.amazonaws.us-east-2.fsx-fips
- com.amazonaws.us-east-2.git-codecommit
- com.amazonaws.us-east-2.git-codecommit-fips
- com.amazonaws.us-east-2.glue
- com.amazonaws.us-east-2.grafana
- com.amazonaws.us-east-2.grafana-workspace
- com.amazonaws.us-east-2.greengrass
- com.amazonaws.us-east-2.groundstation
- com.amazonaws.us-east-2.guardduty-data
- com.amazonaws.us-east-2.guardduty-data-fips
- com.amazonaws.us-east-2.healthlake
- com.amazonaws.us-east-2.identitystore
- com.amazonaws.us-east-2.imagebuilder
- com.amazonaws.us-east-2.inspector2
- com.amazonaws.us-east-2.iot.credentials
- com.amazonaws.us-east-2.iot.data
- com.amazonaws.us-east-2.iot.fleethub.api
- com.amazonaws.us-east-2.iotsitewise.api
- com.amazonaws.us-east-2.iotsitewise.data
- com.amazonaws.us-east-2.kendra
- com.amazonaws.us-east-2.kinesis-firehose
- com.amazonaws.us-east-2.kinesis-streams
- com.amazonaws.us-east-2.kms
- com.amazonaws.us-east-2.kms-fips
- com.amazonaws.us-east-2.lakeformation
- com.amazonaws.us-east-2.lambda
- com.amazonaws.us-east-2.license-manager
- com.amazonaws.us-east-2.license-manager-fips
- com.amazonaws.us-east-2.license-manager-user-subscriptions
- com.amazonaws.us-east-2.logs
- com.amazonaws.us-east-2.lookoutmetrics
- com.amazonaws.us-east-2.lookoutvision
- com.amazonaws.us-east-2.m2
- com.amazonaws.us-east-2.macie2
- com.amazonaws.us-east-2.managedblockchain.bitcoin.mainnet
- com.amazonaws.us-east-2.managedblockchain.bitcoin.testnet
- com.amazonaws.us-east-2.mediaconnect
- com.amazonaws.us-east-2.memory-db
- com.amazonaws.us-east-2.memorydb-fips
- com.amazonaws.us-east-2.mgn
- com.amazonaws.us-east-2.monitoring
- com.amazonaws.us-east-2.neptune-graph
- com.amazonaws.us-east-2.pca-connector-ad
- com.amazonaws.us-east-2.personalize
- com.amazonaws.us-east-2.personalize-events
- com.amazonaws.us-east-2.personalize-runtime
- com.amazonaws.us-east-2.pinpoint
- com.amazonaws.us-east-2.pinpoint-sms-voice-v2
- com.amazonaws.us-east-2.polly
- com.amazonaws.us-east-2.private-networks
- com.amazonaws.us-east-2.proton
- com.amazonaws.us-east-2.qldb.session
- com.amazonaws.us-east-2.rds
- com.amazonaws.us-east-2.rds-data
- com.amazonaws.us-east-2.redshift
- com.amazonaws.us-east-2.redshift-data
- com.amazonaws.us-east-2.redshift-fips
- com.amazonaws.us-east-2.refactor-spaces
- com.amazonaws.us-east-2.rekognition
- com.amazonaws.us-east-2.rekognition-fips
- com.amazonaws.us-east-2.robomaker
- com.amazonaws.us-east-2.rolesanywhere
- com.amazonaws.us-east-2.rum
- com.amazonaws.us-east-2.rum-dataplane
- com.amazonaws.us-east-2.s3
- com.amazonaws.us-east-2.s3
- com.amazonaws.us-east-2.s3-outposts
- com.amazonaws.us-east-2.sagemaker.api
- com.amazonaws.us-east-2.sagemaker.featurestore-runtime
- com.amazonaws.us-east-2.sagemaker.metrics
- com.amazonaws.us-east-2.sagemaker.runtime
- com.amazonaws.us-east-2.sagemaker.runtime-fips
- com.amazonaws.us-east-2.secretsmanager
- com.amazonaws.us-east-2.securityhub
- com.amazonaws.us-east-2.servicecatalog
- com.amazonaws.us-east-2.servicecatalog-appregistry
- com.amazonaws.us-east-2.servicediscovery
- com.amazonaws.us-east-2.servicediscovery-fips
- com.amazonaws.us-east-2.signin
- com.amazonaws.us-east-2.simspaceweaver
- com.amazonaws.us-east-2.sns
- com.amazonaws.us-east-2.sqs
- com.amazonaws.us-east-2.ssm
- com.amazonaws.us-east-2.ssm-contacts
- com.amazonaws.us-east-2.ssm-incidents
- com.amazonaws.us-east-2.ssmmessages
- com.amazonaws.us-east-2.states
- com.amazonaws.us-east-2.storagegateway
- com.amazonaws.us-east-2.sts
- com.amazonaws.us-east-2.swf
- com.amazonaws.us-east-2.swf-fips
- com.amazonaws.us-east-2.sync-states
- com.amazonaws.us-east-2.synthetics
- com.amazonaws.us-east-2.textract
- com.amazonaws.us-east-2.textract-fips
- com.amazonaws.us-east-2.transcribe
- com.amazonaws.us-east-2.transcribestreaming
- com.amazonaws.us-east-2.transfer
- com.amazonaws.us-east-2.transfer.server
- com.amazonaws.us-east-2.translate
- com.amazonaws.us-east-2.trustedadvisor
- com.amazonaws.us-east-2.verifiedpermissions
- com.amazonaws.us-east-2.vpc-lattice
- com.amazonaws.us-east-2.xray
]

***************************************************************************************************************************

# EC2

***************************************************************************************************************************
===========================================================================================================================

# Elastic IPs

===========================================================================================================================

% aws ec2 describe-addresses --region=us-east-2
[
Addresses:
- AllocationId: eipalloc-0662e7314af390e90
  AssociationId: eipassoc-0a35031539a56374f
  Domain: vpc
  NetworkBorderGroup: us-east-2
  NetworkInterfaceId: eni-0fbb6ac73e1c04702
  NetworkInterfaceOwnerId: '<Account ID>'
  PrivateIpAddress: 10.0.4.205
  PublicIp: 3.22.33.13
  PublicIpv4Pool: amazon
  Tags:
  - Key: Name
    Value: education-vpc-us-east-2a
]

===========================================================================================================================

# Volumes

===========================================================================================================================

% aws ec2 describe-volumes --region=us-east-2
[
Volumes:
- Attachments:
  - AttachTime: '2023-11-30T17:11:28+00:00'
    DeleteOnTermination: true
    Device: /dev/xvda
    InstanceId: i-00337e2066f905208
    State: attached
    VolumeId: vol-0d8c191a660d878f5
  AvailabilityZone: us-east-2c
  CreateTime: '2023-11-30T17:11:28.102000+00:00'
  Encrypted: false
  Iops: 100
  MultiAttachEnabled: false
  Size: 20
  SnapshotId: snap-00344f187cab8c8d1
  State: in-use
  Tags:
  - Key: eks:nodegroup-name
    Value: node-group-1-20231130170325157300000017
  - Key: Name
    Value: node-group-1
  - Key: eks:cluster-name
    Value: education-eks-vOUQg0d3
  VolumeId: vol-0d8c191a660d878f5
  VolumeType: gp2
- Attachments:
  - AttachTime: '2023-11-30T19:04:22+00:00'
    DeleteOnTermination: false
    Device: /dev/xvdb
    InstanceId: i-00337e2066f905208
    State: attached
    VolumeId: vol-0c1f6f0a1ef75cb47
  AvailabilityZone: us-east-2c
  CreateTime: '2023-11-30T19:04:17.742000+00:00'
  Encrypted: false
  Iops: 100
  MultiAttachEnabled: false
  Size: 1
  SnapshotId: ''
  State: in-use
  Tags:
  - Key: kubernetes.io/created-for/pvc/namespace
    Value: default
  - Key: ebs.csi.aws.com/cluster
    Value: 'true'
  - Key: kubernetes.io/created-for/pv/name
    Value: pvc-ced7783a-f971-42a6-859d-0c762e718673
  - Key: Name
    Value: education-eks-vOUQg0d3-dynamic-pvc-ced7783a-f971-42a6-859d-0c762e718673
  - Key: CSIVolumeName
    Value: pvc-ced7783a-f971-42a6-859d-0c762e718673
  - Key: KubernetesCluster
    Value: education-eks-vOUQg0d3
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: owned
  - Key: kubernetes.io/created-for/pvc/name
    Value: minio-persistentvolumeclaim
  VolumeId: vol-0c1f6f0a1ef75cb47
  VolumeType: gp2
- Attachments:
  - AttachTime: '2023-11-30T17:03:45+00:00'
    DeleteOnTermination: true
    Device: /dev/xvda
    InstanceId: i-0d99186f2be39de71
    State: attached
    VolumeId: vol-0a9931523a6030653
  AvailabilityZone: us-east-2a
  CreateTime: '2023-11-30T17:03:45.082000+00:00'
  Encrypted: false
  Iops: 100
  MultiAttachEnabled: false
  Size: 20
  SnapshotId: snap-00344f187cab8c8d1
  State: in-use
  Tags:
  - Key: eks:cluster-name
    Value: education-eks-vOUQg0d3
  - Key: eks:nodegroup-name
    Value: node-group-2-20231130170325157300000019
  - Key: Name
    Value: node-group-2
  VolumeId: vol-0a9931523a6030653
  VolumeType: gp2
- Attachments:
  - AttachTime: '2023-11-30T17:11:39+00:00'
    DeleteOnTermination: true
    Device: /dev/xvda
    InstanceId: i-06c28881fa36b6488
    State: attached
    VolumeId: vol-0610235cc09681c01
  AvailabilityZone: us-east-2a
  CreateTime: '2023-11-30T17:11:39.265000+00:00'
  Encrypted: false
  Iops: 100
  MultiAttachEnabled: false
  Size: 20
  SnapshotId: snap-00344f187cab8c8d1
  State: in-use
  Tags:
  - Key: Name
    Value: node-group-1
  - Key: eks:cluster-name
    Value: education-eks-vOUQg0d3
  - Key: eks:nodegroup-name
    Value: node-group-1-20231130170325157300000017
  VolumeId: vol-0610235cc09681c01
  VolumeType: gp2
- Attachments:
  - AttachTime: '2023-11-30T19:04:23+00:00'
    DeleteOnTermination: false
    Device: /dev/xvdb
    InstanceId: i-06c28881fa36b6488
    State: attached
    VolumeId: vol-0f8548040d5b5be2e
  AvailabilityZone: us-east-2a
  CreateTime: '2023-11-30T19:04:19.401000+00:00'
  Encrypted: false
  Iops: 100
  MultiAttachEnabled: false
  Size: 1
  SnapshotId: ''
  State: in-use
  Tags:
  - Key: KubernetesCluster
    Value: education-eks-vOUQg0d3
  - Key: ebs.csi.aws.com/cluster
    Value: 'true'
  - Key: kubernetes.io/created-for/pvc/namespace
    Value: default
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    Value: owned
  - Key: CSIVolumeName
    Value: pvc-d1a02c63-0914-45da-988b-4c215c66607b
  - Key: kubernetes.io/created-for/pv/name
    Value: pvc-d1a02c63-0914-45da-988b-4c215c66607b
  - Key: Name
    Value: education-eks-vOUQg0d3-dynamic-pvc-d1a02c63-0914-45da-988b-4c215c66607b
  - Key: kubernetes.io/created-for/pvc/name
    Value: mongo-persistentvolumeclaim
  VolumeId: vol-0f8548040d5b5be2e
  VolumeType: gp2
]

===========================================================================================================================

# Dedicated Hosts

===========================================================================================================================

% aws ec2 describe-hosts --region=us-east-2
[
Hosts: []
]

===========================================================================================================================

# Key pairs

===========================================================================================================================

% aws ec2 describe-key-pairs --region=us-east-2
[
KeyPairs: []
]

===========================================================================================================================

# Placement groups

===========================================================================================================================

% aws ec2 describe-placement-groups --region=us-east-2
[
PlacementGroups: []
]

===========================================================================================================================

# Snapshots

===========================================================================================================================

% aws ec2 describe-snapshots --region=us-east-2 --owner-ids=<Account ID>
[
Snapshots: []
]

===========================================================================================================================

***************************************************************************************************************************

# Load balancers

***************************************************************************************************************************

% aws elb describe-load-balancers --region=us-east-2
LoadBalancerDescriptions:
- AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BackendServerDescriptions: []
  CanonicalHostedZoneName: a39abdf2796294250b76ae8708a875ed-1232472173.us-east-2.elb.amazonaws.com
  CanonicalHostedZoneNameID: Z3AADJGX6KTTL2
  CreatedTime: '2023-11-30T19:04:18.020000+00:00'
  DNSName: a39abdf2796294250b76ae8708a875ed-1232472173.us-east-2.elb.amazonaws.com
  HealthCheck:
    HealthyThreshold: 2
    Interval: 10
    Target: TCP:30735
    Timeout: 5
    UnhealthyThreshold: 6
  Instances:
  - InstanceId: i-00337e2066f905208
  - InstanceId: i-06c28881fa36b6488
  - InstanceId: i-0d99186f2be39de71
  ListenerDescriptions:
  - Listener:
      InstancePort: 32101
      InstanceProtocol: TCP
      LoadBalancerPort: 9000
      Protocol: TCP
    PolicyNames: []
  - Listener:
      InstancePort: 30735
      InstanceProtocol: TCP
      LoadBalancerPort: 9090
      Protocol: TCP
    PolicyNames: []
  LoadBalancerName: a39abdf2796294250b76ae8708a875ed
  Policies:
    AppCookieStickinessPolicies: []
    LBCookieStickinessPolicies: []
    OtherPolicies: []
  Scheme: internet-facing
  SecurityGroups:
  - sg-08a550c113f1bc227
  SourceSecurityGroup:
    GroupName: k8s-elb-a39abdf2796294250b76ae8708a875ed
    OwnerAlias: '<Account ID>'
  Subnets:
  - subnet-0261e4261cd118efa
  - subnet-0500646d0d0be020e
  - subnet-078ba8caa49d21285
  VPCId: vpc-0e081eeaaf3ae57dc
- AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BackendServerDescriptions: []
  CanonicalHostedZoneName: a987fabca967d4ea4bbe192a36ebb0d1-704349295.us-east-2.elb.amazonaws.com
  CanonicalHostedZoneNameID: Z3AADJGX6KTTL2
  CreatedTime: '2023-11-30T19:04:21.960000+00:00'
  DNSName: a987fabca967d4ea4bbe192a36ebb0d1-704349295.us-east-2.elb.amazonaws.com
  HealthCheck:
    HealthyThreshold: 2
    Interval: 10
    Target: TCP:30044
    Timeout: 5
    UnhealthyThreshold: 6
  Instances:
  - InstanceId: i-00337e2066f905208
  - InstanceId: i-06c28881fa36b6488
  - InstanceId: i-0d99186f2be39de71
  ListenerDescriptions:
  - Listener:
      InstancePort: 30044
      InstanceProtocol: TCP
      LoadBalancerPort: 80
      Protocol: TCP
    PolicyNames: []
  LoadBalancerName: a987fabca967d4ea4bbe192a36ebb0d1
  Policies:
    AppCookieStickinessPolicies: []
    LBCookieStickinessPolicies: []
    OtherPolicies: []
  Scheme: internet-facing
  SecurityGroups:
  - sg-0e0c8d72fc3947eb4
  SourceSecurityGroup:
    GroupName: k8s-elb-a987fabca967d4ea4bbe192a36ebb0d1
    OwnerAlias: '<Account ID>'
  Subnets:
  - subnet-0261e4261cd118efa
  - subnet-0500646d0d0be020e
  - subnet-078ba8caa49d21285
  VPCId: vpc-0e081eeaaf3ae57dc
- AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  BackendServerDescriptions: []
  CanonicalHostedZoneName: a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com
  CanonicalHostedZoneNameID: Z3AADJGX6KTTL2
  CreatedTime: '2023-11-30T19:04:20.080000+00:00'
  DNSName: a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com
  HealthCheck:
    HealthyThreshold: 2
    Interval: 10
    Target: TCP:32389
    Timeout: 5
    UnhealthyThreshold: 6
  Instances:
  - InstanceId: i-00337e2066f905208
  - InstanceId: i-06c28881fa36b6488
  - InstanceId: i-0d99186f2be39de71
  ListenerDescriptions:
  - Listener:
      InstancePort: 32389
      InstanceProtocol: TCP
      LoadBalancerPort: 27017
      Protocol: TCP
    PolicyNames: []
  LoadBalancerName: a90d8e2ed34e54d25bc4508e28fb3f63
  Policies:
    AppCookieStickinessPolicies: []
    LBCookieStickinessPolicies: []
    OtherPolicies: []
  Scheme: internet-facing
  SecurityGroups:
  - sg-0d7c915c1e0b49bb1
  SourceSecurityGroup:
    GroupName: k8s-elb-a90d8e2ed34e54d25bc4508e28fb3f63
    OwnerAlias: '<Account ID>'
  Subnets:
  - subnet-0261e4261cd118efa
  - subnet-0500646d0d0be020e
  - subnet-078ba8caa49d21285
  VPCId: vpc-0e081eeaaf3ae57dc

***************************************************************************************************************************

# Auto Scaling Groups

***************************************************************************************************************************

% aws autoscaling describe-auto-scaling-groups --region=us-east-2
AutoScalingGroups:
- AutoScalingGroupARN: arn:aws:autoscaling:us-east-2:<Account ID>:autoScalingGroup:ea0fda0e-f023-409f-98cf-11983f1da358:autoScalingGroupName/eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
  AutoScalingGroupName: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  CapacityRebalance: true
  CreatedTime: '2023-11-30T17:04:09.456000+00:00'
  DefaultCooldown: 300
  DesiredCapacity: 2
  EnabledMetrics: []
  HealthCheckGracePeriod: 15
  HealthCheckType: EC2
  Instances:
  - AvailabilityZone: us-east-2c
    HealthStatus: Healthy
    InstanceId: i-00337e2066f905208
    InstanceType: t3.small
    LaunchTemplate:
      LaunchTemplateId: lt-0da601a222e741548
      LaunchTemplateName: eks-f2c61097-b667-9365-41b5-a0ac4978fbc0
      Version: '1'
    LifecycleState: InService
    ProtectedFromScaleIn: false
  - AvailabilityZone: us-east-2a
    HealthStatus: Healthy
    InstanceId: i-06c28881fa36b6488
    InstanceType: t3.small
    LaunchTemplate:
      LaunchTemplateId: lt-0da601a222e741548
      LaunchTemplateName: eks-f2c61097-b667-9365-41b5-a0ac4978fbc0
      Version: '1'
    LifecycleState: InService
    ProtectedFromScaleIn: false
  LoadBalancerNames: []
  MaxSize: 3
  MinSize: 1
  MixedInstancesPolicy:
    InstancesDistribution:
      OnDemandAllocationStrategy: prioritized
      OnDemandBaseCapacity: 0
      OnDemandPercentageAboveBaseCapacity: 100
      SpotAllocationStrategy: lowest-price
      SpotInstancePools: 2
    LaunchTemplate:
      LaunchTemplateSpecification:
        LaunchTemplateId: lt-0da601a222e741548
        LaunchTemplateName: eks-f2c61097-b667-9365-41b5-a0ac4978fbc0
        Version: '1'
      Overrides:
      - InstanceType: t3.small
  NewInstancesProtectedFromScaleIn: false
  ServiceLinkedRoleARN: arn:aws:iam::<Account ID>:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
  SuspendedProcesses: []
  Tags:
  - Key: eks:cluster-name
    PropagateAtLaunch: true
    ResourceId: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    ResourceType: auto-scaling-group
    Value: education-eks-vOUQg0d3
  - Key: eks:nodegroup-name
    PropagateAtLaunch: true
    ResourceId: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    ResourceType: auto-scaling-group
    Value: node-group-1-20231130170325157300000017
  - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
    PropagateAtLaunch: true
    ResourceId: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    ResourceType: auto-scaling-group
    Value: owned
  - Key: k8s.io/cluster-autoscaler/enabled
    PropagateAtLaunch: true
    ResourceId: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    ResourceType: auto-scaling-group
    Value: 'true'
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    PropagateAtLaunch: true
    ResourceId: eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0
    ResourceType: auto-scaling-group
    Value: owned
  TargetGroupARNs: []
  TerminationPolicies:
  - AllocationStrategy
  - OldestLaunchTemplate
  - OldestInstance
  TrafficSources: []
  VPCZoneIdentifier: subnet-041ce879edf62a575,subnet-0c8ca28af86a12a6a,subnet-00a67b7cb5448e9dd
- AutoScalingGroupARN: arn:aws:autoscaling:us-east-2:<Account ID>:autoScalingGroup:4bac7ad1-9a8e-4072-89a3-a089cc73369a:autoScalingGroupName/eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
  AutoScalingGroupName: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
  AvailabilityZones:
  - us-east-2a
  - us-east-2b
  - us-east-2c
  CapacityRebalance: true
  CreatedTime: '2023-11-30T17:03:40.426000+00:00'
  DefaultCooldown: 300
  DesiredCapacity: 1
  EnabledMetrics: []
  HealthCheckGracePeriod: 15
  HealthCheckType: EC2
  Instances:
  - AvailabilityZone: us-east-2a
    HealthStatus: Healthy
    InstanceId: i-0d99186f2be39de71
    InstanceType: t3.small
    LaunchTemplate:
      LaunchTemplateId: lt-08fa21a2ca35cbd47
      LaunchTemplateName: eks-98c61097-b66b-4081-e61e-4d7ed690cc37
      Version: '1'
    LifecycleState: InService
    ProtectedFromScaleIn: false
  LoadBalancerNames: []
  MaxSize: 2
  MinSize: 1
  MixedInstancesPolicy:
    InstancesDistribution:
      OnDemandAllocationStrategy: prioritized
      OnDemandBaseCapacity: 0
      OnDemandPercentageAboveBaseCapacity: 100
      SpotAllocationStrategy: lowest-price
      SpotInstancePools: 2
    LaunchTemplate:
      LaunchTemplateSpecification:
        LaunchTemplateId: lt-08fa21a2ca35cbd47
        LaunchTemplateName: eks-98c61097-b66b-4081-e61e-4d7ed690cc37
        Version: '1'
      Overrides:
      - InstanceType: t3.small
  NewInstancesProtectedFromScaleIn: false
  ServiceLinkedRoleARN: arn:aws:iam::<Account ID>:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling
  SuspendedProcesses: []
  Tags:
  - Key: eks:cluster-name
    PropagateAtLaunch: true
    ResourceId: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    ResourceType: auto-scaling-group
    Value: education-eks-vOUQg0d3
  - Key: eks:nodegroup-name
    PropagateAtLaunch: true
    ResourceId: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    ResourceType: auto-scaling-group
    Value: node-group-2-20231130170325157300000019
  - Key: k8s.io/cluster-autoscaler/education-eks-vOUQg0d3
    PropagateAtLaunch: true
    ResourceId: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    ResourceType: auto-scaling-group
    Value: owned
  - Key: k8s.io/cluster-autoscaler/enabled
    PropagateAtLaunch: true
    ResourceId: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    ResourceType: auto-scaling-group
    Value: 'true'
  - Key: kubernetes.io/cluster/education-eks-vOUQg0d3
    PropagateAtLaunch: true
    ResourceId: eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37
    ResourceType: auto-scaling-group
    Value: owned
  TargetGroupARNs: []
  TerminationPolicies:
  - AllocationStrategy
  - OldestLaunchTemplate
  - OldestInstance
  TrafficSources: []
  VPCZoneIdentifier: subnet-041ce879edf62a575,subnet-0c8ca28af86a12a6a,subnet-00a67b7cb5448e9dd

===========================================================================================================================
***************************************************************************************************************************

# Configure kubectl

# After provisioning the cluster, configure kubectl to interact with it.

# First, open the outputs.tf file to review the output values.

# Use the region and cluster_name outputs to configure kubectl.

# outputs.tf

***************************************************************************************************************************

% cat outputs.tf
[
# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ids attached to the cluster control plane"
  value       = module.eks.cluster_security_group_id
}

output "region" {
  description = "AWS region"
  value       = var.region
}

output "cluster_name" {
  description = "Kubernetes Cluster Name"
  value       = module.eks.cluster_name
}
]

***************************************************************************************************************************

# Run the following command to retrieve the access credentials for the cluster and configure kubectl.

***************************************************************************************************************************

% aws eks --region $(terraform output -raw region) update-kubeconfig \
    --name $(terraform output -raw cluster_name)
[
Added new context arn:aws:eks:us-east-2:<Account ID>:cluster/education-eks-vOUQg0d3 to ~/.kube/config
]

# Use kubectl to manage the cluster and deploy Kubernetes configurations to it.

***************************************************************************************************************************

# Verify the Cluster

***************************************************************************************************************************

# Use kubectl commands to verify the cluster configuration.

# Get information about the cluster.

% kubectl cluster-info
[
Kubernetes control plane is running at https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com
CoreDNS is running at https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
]

# Notice that the Kubernetes control plane location matches the cluster_endpoint value from the terraform apply output above.

***************************************************************************************************************************

# Verify that all three worker nodes are part of the cluster.

***************************************************************************************************************************

% kubectl get nodes
[
NAME                                       STATUS   ROLES    AGE   VERSION
ip-10-0-1-148.us-east-2.compute.internal   Ready    <none>   73m   v1.27.7-eks-e71965b
ip-10-0-1-19.us-east-2.compute.internal    Ready    <none>   66m   v1.27.7-eks-e71965b
ip-10-0-3-188.us-east-2.compute.internal   Ready    <none>   66m   v1.27.7-eks-e71965b
]

# Verified that the cluster can be connected using kubectl and that all three worker nodes are healthy.

# The cluster is ready to use.

***************************************************************************************************************************
###########################################################################################################################

# Node.js MongoDB Minio

# node-mongodb-app-amazon-linux-extras-x86-64:version2.0.0

###########################################################################################################################
***************************************************************************************************************************

% cd ~/Desktop/Working/Technology/Kubernetes/Proof-of-Concept/AWS/Terraform/learn-terraform-provision-eks-cluster

% tree node-mongodb-app/kubectl-aws-linux-x86-64/
[
node-mongodb-app/kubectl-aws-linux-x86-64/
├── cluster-ip-service-minio-aws-linux-x86-64.yaml
├── cluster-ip-service-mongo-aws-linux-x86-64.yaml
└── load-balancer-service-node-mongodb-app-v2-aws-linux-x86-64.yaml

1 directory, 3 files
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64/cluster-ip-service-minio-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-persistentvolumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  ports:
    - port: 9090
      name: console
    - port: 9000
      name: s3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio-container
          image: dockerrajani/minio-aws-linux-x86-64:version1.0.0
          imagePullPolicy: Always
          args:
            - server
            - /storage
          env:
            - name: MINIO_ACCESS_KEY
              value: minioadmin
            - name: MINIO_SECRET_KEY
              value: minioadmin
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: storage
              mountPath: /storage
          command:
            - /bin/bash
            - -c
          args:
              - minio server /data --console-address :9090
      restartPolicy: Always
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-persistentvolumeclaim
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64/cluster-ip-service-mongo-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-persistentvolumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo-container
          image: dockerrajani/mongo-aws-linux-x86-64:version1.0.0
          imagePullPolicy: Always
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: storage
              mountPath: /data/db
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: mongo-persistentvolumeclaim
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64/load-balancer-service-node-mongodb-app-v2-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: Service
metadata:
  name: node-mongodb-app-service
spec:
  selector:
    app: node-mongodb-app
  ports:
    - port: 80
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-mongodb-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-mongodb-app
  template:
    metadata:
      labels:
        app: node-mongodb-app
    spec:
      containers:
        - name: node-mongodb-app-container
          image: dockerrajani/node-mongodb-app-amazon-linux-extras-x86-64:version2.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URL
              value: mongodb://mongo-service:27017/dev
            - name: MINIO_ACCESS_KEY
              value: minioadmin
            - name: MINIO_SECRET_KEY
              value: minioadmin
            - name: MINIO_HOST
              value: minio-service
]


% kubectl apply -f node-mongodb-app/kubectl-aws-linux-x86-64/
[
% kubectl delete -f node-mongodb-app/kubectl-aws-linux-x86-64/
]


% kubectl get pods --watch


% kubectl get pods


% kubectl get services

***************************************************************************************************************************

% kubectl apply -f node-mongodb-app/kubectl-aws-linux-x86-64/
[
persistentvolumeclaim/minio-persistentvolumeclaim created
service/minio-service created
deployment.apps/minio-deployment created
persistentvolumeclaim/mongo-persistentvolumeclaim created
service/mongo-service created
deployment.apps/mongo-deployment created
service/node-mongodb-app-service created
deployment.apps/node-mongodb-app-deployment created
]

% kubectl get pods --watch
[
NAME                                         READY   STATUS              RESTARTS   AGE
minio-deployment-58485b4c44-jbpjd            0/1     ContainerCreating   0          11s
mongo-deployment-75f67dff4b-pxzcm            0/1     ContainerCreating   0          9s
node-mongodb-app-deployment-66b4d7c9-n7h9w   1/1     Running             0          8s
minio-deployment-58485b4c44-jbpjd            1/1     Running             0          18s
mongo-deployment-75f67dff4b-pxzcm            1/1     Running             0          20s
^C%
]
                                                                                                                                                                                                                       % kubectl get pods
[
NAME                                         READY   STATUS    RESTARTS   AGE
minio-deployment-58485b4c44-jbpjd            1/1     Running   0          34s
mongo-deployment-75f67dff4b-pxzcm            1/1     Running   0          32s
node-mongodb-app-deployment-66b4d7c9-n7h9w   1/1     Running   0          31s
]

% kubectl get services
[                                                      
NAME                       TYPE           CLUSTER-IP      EXTERNAL-IP                                                               PORT(S)             AGE
kubernetes                 ClusterIP      172.20.0.1      <none>                                                                    443/TCP             89m
minio-service              ClusterIP      172.20.216.39   <none>                                                                    9090/TCP,9000/TCP   118s
mongo-service              ClusterIP      172.20.53.118   <none>                                                                    27017/TCP           116s
node-mongodb-app-service   LoadBalancer   172.20.109.9    a6f0e9968c1c5491daf1ff3043fa0299-2091489158.us-east-2.elb.amazonaws.com   80:30446/TCP        115s
]
                                                                                                                                                                                                % open http://a6f0e9968c1c5491daf1ff3043fa0299-2091489158.us-east-2.elb.amazonaws.com

% kubectl delete -f node-mongodb-app/kubectl-aws-linux-x86-64/
[
persistentvolumeclaim "minio-persistentvolumeclaim" deleted
service "minio-service" deleted
deployment.apps "minio-deployment" deleted
persistentvolumeclaim "mongo-persistentvolumeclaim" deleted
service "mongo-service" deleted
deployment.apps "mongo-deployment" deleted
service "node-mongodb-app-service" deleted
deployment.apps "node-mongodb-app-deployment" deleted
]

***************************************************************************************************************************

% tree node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/
[
node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/
├── load-balancer-service-minio-aws-linux-x86-64.yaml
├── load-balancer-service-mongo-aws-linux-x86-64.yaml
└── load-balancer-service-node-mongodb-app-v2-aws-linux-x86-64.yaml

1 directory, 3 files
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/load-balancer-service-minio-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-persistentvolumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  ports:
    - port: 9090
      name: console
    - port: 9000
      name: s3
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio-container
          image: dockerrajani/minio-aws-linux-x86-64:version1.0.0
          imagePullPolicy: Always
          args:
            - server
            - /storage
          env:
            - name: MINIO_ACCESS_KEY
              value: minioadmin
            - name: MINIO_SECRET_KEY
              value: minioadmin
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: storage
              mountPath: /storage
          command:
            - /bin/bash
            - -c
          args:
              - minio server /data --console-address :9090
      restartPolicy: Always
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-persistentvolumeclaim
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/load-balancer-service-mongo-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-persistentvolumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo-container
          image: dockerrajani/mongo-aws-linux-x86-64:version1.0.0
          imagePullPolicy: Always
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: storage
              mountPath: /data/db
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: mongo-persistentvolumeclaim
]


% cat node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/load-balancer-service-node-mongodb-app-v2-aws-linux-x86-64.yaml
[
apiVersion: v1
kind: Service
metadata:
  name: node-mongodb-app-service
spec:
  selector:
    app: node-mongodb-app
  ports:
    - port: 80
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-mongodb-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-mongodb-app
  template:
    metadata:
      labels:
        app: node-mongodb-app
    spec:
      containers:
        - name: node-mongodb-app-container
          image: dockerrajani/node-mongodb-app-amazon-linux-extras-x86-64:version2.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URL
              value: mongodb://mongo-service:27017/dev
            - name: MINIO_ACCESS_KEY
              value: minioadmin
            - name: MINIO_SECRET_KEY
              value: minioadmin
            - name: MINIO_HOST
              value: minio-service
]


% kubectl apply -f node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/
[
% kubectl delete -f node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/
]

% kubectl get pods --watch


% kubectl get pods


% kubectl get services

***************************************************************************************************************************

% kubectl apply -f node-mongodb-app/kubectl-aws-linux-x86-64-lload-balancers/
[
persistentvolumeclaim/minio-persistentvolumeclaim created
service/minio-service created
deployment.apps/minio-deployment created
persistentvolumeclaim/mongo-persistentvolumeclaim created
service/mongo-service created
deployment.apps/mongo-deployment created
service/node-mongodb-app-service created
deployment.apps/node-mongodb-app-deployment created
]

% kubectl get pods --watch
[
NAME                                         READY   STATUS    RESTARTS   AGE
minio-deployment-58485b4c44-8rdg4            1/1     Running   0          19s
mongo-deployment-75f67dff4b-cplvj            1/1     Running   0          17s
node-mongodb-app-deployment-66b4d7c9-x8m8w   1/1     Running   0          16s
^C%
]
                                                                                                                                                                                                                           % kubectl get pods
[
NAME                                         READY   STATUS    RESTARTS   AGE
minio-deployment-58485b4c44-8rdg4            1/1     Running   0          28s
mongo-deployment-75f67dff4b-cplvj            1/1     Running   0          26s
node-mongodb-app-deployment-66b4d7c9-x8m8w   1/1     Running   0          25s
]

% kubectl get services
[
NAME                       TYPE           CLUSTER-IP      EXTERNAL-IP                                                               PORT(S)                         AGE
kubernetes                 ClusterIP      172.20.0.1      <none>                                                                    443/TCP                         125m
minio-service              LoadBalancer   172.20.34.40    a39abdf2796294250b76ae8708a875ed-1232472173.us-east-2.elb.amazonaws.com   9090:30735/TCP,9000:32101/TCP   37s
mongo-service              LoadBalancer   172.20.29.21    a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com   27017:32389/TCP                 35s
node-mongodb-app-service   LoadBalancer   172.20.70.113   a987fabca967d4ea4bbe192a36ebb0d1-704349295.us-east-2.elb.amazonaws.com    80:30044/TCP 
]

% open http://a39abdf2796294250b76ae8708a875ed-1232472173.us-east-2.elb.amazonaws.com:9090/

% open http://a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com:27017/

% open http://a987fabca967d4ea4bbe192a36ebb0d1-704349295.us-east-2.elb.amazonaws.com/

***************************************************************************************************************************

# MongoDB Shell

***************************************************************************************************************************

% mongosh mongodb://a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com:27017/
[
Current Mongosh Log ID:	6568e0575a178072f785bcc2
Connecting to:		mongodb://a90d8e2ed34e54d25bc4508e28fb3f63-1155317621.us-east-2.elb.amazonaws.com:27017/?directConnection=true&appName=mongosh+2.1.0
Using MongoDB:		7.0.3
Using Mongosh:		2.1.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2023-11-30T19:04:34.052+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2023-11-30T19:04:34.768+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2023-11-30T19:04:34.768+00:00: vm.max_map_count is too low
------

test> (node:22607) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
db.version()
7.0.3
test> show dbs
admin   40.00 KiB
config  92.00 KiB
dev     40.00 KiB
local   40.00 KiB
test> use dev
switched to db dev
dev> show collections
notes
dev> db.notes.find()
[
  {
    _id: ObjectId('6568e026cdad4cd4b3ca073a'),
    description: 'Arch_AWS-RoboMaker_64@5x\r\n\r\n\r\n ![](/img/Arch_AWS-RoboMaker_64%405x.png)'
  }
]
dev> exit
]

***************************************************************************************************************************

# Clean up the workspace

# Provisioned an EKS cluster, configured kubectl, and verified that the cluster is ready to use.

# Note

# This configuration contains only the configuration to create an EKS cluster.

# Use Terraform to manage the Kubernetes objects deployed to a cluster, such as Deployments and Services.

# It is recommended to keep the Terraform configuration for each of those concerns separate, since their workflows and owners often differ.

# Destroy the resources created to avoid incurring extra charges.

# Respond yes to the prompt to confirm the operation.

***************************************************************************************************************************

% terraform destroy
[
% terraform destroy
random_string.suffix: Refreshing state... [id=vOUQg0d3]
module.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Reading...
data.aws_iam_policy.ebs_csi_policy: Reading...
module.eks.module.kms.data.aws_partition.current: Reading...
module.eks.data.aws_caller_identity.current: Reading...
data.aws_availability_zones.available: Reading...
module.irsa-ebs-csi.data.aws_partition.current: Reading...
module.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Reading...
module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-0e081eeaaf3ae57dc]
module.irsa-ebs-csi.data.aws_caller_identity.current: Reading...
module.eks.aws_cloudwatch_log_group.this[0]: Refreshing state... [id=/aws/eks/education-eks-vOUQg0d3/cluster]
module.eks.module.kms.data.aws_partition.current: Read complete after 0s [id=aws]
module.irsa-ebs-csi.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["one"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["two"].data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.kms.data.aws_caller_identity.current: Reading...
module.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Reading...
module.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Reading...
module.eks.data.aws_partition.current: Reading...
module.eks.data.aws_partition.current: Read complete after 0s [id=aws]
module.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["two"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.module.eks_managed_node_group["one"].data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2560088296]
module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0]: Refreshing state... [id=node-group-2-eks-node-group-20231130165438756000000001]
module.irsa-ebs-csi.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0]: Refreshing state... [id=node-group-1-eks-node-group-20231130165438756700000002]
module.eks.module.kms.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.eks.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=2764486067]
module.eks.aws_iam_role.this[0]: Refreshing state... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003]
module.eks.data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
module.eks.data.aws_iam_session_context.current: Reading...
module.eks.data.aws_iam_session_context.current: Read complete after 0s [id=arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user]
module.eks.module.eks_managed_node_group["one"].data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
data.aws_availability_zones.available: Read complete after 1s [id=us-east-2]
module.eks.module.eks_managed_node_group["two"].data.aws_caller_identity.current: Read complete after 1s [id=<Account ID>]
data.aws_iam_policy.ebs_csi_policy: Read complete after 3s [id=arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Refreshing state... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441284900000006]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Refreshing state... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441643400000008]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Refreshing state... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441440600000007]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Refreshing state... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441101000000004]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Refreshing state... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441282600000005]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Refreshing state... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441652000000009]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Refreshing state... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544238080000000a]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Refreshing state... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544240380000000b]
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Reading...
module.eks.module.kms.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=2351407999]
module.eks.module.kms.aws_kms_key.this[0]: Refreshing state... [id=1dd5669c-7d5b-44a5-a547-85d6782b36db]
module.vpc.aws_default_route_table.default[0]: Refreshing state... [id=rtb-0f7e442a816d7d567]
module.vpc.aws_default_security_group.this[0]: Refreshing state... [id=sg-0e553a4c916701952]
module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-0e876af0d60a6c0ee]
module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0a8c8e9ca2eb8aca9]
module.vpc.aws_default_network_acl.this[0]: Refreshing state... [id=acl-03d971568d75cef31]
module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-0f620616f8f44a3f7]
module.eks.aws_security_group.cluster[0]: Refreshing state... [id=sg-03fc1f50409acf377]
module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-041ce879edf62a575]
module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-0c8ca28af86a12a6a]
module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-00a67b7cb5448e9dd]
module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-0500646d0d0be020e]
module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-0261e4261cd118efa]
module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-078ba8caa49d21285]
module.eks.aws_security_group.node[0]: Refreshing state... [id=sg-002b4d5ce0511dac6]
module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-0662e7314af390e90]
module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-0e876af0d60a6c0ee1080289494]
module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-034a8afe41b3ad23f]
module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-042ca20817ea4bb9f]
module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-03570b266bc35955f]
module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-00b371b97e5b8d8fc]
module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-076e5f68a269c1d1e]
module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-0c191b166aff05fd9]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Refreshing state... [id=sgrule-3683241332]
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Refreshing state... [id=sgrule-2442938734]
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Refreshing state... [id=sgrule-2893333150]
module.eks.aws_security_group_rule.node["egress_all"]: Refreshing state... [id=sgrule-2857643913]
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Refreshing state... [id=sgrule-315337442]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Refreshing state... [id=sgrule-232965749]
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Refreshing state... [id=sgrule-153776101]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Refreshing state... [id=sgrule-710200228]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Refreshing state... [id=sgrule-3369464149]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Refreshing state... [id=sgrule-902032001]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Refreshing state... [id=sgrule-2022173418]
module.eks.module.kms.aws_kms_alias.this["cluster"]: Refreshing state... [id=alias/eks/education-eks-vOUQg0d3]
module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-048bf54baf6022702]
module.eks.aws_iam_policy.cluster_encryption[0]: Refreshing state... [id=arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f]
module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0a8c8e9ca2eb8aca91080289494]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Refreshing state... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-20231130165505077600000010]
module.eks.aws_eks_cluster.this[0]: Refreshing state... [id=education-eks-vOUQg0d3]
module.eks.data.tls_certificate.this[0]: Reading...
module.eks.time_sleep.this[0]: Refreshing state... [id=2023-11-30T17:03:23Z]
module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0]: Reading...
module.irsa-ebs-csi.data.aws_iam_policy_document.assume_role_with_oidc[0]: Read complete after 0s [id=1889806982]
module.irsa-ebs-csi.aws_iam_role.this[0]: Refreshing state... [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3]
module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0]: Refreshing state... [id=lt-081b2816ca90d55af]
module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0]: Refreshing state... [id=lt-029d67d08b3fc0343]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Refreshing state... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Refreshing state... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019]
module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]: Refreshing state... [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3-20231130170256076800000012]
aws_eks_addon.ebs-csi: Refreshing state... [id=education-eks-vOUQg0d3:aws-ebs-csi-driver]
module.eks.data.tls_certificate.this[0]: Read complete after 1s [id=7c72bb110518075cbb071e57d125fc3aa17238d9]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Refreshing state... [id=arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_eks_addon.ebs-csi will be destroyed
  - resource "aws_eks_addon" "ebs-csi" {
      - addon_name               = "aws-ebs-csi-driver" -> null
      - addon_version            = "v1.20.0-eksbuild.1" -> null
      - arn                      = "arn:aws:eks:us-east-2:<Account ID>:addon/education-eks-vOUQg0d3/aws-ebs-csi-driver/72c61097-7cff-5135-afff-b90ede10c607" -> null
      - cluster_name             = "education-eks-vOUQg0d3" -> null
      - created_at               = "2023-11-30T17:02:56Z" -> null
      - id                       = "education-eks-vOUQg0d3:aws-ebs-csi-driver" -> null
      - modified_at              = "2023-11-30T17:18:01Z" -> null
      - service_account_role_arn = "arn:aws:iam::<Account ID>:role/AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3" -> null
      - tags                     = {
          - "eks_addon" = "ebs-csi"
          - "terraform" = "true"
        } -> null
      - tags_all                 = {
          - "eks_addon" = "ebs-csi"
          - "terraform" = "true"
        } -> null
    }

  # random_string.suffix will be destroyed
  - resource "random_string" "suffix" {
      - id          = "vOUQg0d3" -> null
      - length      = 8 -> null
      - lower       = true -> null
      - min_lower   = 0 -> null
      - min_numeric = 0 -> null
      - min_special = 0 -> null
      - min_upper   = 0 -> null
      - number      = true -> null
      - numeric     = true -> null
      - result      = "vOUQg0d3" -> null
      - special     = false -> null
      - upper       = true -> null
    }

  # module.eks.aws_cloudwatch_log_group.this[0] will be destroyed
  - resource "aws_cloudwatch_log_group" "this" {
      - arn               = "arn:aws:logs:us-east-2:<Account ID>:log-group:/aws/eks/education-eks-vOUQg0d3/cluster" -> null
      - id                = "/aws/eks/education-eks-vOUQg0d3/cluster" -> null
      - name              = "/aws/eks/education-eks-vOUQg0d3/cluster" -> null
      - retention_in_days = 90 -> null
      - skip_destroy      = false -> null
      - tags              = {
          - "Name" = "/aws/eks/education-eks-vOUQg0d3/cluster"
        } -> null
      - tags_all          = {
          - "Name" = "/aws/eks/education-eks-vOUQg0d3/cluster"
        } -> null
    }

  # module.eks.aws_eks_cluster.this[0] will be destroyed
  - resource "aws_eks_cluster" "this" {
      - arn                       = "arn:aws:eks:us-east-2:<Account ID>:cluster/education-eks-vOUQg0d3" -> null
      - certificate_authority     = [
          - {
              - data = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCRENDQWV5Z0F3SUJBZ0lIYWorampRZXp0REFOQmdrcWhraUc5dzBCQVFzRkFEQVZNUk13RVFZRFZRUUQKRXdwcmRXSmxjbTVsZEdWek1CNFhEVEl6TVRFek1ERTJOVFF3TUZvWERUTXpNVEV5TnpFMk5Ua3dNRm93RlRFVApNQkVHQTFVRUF4TUthM1ZpWlhKdVpYUmxjekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DCmdnRUJBTzBUTy9jSVE5Z080M29WRWpSaUh1bG4yTXJqSW9ScGFZdW1TWDlPTTc5L082anZWQmN2Rjk0M1RVU2gKSndDU0NUTWVudGYyZ2ZFSDI0UzcwTU1VdDcrQis1eTE1am5TZ0lTdjFRUW01S3VOT2FjN2tRV0dpTTVmMVV4NApPbGpzVklGVmYzWnM1OW0yektJTDEwWjBMVE0vOWo0bXNHbWRDU1J5SGJ5NFBaczJKQUU1NDZIZlhBZ2Z0S3h5ClVMNTkweUs1VnpJVDRSK2tteGVHSkk1enpsemlHTldUZFl1V0dQdDRpZU5xdU5SUVgvU2Rnc3BXLzBNeEFtN0QKL3hiRzM0L3gyL2JCN2t4UTlXZFBna0ovK2VYQVJWNGFJamV6QnoraGxxZThqZHBjTTQ0WHpEVmE2bXJuREJUTAp6amUwTFJ0Q295dXNkQXdiSlFyWGVHS2hMY2NDQXdFQUFhTlpNRmN3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHCkExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPcW9jazlIa0JJUExORTVWNlNuK0RsdkJOOE1CVUcKQTFVZEVRUU9NQXlDQ210MVltVnlibVYwWlhNd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMcWVCYnoxV2xWawpHcTR4WjFyTFNTWkttWDVEOHhmSTljQkQxbVpWcXRDL2hPVEt0YnB2RkhYU0FpNkthREVBeFpIRS81UUx6MHFLCit5anpWdGNGSEt4K2wwQ2hFa25PSWhMWkVmSjJNaWtvdGhIN0c1Y3FuRmxCelUrbFJEb2MzZTBiekVMMHJVSVUKMjZ3QWJTNnd4a3lsRlV6WjZseHNCUndzSG8xNWZLUnQybXp5VWUySkRERUpXODhWZ3pNWll6djNKZDUwNFJoMApzSnFPWmhQcS8zVWo0eVBIb1d0N0pmc3FkT3FHRmszN2R6dVF3ZTBia0J4UmRJcHhZUWNqWGRMOHg1bURCQjNmCjRtOW1tQnlUS3RzQlc0WUU5bEVKNVFpUU5RQWx1azRCRmVZTjlNV3Nsc3VtdzNPaXA0NHRJME1OUjduMk9XVFoKb0Vrc1VmZ3lXdU09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            },
        ] -> null
      - created_at                = "2023-11-30 16:55:11.997 +0000 UTC" -> null
      - enabled_cluster_log_types = [
          - "api",
          - "audit",
          - "authenticator",
        ] -> null
      - endpoint                  = "https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com" -> null
      - id                        = "education-eks-vOUQg0d3" -> null
      - identity                  = [
          - {
              - oidc = [
                  - {
                      - issuer = "https://oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A"
                    },
                ]
            },
        ] -> null
      - name                      = "education-eks-vOUQg0d3" -> null
      - platform_version          = "eks.8" -> null
      - role_arn                  = "arn:aws:iam::<Account ID>:role/education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
      - status                    = "ACTIVE" -> null
      - tags                      = {} -> null
      - tags_all                  = {} -> null
      - version                   = "1.27" -> null

      - encryption_config {
          - resources = [
              - "secrets",
            ] -> null

          - provider {
              - key_arn = "arn:aws:kms:us-east-2:<Account ID>:key/1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
            }
        }

      - kubernetes_network_config {
          - ip_family         = "ipv4" -> null
          - service_ipv4_cidr = "172.20.0.0/16" -> null
        }

      - timeouts {}

      - vpc_config {
          - cluster_security_group_id = "sg-0619b722592d543d6" -> null
          - endpoint_private_access   = true -> null
          - endpoint_public_access    = true -> null
          - public_access_cidrs       = [
              - "0.0.0.0/0",
            ] -> null
          - security_group_ids        = [
              - "sg-03fc1f50409acf377",
            ] -> null
          - subnet_ids                = [
              - "subnet-00a67b7cb5448e9dd",
              - "subnet-041ce879edf62a575",
              - "subnet-0c8ca28af86a12a6a",
            ] -> null
          - vpc_id                    = "vpc-0e081eeaaf3ae57dc" -> null
        }
    }

  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0] will be destroyed
  - resource "aws_iam_openid_connect_provider" "oidc_provider" {
      - arn             = "arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A" -> null
      - client_id_list  = [
          - "sts.amazonaws.com",
        ] -> null
      - id              = "arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A" -> null
      - tags            = {
          - "Name" = "education-eks-vOUQg0d3-eks-irsa"
        } -> null
      - tags_all        = {
          - "Name" = "education-eks-vOUQg0d3-eks-irsa"
        } -> null
      - thumbprint_list = [
          - "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
          - "06b25927c42a721631c1efd9431e648fa62e1e39",
          - "414a2060b738c635cc7fc243e052615592830c53",
          - "50879ea7f7c29dd615269e559fb061b46bdd3dbe",
        ] -> null
      - url             = "oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A" -> null
    }

  # module.eks.aws_iam_policy.cluster_encryption[0] will be destroyed
  - resource "aws_iam_policy" "cluster_encryption" {
      - arn         = "arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f" -> null
      - description = "Cluster encryption policy to allow cluster role to utilize CMK provided" -> null
      - id          = "arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f" -> null
      - name        = "education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f" -> null
      - name_prefix = "education-eks-vOUQg0d3-cluster-ClusterEncryption" -> null
      - path        = "/" -> null
      - policy      = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = [
                          - "kms:Encrypt",
                          - "kms:Decrypt",
                          - "kms:ListGrants",
                          - "kms:DescribeKey",
                        ]
                      - Effect   = "Allow"
                      - Resource = "arn:aws:kms:us-east-2:<Account ID>:key/1dd5669c-7d5b-44a5-a547-85d6782b36db"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - policy_id   = "ANPAWECQW54Q4PAKXMRUU" -> null
      - tags        = {} -> null
      - tags_all    = {} -> null
    }

  # module.eks.aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::<Account ID>:role/education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "eks.amazonaws.com"
                        }
                      - Sid       = "EKSClusterAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2023-11-30T16:54:39Z" -> null
      - force_detach_policies = true -> null
      - id                    = "education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f",
          - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          - "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
      - name_prefix           = "education-eks-vOUQg0d3-cluster-" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAWECQW54QTZQMO2AIO" -> null

      - inline_policy {
          - name   = "education-eks-vOUQg0d3-cluster" -> null
          - policy = jsonencode(
                {
                  - Statement = [
                      - {
                          - Action   = [
                              - "logs:CreateLogGroup",
                            ]
                          - Effect   = "Deny"
                          - Resource = "*"
                        },
                    ]
                  - Version   = "2012-10-17"
                }
            ) -> null
        }
    }

  # module.eks.aws_iam_role_policy_attachment.cluster_encryption[0] will be destroyed
  - resource "aws_iam_role_policy_attachment" "cluster_encryption" {
      - id         = "education-eks-vOUQg0d3-cluster-20231130165438758400000003-20231130165505077600000010" -> null
      - policy_arn = "arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f" -> null
      - role       = "education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544238080000000a" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy" -> null
      - role       = "education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
    }

  # module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544240380000000b" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController" -> null
      - role       = "education-eks-vOUQg0d3-cluster-20231130165438758400000003" -> null
    }

  # module.eks.aws_security_group.cluster[0] will be destroyed
  - resource "aws_security_group" "cluster" {
      - arn                    = "arn:aws:ec2:us-east-2:<Account ID>:security-group/sg-03fc1f50409acf377" -> null
      - description            = "EKS cluster security group" -> null
      - egress                 = [] -> null
      - id                     = "sg-03fc1f50409acf377" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - description      = "Node groups to cluster API"
              - from_port        = 443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-002b4d5ce0511dac6",
                ]
              - self             = false
              - to_port          = 443
            },
        ] -> null
      - name                   = "education-eks-vOUQg0d3-cluster-2023113016545552740000000d" -> null
      - name_prefix            = "education-eks-vOUQg0d3-cluster-" -> null
      - owner_id               = "<Account ID>" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "education-eks-vOUQg0d3-cluster"
        } -> null
      - tags_all               = {
          - "Name" = "education-eks-vOUQg0d3-cluster"
        } -> null
      - vpc_id                 = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.eks.aws_security_group.node[0] will be destroyed
  - resource "aws_security_group" "node" {
      - arn                    = "arn:aws:ec2:us-east-2:<Account ID>:security-group/sg-002b4d5ce0511dac6" -> null
      - description            = "EKS node shared security group" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "Allow all egress"
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
            },
        ] -> null
      - id                     = "sg-002b4d5ce0511dac6" -> null
      - ingress                = [
          - {
              - cidr_blocks      = []
              - description      = ""
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = [
                  - "sg-08a550c113f1bc227",
                  - "sg-0d7c915c1e0b49bb1",
                  - "sg-0e0c8d72fc3947eb4",
                ]
              - self             = false
              - to_port          = 0
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 4443/tcp webhook"
              - from_port        = 4443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 4443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 6443/tcp webhook"
              - from_port        = 6443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 6443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 8443/tcp webhook"
              - from_port        = 8443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 8443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node 9443/tcp webhook"
              - from_port        = 9443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 9443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node groups"
              - from_port        = 443
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 443
            },
          - {
              - cidr_blocks      = []
              - description      = "Cluster API to node kubelets"
              - from_port        = 10250
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = [
                  - "sg-03fc1f50409acf377",
                ]
              - self             = false
              - to_port          = 10250
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node CoreDNS UDP"
              - from_port        = 53
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "udp"
              - security_groups  = []
              - self             = true
              - to_port          = 53
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node CoreDNS"
              - from_port        = 53
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = true
              - to_port          = 53
            },
          - {
              - cidr_blocks      = []
              - description      = "Node to node ingress on ephemeral ports"
              - from_port        = 1025
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = true
              - to_port          = 65535
            },
        ] -> null
      - name                   = "education-eks-vOUQg0d3-node-2023113016545551940000000c" -> null
      - name_prefix            = "education-eks-vOUQg0d3-node-" -> null
      - owner_id               = "<Account ID>" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name"                                         = "education-eks-vOUQg0d3-node"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "owned"
        } -> null
      - tags_all               = {
          - "Name"                                         = "education-eks-vOUQg0d3-node"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "owned"
        } -> null
      - vpc_id                 = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.eks.aws_security_group_rule.cluster["ingress_nodes_443"] will be destroyed
  - resource "aws_security_group_rule" "cluster" {
      - description              = "Node groups to cluster API" -> null
      - from_port                = 443 -> null
      - id                       = "sgrule-2022173418" -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-03fc1f50409acf377" -> null
      - security_group_rule_id   = "sgr-07d32ebfe6dd0bd9d" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-002b4d5ce0511dac6" -> null
      - to_port                  = 443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["egress_all"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - cidr_blocks            = [
          - "0.0.0.0/0",
        ] -> null
      - description            = "Allow all egress" -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-2857643913" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id = "sgr-0e6740c584c6da179" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "egress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_443"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node groups" -> null
      - from_port                = 443 -> null
      - id                       = "sgrule-153776101" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-0a53bc914f6b68f2c" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 4443/tcp webhook" -> null
      - from_port                = 4443 -> null
      - id                       = "sgrule-315337442" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-00bb87bb6304df9f9" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 4443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 6443/tcp webhook" -> null
      - from_port                = 6443 -> null
      - id                       = "sgrule-3683241332" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-0b67ad5874cceb1ba" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 6443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 8443/tcp webhook" -> null
      - from_port                = 8443 -> null
      - id                       = "sgrule-3369464149" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-073a48e1b4ca1ea1a" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 8443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node 9443/tcp webhook" -> null
      - from_port                = 9443 -> null
      - id                       = "sgrule-2893333150" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-018eb6501d33018f0" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 9443 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description              = "Cluster API to node kubelets" -> null
      - from_port                = 10250 -> null
      - id                       = "sgrule-232965749" -> null
      - prefix_list_ids          = [] -> null
      - protocol                 = "tcp" -> null
      - security_group_id        = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id   = "sgr-0b806e153ce42896a" -> null
      - self                     = false -> null
      - source_security_group_id = "sg-03fc1f50409acf377" -> null
      - to_port                  = 10250 -> null
      - type                     = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node ingress on ephemeral ports" -> null
      - from_port              = 1025 -> null
      - id                     = "sgrule-710200228" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "tcp" -> null
      - security_group_id      = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id = "sgr-0d36f433d7e31a422" -> null
      - self                   = true -> null
      - to_port                = 65535 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node CoreDNS" -> null
      - from_port              = 53 -> null
      - id                     = "sgrule-902032001" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "tcp" -> null
      - security_group_id      = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id = "sgr-0e95ae8f1878ad822" -> null
      - self                   = true -> null
      - to_port                = 53 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"] will be destroyed
  - resource "aws_security_group_rule" "node" {
      - description            = "Node to node CoreDNS UDP" -> null
      - from_port              = 53 -> null
      - id                     = "sgrule-2442938734" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "udp" -> null
      - security_group_id      = "sg-002b4d5ce0511dac6" -> null
      - security_group_rule_id = "sgr-05d86bfd29e759750" -> null
      - self                   = true -> null
      - to_port                = 53 -> null
      - type                   = "ingress" -> null
    }

  # module.eks.time_sleep.this[0] will be destroyed
  - resource "time_sleep" "this" {
      - create_duration = "30s" -> null
      - id              = "2023-11-30T17:03:23Z" -> null
      - triggers        = {
          - "cluster_certificate_authority_data" = "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCRENDQWV5Z0F3SUJBZ0lIYWorampRZXp0REFOQmdrcWhraUc5dzBCQVFzRkFEQVZNUk13RVFZRFZRUUQKRXdwcmRXSmxjbTVsZEdWek1CNFhEVEl6TVRFek1ERTJOVFF3TUZvWERUTXpNVEV5TnpFMk5Ua3dNRm93RlRFVApNQkVHQTFVRUF4TUthM1ZpWlhKdVpYUmxjekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DCmdnRUJBTzBUTy9jSVE5Z080M29WRWpSaUh1bG4yTXJqSW9ScGFZdW1TWDlPTTc5L082anZWQmN2Rjk0M1RVU2gKSndDU0NUTWVudGYyZ2ZFSDI0UzcwTU1VdDcrQis1eTE1am5TZ0lTdjFRUW01S3VOT2FjN2tRV0dpTTVmMVV4NApPbGpzVklGVmYzWnM1OW0yektJTDEwWjBMVE0vOWo0bXNHbWRDU1J5SGJ5NFBaczJKQUU1NDZIZlhBZ2Z0S3h5ClVMNTkweUs1VnpJVDRSK2tteGVHSkk1enpsemlHTldUZFl1V0dQdDRpZU5xdU5SUVgvU2Rnc3BXLzBNeEFtN0QKL3hiRzM0L3gyL2JCN2t4UTlXZFBna0ovK2VYQVJWNGFJamV6QnoraGxxZThqZHBjTTQ0WHpEVmE2bXJuREJUTAp6amUwTFJ0Q295dXNkQXdiSlFyWGVHS2hMY2NDQXdFQUFhTlpNRmN3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHCkExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPcW9jazlIa0JJUExORTVWNlNuK0RsdkJOOE1CVUcKQTFVZEVRUU9NQXlDQ210MVltVnlibVYwWlhNd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMcWVCYnoxV2xWawpHcTR4WjFyTFNTWkttWDVEOHhmSTljQkQxbVpWcXRDL2hPVEt0YnB2RkhYU0FpNkthREVBeFpIRS81UUx6MHFLCit5anpWdGNGSEt4K2wwQ2hFa25PSWhMWkVmSjJNaWtvdGhIN0c1Y3FuRmxCelUrbFJEb2MzZTBiekVMMHJVSVUKMjZ3QWJTNnd4a3lsRlV6WjZseHNCUndzSG8xNWZLUnQybXp5VWUySkRERUpXODhWZ3pNWll6djNKZDUwNFJoMApzSnFPWmhQcS8zVWo0eVBIb1d0N0pmc3FkT3FHRmszN2R6dVF3ZTBia0J4UmRJcHhZUWNqWGRMOHg1bURCQjNmCjRtOW1tQnlUS3RzQlc0WUU5bEVKNVFpUU5RQWx1azRCRmVZTjlNV3Nsc3VtdzNPaXA0NHRJME1OUjduMk9XVFoKb0Vrc1VmZ3lXdU09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
          - "cluster_endpoint"                   = "https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com"
          - "cluster_name"                       = "education-eks-vOUQg0d3"
          - "cluster_version"                    = "1.27"
        } -> null
    }

  # module.irsa-ebs-csi.aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::<Account ID>:role/AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRoleWithWebIdentity"
                      - Condition = {
                          - StringEquals = {
                              - "oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A:sub" = "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Federated = "arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A"
                        }
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2023-11-30T17:02:54Z" -> null
      - force_detach_policies = false -> null
      - id                    = "AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAWECQW54QYUPW44FJT" -> null
    }

  # module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0] will be destroyed
  - resource "aws_iam_role_policy_attachment" "custom" {
      - id         = "AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3-20231130170256076800000012" -> null
      - policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy" -> null
      - role       = "AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3" -> null
    }

  # module.vpc.aws_default_network_acl.this[0] will be destroyed
  - resource "aws_default_network_acl" "this" {
      - arn                    = "arn:aws:ec2:us-east-2:<Account ID>:network-acl/acl-03d971568d75cef31" -> null
      - default_network_acl_id = "acl-03d971568d75cef31" -> null
      - id                     = "acl-03d971568d75cef31" -> null
      - owner_id               = "<Account ID>" -> null
      - subnet_ids             = [
          - "subnet-00a67b7cb5448e9dd",
          - "subnet-0261e4261cd118efa",
          - "subnet-041ce879edf62a575",
          - "subnet-0500646d0d0be020e",
          - "subnet-078ba8caa49d21285",
          - "subnet-0c8ca28af86a12a6a",
        ] -> null
      - tags                   = {
          - "Name" = "education-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "education-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0e081eeaaf3ae57dc" -> null

      - egress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
        }
      - egress {
          - action     = "allow" -> null
          - cidr_block = "0.0.0.0/0" -> null
          - from_port  = 0 -> null
          - icmp_code  = 0 -> null
          - icmp_type  = 0 -> null
          - protocol   = "-1" -> null
          - rule_no    = 100 -> null
          - to_port    = 0 -> null
        }

      - ingress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
        }
      - ingress {
          - action     = "allow" -> null
          - cidr_block = "0.0.0.0/0" -> null
          - from_port  = 0 -> null
          - icmp_code  = 0 -> null
          - icmp_type  = 0 -> null
          - protocol   = "-1" -> null
          - rule_no    = 100 -> null
          - to_port    = 0 -> null
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be destroyed
  - resource "aws_default_route_table" "default" {
      - arn                    = "arn:aws:ec2:us-east-2:<Account ID>:route-table/rtb-0f7e442a816d7d567" -> null
      - default_route_table_id = "rtb-0f7e442a816d7d567" -> null
      - id                     = "rtb-0f7e442a816d7d567" -> null
      - owner_id               = "<Account ID>" -> null
      - propagating_vgws       = [] -> null
      - route                  = [] -> null
      - tags                   = {
          - "Name" = "education-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "education-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0e081eeaaf3ae57dc" -> null

      - timeouts {
          - create = "5m" -> null
          - update = "5m" -> null
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be destroyed
  - resource "aws_default_security_group" "this" {
      - arn                    = "arn:aws:ec2:us-east-2:<Account ID>:security-group/sg-0e553a4c916701952" -> null
      - description            = "default VPC security group" -> null
      - egress                 = [] -> null
      - id                     = "sg-0e553a4c916701952" -> null
      - ingress                = [] -> null
      - name                   = "default" -> null
      - owner_id               = "<Account ID>" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "education-vpc-default"
        } -> null
      - tags_all               = {
          - "Name" = "education-vpc-default"
        } -> null
      - vpc_id                 = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_eip.nat[0] will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id        = "eipalloc-0662e7314af390e90" -> null
      - association_id       = "eipassoc-0a35031539a56374f" -> null
      - domain               = "vpc" -> null
      - id                   = "eipalloc-0662e7314af390e90" -> null
      - network_border_group = "us-east-2" -> null
      - network_interface    = "eni-0fbb6ac73e1c04702" -> null
      - private_dns          = "ip-10-0-4-205.us-east-2.compute.internal" -> null
      - private_ip           = "10.0.4.205" -> null
      - public_dns           = "ec2-3-22-33-13.us-east-2.compute.amazonaws.com" -> null
      - public_ip            = "3.22.33.13" -> null
      - public_ipv4_pool     = "amazon" -> null
      - tags                 = {
          - "Name" = "education-vpc-us-east-2a"
        } -> null
      - tags_all             = {
          - "Name" = "education-vpc-us-east-2a"
        } -> null
      - vpc                  = true -> null
    }

  # module.vpc.aws_internet_gateway.this[0] will be destroyed
  - resource "aws_internet_gateway" "this" {
      - arn      = "arn:aws:ec2:us-east-2:<Account ID>:internet-gateway/igw-0f620616f8f44a3f7" -> null
      - id       = "igw-0f620616f8f44a3f7" -> null
      - owner_id = "<Account ID>" -> null
      - tags     = {
          - "Name" = "education-vpc"
        } -> null
      - tags_all = {
          - "Name" = "education-vpc"
        } -> null
      - vpc_id   = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_nat_gateway.this[0] will be destroyed
  - resource "aws_nat_gateway" "this" {
      - allocation_id        = "eipalloc-0662e7314af390e90" -> null
      - association_id       = "eipassoc-0a35031539a56374f" -> null
      - connectivity_type    = "public" -> null
      - id                   = "nat-048bf54baf6022702" -> null
      - network_interface_id = "eni-0fbb6ac73e1c04702" -> null
      - private_ip           = "10.0.4.205" -> null
      - public_ip            = "3.22.33.13" -> null
      - subnet_id            = "subnet-0500646d0d0be020e" -> null
      - tags                 = {
          - "Name" = "education-vpc-us-east-2a"
        } -> null
      - tags_all             = {
          - "Name" = "education-vpc-us-east-2a"
        } -> null
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be destroyed
  - resource "aws_route" "private_nat_gateway" {
      - destination_cidr_block = "0.0.0.0/0" -> null
      - id                     = "r-rtb-0a8c8e9ca2eb8aca91080289494" -> null
      - nat_gateway_id         = "nat-048bf54baf6022702" -> null
      - origin                 = "CreateRoute" -> null
      - route_table_id         = "rtb-0a8c8e9ca2eb8aca9" -> null
      - state                  = "active" -> null

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be destroyed
  - resource "aws_route" "public_internet_gateway" {
      - destination_cidr_block = "0.0.0.0/0" -> null
      - gateway_id             = "igw-0f620616f8f44a3f7" -> null
      - id                     = "r-rtb-0e876af0d60a6c0ee1080289494" -> null
      - origin                 = "CreateRoute" -> null
      - route_table_id         = "rtb-0e876af0d60a6c0ee" -> null
      - state                  = "active" -> null

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route_table.private[0] will be destroyed
  - resource "aws_route_table" "private" {
      - arn              = "arn:aws:ec2:us-east-2:<Account ID>:route-table/rtb-0a8c8e9ca2eb8aca9" -> null
      - id               = "rtb-0a8c8e9ca2eb8aca9" -> null
      - owner_id         = "<Account ID>" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - carrier_gateway_id         = ""
              - cidr_block                 = "0.0.0.0/0"
              - core_network_arn           = ""
              - destination_prefix_list_id = ""
              - egress_only_gateway_id     = ""
              - gateway_id                 = ""
              - ipv6_cidr_block            = ""
              - local_gateway_id           = ""
              - nat_gateway_id             = "nat-048bf54baf6022702"
              - network_interface_id       = ""
              - transit_gateway_id         = ""
              - vpc_endpoint_id            = ""
              - vpc_peering_connection_id  = ""
            },
        ] -> null
      - tags             = {
          - "Name" = "education-vpc-private"
        } -> null
      - tags_all         = {
          - "Name" = "education-vpc-private"
        } -> null
      - vpc_id           = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_route_table.public[0] will be destroyed
  - resource "aws_route_table" "public" {
      - arn              = "arn:aws:ec2:us-east-2:<Account ID>:route-table/rtb-0e876af0d60a6c0ee" -> null
      - id               = "rtb-0e876af0d60a6c0ee" -> null
      - owner_id         = "<Account ID>" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - carrier_gateway_id         = ""
              - cidr_block                 = "0.0.0.0/0"
              - core_network_arn           = ""
              - destination_prefix_list_id = ""
              - egress_only_gateway_id     = ""
              - gateway_id                 = "igw-0f620616f8f44a3f7"
              - ipv6_cidr_block            = ""
              - local_gateway_id           = ""
              - nat_gateway_id             = ""
              - network_interface_id       = ""
              - transit_gateway_id         = ""
              - vpc_endpoint_id            = ""
              - vpc_peering_connection_id  = ""
            },
        ] -> null
      - tags             = {
          - "Name" = "education-vpc-public"
        } -> null
      - tags_all         = {
          - "Name" = "education-vpc-public"
        } -> null
      - vpc_id           = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_route_table_association.private[0] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-034a8afe41b3ad23f" -> null
      - route_table_id = "rtb-0a8c8e9ca2eb8aca9" -> null
      - subnet_id      = "subnet-041ce879edf62a575" -> null
    }

  # module.vpc.aws_route_table_association.private[1] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-042ca20817ea4bb9f" -> null
      - route_table_id = "rtb-0a8c8e9ca2eb8aca9" -> null
      - subnet_id      = "subnet-0c8ca28af86a12a6a" -> null
    }

  # module.vpc.aws_route_table_association.private[2] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-03570b266bc35955f" -> null
      - route_table_id = "rtb-0a8c8e9ca2eb8aca9" -> null
      - subnet_id      = "subnet-00a67b7cb5448e9dd" -> null
    }

  # module.vpc.aws_route_table_association.public[0] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-076e5f68a269c1d1e" -> null
      - route_table_id = "rtb-0e876af0d60a6c0ee" -> null
      - subnet_id      = "subnet-0500646d0d0be020e" -> null
    }

  # module.vpc.aws_route_table_association.public[1] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-00b371b97e5b8d8fc" -> null
      - route_table_id = "rtb-0e876af0d60a6c0ee" -> null
      - subnet_id      = "subnet-0261e4261cd118efa" -> null
    }

  # module.vpc.aws_route_table_association.public[2] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-0c191b166aff05fd9" -> null
      - route_table_id = "rtb-0e876af0d60a6c0ee" -> null
      - subnet_id      = "subnet-078ba8caa49d21285" -> null
    }

  # module.vpc.aws_subnet.private[0] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-041ce879edf62a575" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2a" -> null
      - availability_zone_id                           = "use2-az1" -> null
      - cidr_block                                     = "10.0.1.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-041ce879edf62a575" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-private-us-east-2a"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-private-us-east-2a"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_subnet.private[1] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0c8ca28af86a12a6a" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2b" -> null
      - availability_zone_id                           = "use2-az2" -> null
      - cidr_block                                     = "10.0.2.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0c8ca28af86a12a6a" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-private-us-east-2b"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-private-us-east-2b"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_subnet.private[2] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-00a67b7cb5448e9dd" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2c" -> null
      - availability_zone_id                           = "use2-az3" -> null
      - cidr_block                                     = "10.0.3.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-00a67b7cb5448e9dd" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-private-us-east-2c"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-private-us-east-2c"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/internal-elb"              = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_subnet.public[0] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0500646d0d0be020e" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2a" -> null
      - availability_zone_id                           = "use2-az1" -> null
      - cidr_block                                     = "10.0.4.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0500646d0d0be020e" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-public-us-east-2a"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-public-us-east-2a"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_subnet.public[1] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-0261e4261cd118efa" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2b" -> null
      - availability_zone_id                           = "use2-az2" -> null
      - cidr_block                                     = "10.0.5.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0261e4261cd118efa" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-public-us-east-2b"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-public-us-east-2b"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_subnet.public[2] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-east-2:<Account ID>:subnet/subnet-078ba8caa49d21285" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-east-2c" -> null
      - availability_zone_id                           = "use2-az3" -> null
      - cidr_block                                     = "10.0.6.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-078ba8caa49d21285" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "<Account ID>" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Name"                                         = "education-vpc-public-us-east-2c"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - tags_all                                       = {
          - "Name"                                         = "education-vpc-public-us-east-2c"
          - "kubernetes.io/cluster/education-eks-vOUQg0d3" = "shared"
          - "kubernetes.io/role/elb"                       = "1"
        } -> null
      - vpc_id                                         = "vpc-0e081eeaaf3ae57dc" -> null
    }

  # module.vpc.aws_vpc.this[0] will be destroyed
  - resource "aws_vpc" "this" {
      - arn                                  = "arn:aws:ec2:us-east-2:<Account ID>:vpc/vpc-0e081eeaaf3ae57dc" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-03d971568d75cef31" -> null
      - default_route_table_id               = "rtb-0f7e442a816d7d567" -> null
      - default_security_group_id            = "sg-0e553a4c916701952" -> null
      - dhcp_options_id                      = "dopt-02d1a15986e5ddfc7" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-0e081eeaaf3ae57dc" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-0f7e442a816d7d567" -> null
      - owner_id                             = "<Account ID>" -> null
      - tags                                 = {
          - "Name" = "education-vpc"
        } -> null
      - tags_all                             = {
          - "Name" = "education-vpc"
        } -> null
    }

  # module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0] will be destroyed
  - resource "aws_eks_node_group" "this" {
      - ami_type               = "AL2_x86_64" -> null
      - arn                    = "arn:aws:eks:us-east-2:<Account ID>:nodegroup/education-eks-vOUQg0d3/node-group-1-20231130170325157300000017/f2c61097-b667-9365-41b5-a0ac4978fbc0" -> null
      - capacity_type          = "ON_DEMAND" -> null
      - cluster_name           = "education-eks-vOUQg0d3" -> null
      - disk_size              = 0 -> null
      - id                     = "education-eks-vOUQg0d3:node-group-1-20231130170325157300000017" -> null
      - instance_types         = [
          - "t3.small",
        ] -> null
      - labels                 = {} -> null
      - node_group_name        = "node-group-1-20231130170325157300000017" -> null
      - node_group_name_prefix = "node-group-1-" -> null
      - node_role_arn          = "arn:aws:iam::<Account ID>:role/node-group-1-eks-node-group-20231130165438756700000002" -> null
      - release_version        = "1.27.7-20231116" -> null
      - resources              = [
          - {
              - autoscaling_groups              = [
                  - {
                      - name = "eks-node-group-1-20231130170325157300000017-f2c61097-b667-9365-41b5-a0ac4978fbc0"
                    },
                ]
              - remote_access_security_group_id = ""
            },
        ] -> null
      - status                 = "ACTIVE" -> null
      - subnet_ids             = [
          - "subnet-00a67b7cb5448e9dd",
          - "subnet-041ce879edf62a575",
          - "subnet-0c8ca28af86a12a6a",
        ] -> null
      - tags                   = {
          - "Name" = "node-group-1"
        } -> null
      - tags_all               = {
          - "Name" = "node-group-1"
        } -> null
      - version                = "1.27" -> null

      - launch_template {
          - id      = "lt-029d67d08b3fc0343" -> null
          - name    = "one-20231130170323279800000015" -> null
          - version = "1" -> null
        }

      - scaling_config {
          - desired_size = 2 -> null
          - max_size     = 3 -> null
          - min_size     = 1 -> null
        }

      - timeouts {}

      - update_config {
          - max_unavailable            = 0 -> null
          - max_unavailable_percentage = 33 -> null
        }
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::<Account ID>:role/node-group-1-eks-node-group-20231130165438756700000002" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ec2.amazonaws.com"
                        }
                      - Sid       = "EKSNodeAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2023-11-30T16:54:39Z" -> null
      - description           = "EKS managed node group IAM role" -> null
      - force_detach_policies = true -> null
      - id                    = "node-group-1-eks-node-group-20231130165438756700000002" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "node-group-1-eks-node-group-20231130165438756700000002" -> null
      - name_prefix           = "node-group-1-eks-node-group-" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAWECQW54QZYLDANHWC" -> null
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-1-eks-node-group-20231130165438756700000002-20231130165441284900000006" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly" -> null
      - role       = "node-group-1-eks-node-group-20231130165438756700000002" -> null
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-1-eks-node-group-20231130165438756700000002-20231130165441282600000005" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy" -> null
      - role       = "node-group-1-eks-node-group-20231130165438756700000002" -> null
    }

  # module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-1-eks-node-group-20231130165438756700000002-20231130165441101000000004" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy" -> null
      - role       = "node-group-1-eks-node-group-20231130165438756700000002" -> null
    }

  # module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0] will be destroyed
  - resource "aws_launch_template" "this" {
      - arn                     = "arn:aws:ec2:us-east-2:<Account ID>:launch-template/lt-029d67d08b3fc0343" -> null
      - default_version         = 1 -> null
      - description             = "Custom launch template for node-group-1 EKS managed node group" -> null
      - disable_api_stop        = false -> null
      - disable_api_termination = false -> null
      - id                      = "lt-029d67d08b3fc0343" -> null
      - latest_version          = 1 -> null
      - name                    = "one-20231130170323279800000015" -> null
      - name_prefix             = "one-" -> null
      - security_group_names    = [] -> null
      - tags                    = {} -> null
      - tags_all                = {} -> null
      - update_default_version  = true -> null
      - vpc_security_group_ids  = [
          - "sg-002b4d5ce0511dac6",
        ] -> null

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
        }

      - monitoring {
          - enabled = true -> null
        }

      - tag_specifications {
          - resource_type = "instance" -> null
          - tags          = {
              - "Name" = "node-group-1"
            } -> null
        }
      - tag_specifications {
          - resource_type = "network-interface" -> null
          - tags          = {
              - "Name" = "node-group-1"
            } -> null
        }
      - tag_specifications {
          - resource_type = "volume" -> null
          - tags          = {
              - "Name" = "node-group-1"
            } -> null
        }
    }

  # module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0] will be destroyed
  - resource "aws_eks_node_group" "this" {
      - ami_type               = "AL2_x86_64" -> null
      - arn                    = "arn:aws:eks:us-east-2:<Account ID>:nodegroup/education-eks-vOUQg0d3/node-group-2-20231130170325157300000019/98c61097-b66b-4081-e61e-4d7ed690cc37" -> null
      - capacity_type          = "ON_DEMAND" -> null
      - cluster_name           = "education-eks-vOUQg0d3" -> null
      - disk_size              = 0 -> null
      - id                     = "education-eks-vOUQg0d3:node-group-2-20231130170325157300000019" -> null
      - instance_types         = [
          - "t3.small",
        ] -> null
      - labels                 = {} -> null
      - node_group_name        = "node-group-2-20231130170325157300000019" -> null
      - node_group_name_prefix = "node-group-2-" -> null
      - node_role_arn          = "arn:aws:iam::<Account ID>:role/node-group-2-eks-node-group-20231130165438756000000001" -> null
      - release_version        = "1.27.7-20231116" -> null
      - resources              = [
          - {
              - autoscaling_groups              = [
                  - {
                      - name = "eks-node-group-2-20231130170325157300000019-98c61097-b66b-4081-e61e-4d7ed690cc37"
                    },
                ]
              - remote_access_security_group_id = ""
            },
        ] -> null
      - status                 = "ACTIVE" -> null
      - subnet_ids             = [
          - "subnet-00a67b7cb5448e9dd",
          - "subnet-041ce879edf62a575",
          - "subnet-0c8ca28af86a12a6a",
        ] -> null
      - tags                   = {
          - "Name" = "node-group-2"
        } -> null
      - tags_all               = {
          - "Name" = "node-group-2"
        } -> null
      - version                = "1.27" -> null

      - launch_template {
          - id      = "lt-081b2816ca90d55af" -> null
          - name    = "two-20231130170323279700000013" -> null
          - version = "1" -> null
        }

      - scaling_config {
          - desired_size = 1 -> null
          - max_size     = 2 -> null
          - min_size     = 1 -> null
        }

      - timeouts {}

      - update_config {
          - max_unavailable            = 0 -> null
          - max_unavailable_percentage = 33 -> null
        }
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::<Account ID>:role/node-group-2-eks-node-group-20231130165438756000000001" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ec2.amazonaws.com"
                        }
                      - Sid       = "EKSNodeAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2023-11-30T16:54:39Z" -> null
      - description           = "EKS managed node group IAM role" -> null
      - force_detach_policies = true -> null
      - id                    = "node-group-2-eks-node-group-20231130165438756000000001" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "node-group-2-eks-node-group-20231130165438756000000001" -> null
      - name_prefix           = "node-group-2-eks-node-group-" -> null
      - path                  = "/" -> null
      - tags                  = {} -> null
      - tags_all              = {} -> null
      - unique_id             = "AROAWECQW54QRLQKQGJKC" -> null
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-2-eks-node-group-20231130165438756000000001-20231130165441652000000009" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly" -> null
      - role       = "node-group-2-eks-node-group-20231130165438756000000001" -> null
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-2-eks-node-group-20231130165438756000000001-20231130165441643400000008" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy" -> null
      - role       = "node-group-2-eks-node-group-20231130165438756000000001" -> null
    }

  # module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "node-group-2-eks-node-group-20231130165438756000000001-20231130165441440600000007" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy" -> null
      - role       = "node-group-2-eks-node-group-20231130165438756000000001" -> null
    }

  # module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0] will be destroyed
  - resource "aws_launch_template" "this" {
      - arn                     = "arn:aws:ec2:us-east-2:<Account ID>:launch-template/lt-081b2816ca90d55af" -> null
      - default_version         = 1 -> null
      - description             = "Custom launch template for node-group-2 EKS managed node group" -> null
      - disable_api_stop        = false -> null
      - disable_api_termination = false -> null
      - id                      = "lt-081b2816ca90d55af" -> null
      - latest_version          = 1 -> null
      - name                    = "two-20231130170323279700000013" -> null
      - name_prefix             = "two-" -> null
      - security_group_names    = [] -> null
      - tags                    = {} -> null
      - tags_all                = {} -> null
      - update_default_version  = true -> null
      - vpc_security_group_ids  = [
          - "sg-002b4d5ce0511dac6",
        ] -> null

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
        }

      - monitoring {
          - enabled = true -> null
        }

      - tag_specifications {
          - resource_type = "instance" -> null
          - tags          = {
              - "Name" = "node-group-2"
            } -> null
        }
      - tag_specifications {
          - resource_type = "network-interface" -> null
          - tags          = {
              - "Name" = "node-group-2"
            } -> null
        }
      - tag_specifications {
          - resource_type = "volume" -> null
          - tags          = {
              - "Name" = "node-group-2"
            } -> null
        }
    }

  # module.eks.module.kms.aws_kms_alias.this["cluster"] will be destroyed
  - resource "aws_kms_alias" "this" {
      - arn            = "arn:aws:kms:us-east-2:<Account ID>:alias/eks/education-eks-vOUQg0d3" -> null
      - id             = "alias/eks/education-eks-vOUQg0d3" -> null
      - name           = "alias/eks/education-eks-vOUQg0d3" -> null
      - target_key_arn = "arn:aws:kms:us-east-2:<Account ID>:key/1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
      - target_key_id  = "1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
    }

  # module.eks.module.kms.aws_kms_key.this[0] will be destroyed
  - resource "aws_kms_key" "this" {
      - arn                                = "arn:aws:kms:us-east-2:<Account ID>:key/1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
      - bypass_policy_lockout_safety_check = false -> null
      - customer_master_key_spec           = "SYMMETRIC_DEFAULT" -> null
      - description                        = "education-eks-vOUQg0d3 cluster encryption key" -> null
      - enable_key_rotation                = true -> null
      - id                                 = "1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
      - is_enabled                         = true -> null
      - key_id                             = "1dd5669c-7d5b-44a5-a547-85d6782b36db" -> null
      - key_usage                          = "ENCRYPT_DECRYPT" -> null
      - multi_region                       = false -> null
      - policy                             = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = [
                          - "kms:Update*",
                          - "kms:UntagResource",
                          - "kms:TagResource",
                          - "kms:ScheduleKeyDeletion",
                          - "kms:Revoke*",
                          - "kms:Put*",
                          - "kms:List*",
                          - "kms:Get*",
                          - "kms:Enable*",
                          - "kms:Disable*",
                          - "kms:Describe*",
                          - "kms:Delete*",
                          - "kms:Create*",
                          - "kms:CancelKeyDeletion",
                        ]
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "arn:aws:iam::<Account ID>:user/terraform-aws-eks-iam-user"
                        }
                      - Resource  = "*"
                      - Sid       = "KeyAdministration"
                    },
                  - {
                      - Action    = [
                          - "kms:ReEncrypt*",
                          - "kms:GenerateDataKey*",
                          - "kms:Encrypt",
                          - "kms:DescribeKey",
                          - "kms:Decrypt",
                        ]
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "arn:aws:iam::<Account ID>:role/education-eks-vOUQg0d3-cluster-20231130165438758400000003"
                        }
                      - Resource  = "*"
                      - Sid       = "KeyUsage"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - tags                               = {} -> null
      - tags_all                           = {} -> null
    }

Plan: 0 to add, 0 to change, 63 to destroy.

Changes to Outputs:
  - cluster_endpoint          = "https://CE8989106E3B410DD9CC47249559463A.gr7.us-east-2.eks.amazonaws.com" -> null
  - cluster_name              = "education-eks-vOUQg0d3" -> null
  - cluster_security_group_id = "sg-03fc1f50409acf377" -> null
  - region                    = "us-east-2" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

module.vpc.aws_route_table_association.private[0]: Destroying... [id=rtbassoc-034a8afe41b3ad23f]
module.vpc.aws_default_route_table.default[0]: Destroying... [id=rtb-0f7e442a816d7d567]
module.vpc.aws_route_table_association.public[2]: Destroying... [id=rtbassoc-0c191b166aff05fd9]
module.vpc.aws_route_table_association.public[1]: Destroying... [id=rtbassoc-00b371b97e5b8d8fc]
module.vpc.aws_route.public_internet_gateway[0]: Destroying... [id=r-rtb-0e876af0d60a6c0ee1080289494]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019]
module.vpc.aws_route_table_association.public[0]: Destroying... [id=rtbassoc-076e5f68a269c1d1e]
module.vpc.aws_route.private_nat_gateway[0]: Destroying... [id=r-rtb-0a8c8e9ca2eb8aca91080289494]
aws_eks_addon.ebs-csi: Destroying... [id=education-eks-vOUQg0d3:aws-ebs-csi-driver]
module.vpc.aws_default_route_table.default[0]: Destruction complete after 0s
module.vpc.aws_default_network_acl.this[0]: Destroying... [id=acl-03d971568d75cef31]
module.vpc.aws_default_network_acl.this[0]: Destruction complete after 0s
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Destroying... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-20231130165505077600000010]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Destroying... [id=arn:aws:iam::<Account ID>:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/CE8989106E3B410DD9CC47249559463A]
module.eks.aws_iam_openid_connect_provider.oidc_provider[0]: Destruction complete after 1s
module.vpc.aws_route_table_association.private[2]: Destroying... [id=rtbassoc-03570b266bc35955f]
module.eks.aws_iam_role_policy_attachment.cluster_encryption[0]: Destruction complete after 1s
module.vpc.aws_default_security_group.this[0]: Destroying... [id=sg-0e553a4c916701952]
module.vpc.aws_default_security_group.this[0]: Destruction complete after 0s
module.eks.module.kms.aws_kms_alias.this["cluster"]: Destroying... [id=alias/eks/education-eks-vOUQg0d3]
module.vpc.aws_route_table_association.private[0]: Destruction complete after 2s
module.vpc.aws_route_table_association.public[1]: Destruction complete after 2s
module.vpc.aws_route_table_association.public[2]: Destruction complete after 2s
module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]: Destroying... [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3-20231130170256076800000012]
module.vpc.aws_route_table_association.private[1]: Destroying... [id=rtbassoc-042ca20817ea4bb9f]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017]
module.vpc.aws_route_table_association.public[0]: Destruction complete after 2s
module.eks.module.kms.aws_kms_alias.this["cluster"]: Destruction complete after 1s
module.eks.aws_iam_policy.cluster_encryption[0]: Destroying... [id=arn:aws:iam::<Account ID>:policy/education-eks-vOUQg0d3-cluster-ClusterEncryption2023113016550368950000000f]
module.vpc.aws_route_table_association.private[2]: Destruction complete after 1s
module.vpc.aws_route.public_internet_gateway[0]: Destruction complete after 2s
module.vpc.aws_route_table.public[0]: Destroying... [id=rtb-0e876af0d60a6c0ee]
module.irsa-ebs-csi.aws_iam_role_policy_attachment.custom[0]: Destruction complete after 0s
module.vpc.aws_route.private_nat_gateway[0]: Destruction complete after 2s
module.vpc.aws_nat_gateway.this[0]: Destroying... [id=nat-048bf54baf6022702]
module.vpc.aws_route_table_association.private[1]: Destruction complete after 1s
module.vpc.aws_route_table.private[0]: Destroying... [id=rtb-0a8c8e9ca2eb8aca9]
module.eks.aws_iam_policy.cluster_encryption[0]: Destruction complete after 1s
module.vpc.aws_route_table.public[0]: Destruction complete after 2s
module.vpc.aws_route_table.private[0]: Destruction complete after 1s
aws_eks_addon.ebs-csi: Destruction complete after 9s
module.irsa-ebs-csi.aws_iam_role.this[0]: Destroying... [id=AmazonEKSTFEBSCSIRole-education-eks-vOUQg0d3]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 10s elapsed]
module.irsa-ebs-csi.aws_iam_role.this[0]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-048bf54baf6022702, 10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-048bf54baf6022702, 20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-048bf54baf6022702, 30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-048bf54baf6022702, 40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-048bf54baf6022702, 50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Destruction complete after 52s
module.vpc.aws_eip.nat[0]: Destroying... [id=eipalloc-0662e7314af390e90]
module.vpc.aws_subnet.public[2]: Destroying... [id=subnet-078ba8caa49d21285]
module.vpc.aws_subnet.public[1]: Destroying... [id=subnet-0261e4261cd118efa]
module.vpc.aws_subnet.public[0]: Destroying... [id=subnet-0500646d0d0be020e]
module.vpc.aws_subnet.public[1]: Destruction complete after 1s
module.vpc.aws_eip.nat[0]: Destruction complete after 2s
module.vpc.aws_internet_gateway.this[0]: Destroying... [id=igw-0f620616f8f44a3f7]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 50s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 1m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 1m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m0s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 1m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 1m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 1m50s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 2m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 2m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m0s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m40s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 2m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 2m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 2m50s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 3m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 3m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m0s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 4m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m10s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 4m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m20s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-2-20231130170325157300000019, 4m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m30s elapsed]
module.eks.module.eks_managed_node_group["two"].aws_eks_node_group.this[0]: Destruction complete after 4m26s
module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0]: Destroying... [id=lt-081b2816ca90d55af]
module.eks.module.eks_managed_node_group["two"].aws_launch_template.this[0]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destroying... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441652000000009]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destroying... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441440600000007]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destroying... [id=node-group-2-eks-node-group-20231130165438756000000001-20231130165441643400000008]
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["two"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0]: Destroying... [id=node-group-2-eks-node-group-20231130165438756000000001]
module.eks.module.eks_managed_node_group["two"].aws_iam_role.this[0]: Destruction complete after 2s
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 3m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 3m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 3m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 4m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 4m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 4m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 4m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 5m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 5m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 5m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 5m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 6m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m40s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 6m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 6m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 6m50s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 7m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m0s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 8m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m10s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 8m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m20s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Still destroying... [id=education-eks-vOUQg0d3:node-group-1-20231130170325157300000017, 8m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m30s elapsed]
module.eks.module.eks_managed_node_group["one"].aws_eks_node_group.this[0]: Destruction complete after 8m24s
module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0]: Destroying... [id=lt-029d67d08b3fc0343]
module.eks.module.eks_managed_node_group["one"].aws_launch_template.this[0]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destroying... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441284900000006]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destroying... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441101000000004]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destroying... [id=node-group-1-eks-node-group-20231130165438756700000002-20231130165441282600000005]
module.eks.time_sleep.this[0]: Destroying... [id=2023-11-30T17:03:23Z]
module.eks.time_sleep.this[0]: Destruction complete after 0s
module.eks.aws_eks_cluster.this[0]: Destroying... [id=education-eks-vOUQg0d3]
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["one"].aws_iam_role_policy_attachment.this["arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"]: Destruction complete after 1s
module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0]: Destroying... [id=node-group-1-eks-node-group-20231130165438756700000002]
module.eks.module.eks_managed_node_group["one"].aws_iam_role.this[0]: Destruction complete after 1s
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 7m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 7m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 7m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 8m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 8m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 8m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m20s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 1m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m30s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 2m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 2m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 9m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 9m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 9m50s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 2m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m0s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 2m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m10s elapsed]
module.eks.aws_eks_cluster.this[0]: Still destroying... [id=education-eks-vOUQg0d3, 2m40s elapsed]
module.eks.aws_eks_cluster.this[0]: Destruction complete after 2m45s
module.vpc.aws_subnet.private[0]: Destroying... [id=subnet-041ce879edf62a575]
module.vpc.aws_subnet.private[2]: Destroying... [id=subnet-00a67b7cb5448e9dd]
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Destroying... [id=sgrule-153776101]
module.vpc.aws_subnet.private[1]: Destroying... [id=subnet-0c8ca28af86a12a6a]
module.eks.aws_cloudwatch_log_group.this[0]: Destroying... [id=/aws/eks/education-eks-vOUQg0d3/cluster]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Destroying... [id=sgrule-2022173418]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Destroying... [id=sgrule-902032001]
module.eks.aws_cloudwatch_log_group.this[0]: Destruction complete after 1s
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Destroying... [id=sgrule-2442938734]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m20s elapsed]
module.eks.aws_security_group_rule.node["ingress_self_coredns_tcp"]: Destruction complete after 1s
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Destroying... [id=sgrule-3683241332]
module.eks.aws_security_group_rule.cluster["ingress_nodes_443"]: Destruction complete after 2s
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Destroying... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544238080000000a]
module.vpc.aws_subnet.private[1]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Destroying... [id=sgrule-232965749]
module.vpc.aws_subnet.private[2]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["egress_all"]: Destroying... [id=sgrule-2857643913]
module.vpc.aws_subnet.private[0]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Destroying... [id=sgrule-3369464149]
module.eks.aws_security_group_rule.node["ingress_cluster_443"]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Destroying... [id=sgrule-2893333150]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSClusterPolicy"]: Destruction complete after 1s
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m20s elapsed]
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Destroying... [id=sgrule-710200228]
module.eks.aws_security_group_rule.node["ingress_self_coredns_udp"]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Destroying... [id=sgrule-315337442]
module.eks.aws_security_group_rule.node["ingress_cluster_6443_webhook"]: Destruction complete after 3s
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Destroying... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003-2023113016544240380000000b]
module.eks.aws_iam_role_policy_attachment.this["AmazonEKSVPCResourceController"]: Destruction complete after 0s
module.eks.module.kms.aws_kms_key.this[0]: Destroying... [id=1dd5669c-7d5b-44a5-a547-85d6782b36db]
module.eks.aws_security_group_rule.node["ingress_cluster_kubelet"]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["egress_all"]: Destruction complete after 3s
module.eks.module.kms.aws_kms_key.this[0]: Destruction complete after 1s
module.eks.aws_iam_role.this[0]: Destroying... [id=education-eks-vOUQg0d3-cluster-20231130165438758400000003]
module.eks.aws_security_group_rule.node["ingress_cluster_8443_webhook"]: Destruction complete after 4s
module.eks.aws_security_group_rule.node["ingress_cluster_9443_webhook"]: Destruction complete after 5s
module.eks.aws_iam_role.this[0]: Destruction complete after 2s
module.eks.aws_security_group_rule.node["ingress_nodes_ephemeral"]: Destruction complete after 4s
module.eks.aws_security_group_rule.node["ingress_cluster_4443_webhook"]: Destruction complete after 5s
module.eks.aws_security_group.cluster[0]: Destroying... [id=sg-03fc1f50409acf377]
module.eks.aws_security_group.node[0]: Destroying... [id=sg-002b4d5ce0511dac6]
module.eks.aws_security_group.cluster[0]: Destruction complete after 1s
module.eks.aws_security_group.node[0]: Destruction complete after 1s
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 10m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 10m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 10m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 11m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 11m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 11m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 12m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 12m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 12m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 13m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 13m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 13m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 14m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 14m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 14m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 15m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 15m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 15m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 16m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 16m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 16m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m0s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 17m50s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 17m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 17m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m30s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m40s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 18m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 18m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 18m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m0s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m10s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m10s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m10s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m20s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m20s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m20s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m30s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m30s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m40s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m40s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 19m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 19m50s elapsed]
module.vpc.aws_internet_gateway.this[0]: Still destroying... [id=igw-0f620616f8f44a3f7, 19m50s elapsed]
module.vpc.aws_subnet.public[2]: Still destroying... [id=subnet-078ba8caa49d21285, 20m0s elapsed]
module.vpc.aws_subnet.public[0]: Still destroying... [id=subnet-0500646d0d0be020e, 20m0s elapsed]
╷
│ Warning: EC2 Default Network ACL (acl-03d971568d75cef31) not deleted, removing from state
│ 
│ 
╵
╷
│ Error: deleting EC2 Subnet (subnet-078ba8caa49d21285): DependencyViolation: The subnet 'subnet-078ba8caa49d21285' has dependencies and cannot be deleted.
│ 	status code: 400, request id: 261fa734-a0d3-4f96-bc21-c2312077e2a7
│ 
│ 
╵
╷
│ Error: deleting EC2 Internet Gateway (igw-0f620616f8f44a3f7): detaching EC2 Internet Gateway (igw-0f620616f8f44a3f7) from VPC (vpc-0e081eeaaf3ae57dc): DependencyViolation: Network vpc-0e081eeaaf3ae57dc has some mapped public address(es). Please unmap those public address(es) before detaching the gateway.
│ 	status code: 400, request id: 6abbb305-28db-46ab-9be8-7f7e293f3b67
│ 
│ 
╵
╷
│ Error: deleting EC2 Subnet (subnet-0500646d0d0be020e): DependencyViolation: The subnet 'subnet-0500646d0d0be020e' has dependencies and cannot be deleted.
│ 	status code: 400, request id: b272efb5-aa71-483b-b2e5-cac229bae7cb
│ 
│ 
╵
]

===========================================================================================================================

# Cleanup # $HOME

===========================================================================================================================

% ls ~/.terraform.d
% rm -rf ~/.terraform.d


% ls ~/.kube
% rm -rf ~/.kube


% ls ~/.aws
% rm -rf ~/.aws

===========================================================================================================================
***************************************************************************************************************************
###########################################################################################################################

# AWS Management Console # Cleanup # Verification

###########################################################################################################################
***************************************************************************************************************************

https://aws.amazon.com

Sign in to the Console

Sign in using root user email

Root user
Account owner that performs tasks requiring unrestricted access.

Root user email address

Next

Root user sign in

Password

Sign in

[
# N. California # us-west-1 #

# Oregon # us-west-2 #
]

# Ohio # us-east-2 #

***************************************************************************************************************************

# EC2
# Instances (3) - Terminated
# Load balancers (3) - Delete
# Volumes (2) - Delete
# Security Groups (4/4) Delete 3 # 4 Default Security Group # Deleted with VPC - Delete

# VPC
# VPC - Delete
# DHCP option sets - Delete

# IAM
# IAM > Dashboard
# IAM > Users > terraform-aws-eks-iam-user
# Permissions policies (9/9) - Remove
# Delete terraform-aws-eks-iam-user

***************************************************************************************************************************
###########################################################################################################################